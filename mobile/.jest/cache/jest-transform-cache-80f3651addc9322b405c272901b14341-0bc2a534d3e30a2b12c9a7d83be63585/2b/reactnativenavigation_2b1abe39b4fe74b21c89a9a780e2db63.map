{"version":3,"names":["_utils","require","_routingInstrumentation","_utils2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","defaultOptions","routeChangeTimeoutMs","enableTabsInstrumentation","ReactNativeNavigationInstrumentation","_InternalRoutingInstr","_inherits2","_super","navigation","_this","options","length","undefined","_classCallCheck2","name","instrumentationName","_prevComponentEvent","_recentComponentIds","_navigation","_options","Object","assign","_createClass2","key","value","registerRoutingInstrumentation","listener","beforeNavigate","onConfirmRoute","_get2","events","registerCommandListener","_onNavigation","bind","registerBottomTabPressedListener","registerComponentWillAppearListener","_onComponentWillAppear","_latestTransaction","_discardLatestTransaction","onRouteWillChange","getBlankTransactionContext","_stateChangeTimeout","setTimeout","event","isSameComponent","componentId","_clearStateChangeTimeout","originalContext","toContext","routeHasBeenSeen","includes","data","route","componentName","hasBeenSeen","previousRoute","_a","updatedContext","tags","finalContext","_prepareFinalContext","updateWithContext","isCustomName","setName","customTransactionSource","defaultTransactionSource","_b","_onConfirmRoute","_beforeNavigate","logger","error","sampled","log","finish","clearTimeout","InternalRoutingInstrumentation","exports"],"sources":["../../../src/js/tracing/reactnativenavigation.ts"],"sourcesContent":["import type { Transaction as TransactionType, TransactionContext } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport type { EmitterSubscription } from 'react-native/Libraries/vendor/emitter/EventEmitter';\n\nimport type { OnConfirmRoute, TransactionCreator } from './routingInstrumentation';\nimport { InternalRoutingInstrumentation } from './routingInstrumentation';\nimport type { BeforeNavigate, RouteChangeContextData } from './types';\nimport { customTransactionSource, defaultTransactionSource, getBlankTransactionContext } from './utils';\n\ninterface ReactNativeNavigationOptions {\n  /**\n   * How long the instrumentation will wait for the route to mount after a change has been initiated,\n   * before the transaction is discarded.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  routeChangeTimeoutMs: number;\n  /**\n   * Instrumentation will create a transaction on tab change.\n   * By default only navigation commands create transactions.\n   *\n   * Default: true\n   */\n  enableTabsInstrumentation: boolean;\n}\n\nconst defaultOptions: ReactNativeNavigationOptions = {\n  routeChangeTimeoutMs: 1000,\n  enableTabsInstrumentation: true,\n};\n\ninterface ComponentEvent {\n  componentId: string;\n}\n\ntype ComponentType = 'Component' | 'TopBarTitle' | 'TopBarBackground' | 'TopBarButton';\n\nexport interface ComponentWillAppearEvent extends ComponentEvent {\n  componentName: string;\n  passProps?: Record<string | number | symbol, unknown>;\n  componentType: ComponentType;\n}\n\nexport interface EventSubscription {\n  remove(): void;\n}\n\nexport interface BottomTabPressedEvent {\n  tabIndex: number;\n}\n\nexport interface EventsRegistry {\n  registerComponentWillAppearListener(callback: (event: ComponentWillAppearEvent) => void): EmitterSubscription;\n  registerCommandListener(callback: (name: string, params: unknown) => void): EventSubscription;\n  registerBottomTabPressedListener(callback: (event: BottomTabPressedEvent) => void): EmitterSubscription;\n}\n\nexport interface NavigationDelegate {\n  events: () => EventsRegistry;\n}\n\n/**\n * Instrumentation for React Native Navigation. See docs or sample app for usage.\n *\n * How this works:\n * - `_onCommand` is called every time a commands happens and sets an IdleTransaction on the scope without any route context.\n * - `_onComponentWillAppear` is then called AFTER the state change happens due to a dispatch and sets the route context onto the active transaction.\n * - If `_onComponentWillAppear` isn't called within `options.routeChangeTimeoutMs` of the dispatch, then the transaction is not sampled and finished.\n */\nexport class ReactNativeNavigationInstrumentation extends InternalRoutingInstrumentation {\n  public static instrumentationName: string = 'react-native-navigation';\n\n  public readonly name: string = ReactNativeNavigationInstrumentation.instrumentationName;\n\n  private _navigation: NavigationDelegate;\n  private _options: ReactNativeNavigationOptions;\n\n  private _prevComponentEvent: ComponentWillAppearEvent | null = null;\n\n  private _latestTransaction?: TransactionType;\n  private _recentComponentIds: string[] = [];\n  private _stateChangeTimeout?: number | undefined;\n\n  public constructor(\n    /** The react native navigation `NavigationDelegate`. This is usually the import named `Navigation`. */\n    navigation: unknown,\n    options: Partial<ReactNativeNavigationOptions> = {},\n  ) {\n    super();\n\n    this._navigation = navigation as NavigationDelegate;\n\n    this._options = {\n      ...defaultOptions,\n      ...options,\n    };\n  }\n\n  /**\n   * Registers the event listeners for React Native Navigation\n   */\n  public registerRoutingInstrumentation(\n    listener: TransactionCreator,\n    beforeNavigate: BeforeNavigate,\n    onConfirmRoute: OnConfirmRoute,\n  ): void {\n    super.registerRoutingInstrumentation(listener, beforeNavigate, onConfirmRoute);\n\n    this._navigation.events().registerCommandListener(this._onNavigation.bind(this));\n\n    if (this._options.enableTabsInstrumentation) {\n      this._navigation.events().registerBottomTabPressedListener(this._onNavigation.bind(this));\n    }\n\n    this._navigation.events().registerComponentWillAppearListener(this._onComponentWillAppear.bind(this));\n  }\n\n  /**\n   * To be called when a navigation is initiated. (Command, BottomTabSelected, etc.)\n   */\n  private _onNavigation(): void {\n    if (this._latestTransaction) {\n      this._discardLatestTransaction();\n    }\n\n    this._latestTransaction = this.onRouteWillChange(\n      getBlankTransactionContext(ReactNativeNavigationInstrumentation.name),\n    );\n\n    this._stateChangeTimeout = setTimeout(\n      this._discardLatestTransaction.bind(this),\n      this._options.routeChangeTimeoutMs,\n    );\n  }\n\n  /**\n   * To be called AFTER the state has been changed to populate the transaction with the current route.\n   */\n  private _onComponentWillAppear(event: ComponentWillAppearEvent): void {\n    if (!this._latestTransaction) {\n      return;\n    }\n\n    // We ignore actions that pertain to the same screen.\n    const isSameComponent = this._prevComponentEvent && event.componentId === this._prevComponentEvent.componentId;\n    if (isSameComponent) {\n      this._discardLatestTransaction();\n      return;\n    }\n\n    this._clearStateChangeTimeout();\n\n    const originalContext = this._latestTransaction.toContext();\n    const routeHasBeenSeen = this._recentComponentIds.includes(event.componentId);\n\n    const data: RouteChangeContextData = {\n      ...originalContext.data,\n      route: {\n        ...event,\n        name: event.componentName,\n        hasBeenSeen: routeHasBeenSeen,\n      },\n      previousRoute: this._prevComponentEvent\n        ? {\n            ...this._prevComponentEvent,\n            name: this._prevComponentEvent?.componentName,\n          }\n        : null,\n    };\n\n    const updatedContext = {\n      ...originalContext,\n      name: event.componentName,\n      tags: {\n        ...originalContext.tags,\n        'routing.route.name': event.componentName,\n      },\n      data,\n    };\n\n    const finalContext = this._prepareFinalContext(updatedContext);\n    this._latestTransaction.updateWithContext(finalContext);\n\n    const isCustomName = updatedContext.name !== finalContext.name;\n    this._latestTransaction.setName(\n      finalContext.name,\n      isCustomName ? customTransactionSource : defaultTransactionSource,\n    );\n\n    this._onConfirmRoute?.(finalContext);\n    this._prevComponentEvent = event;\n\n    this._latestTransaction = undefined;\n  }\n\n  /** Creates final transaction context before confirmation */\n  private _prepareFinalContext(updatedContext: TransactionContext): TransactionContext {\n    let finalContext = this._beforeNavigate?.({ ...updatedContext });\n\n    // This block is to catch users not returning a transaction context\n    if (!finalContext) {\n      logger.error(\n        `[${ReactNativeNavigationInstrumentation.name}] beforeNavigate returned ${finalContext}, return context.sampled = false to not send transaction.`,\n      );\n\n      finalContext = {\n        ...updatedContext,\n        sampled: false,\n      };\n    }\n\n    if (finalContext.sampled === false) {\n      logger.log(\n        `[${ReactNativeNavigationInstrumentation.name}] Will not send transaction \"${finalContext.name}\" due to beforeNavigate.`,\n      );\n    }\n\n    return finalContext;\n  }\n\n  /** Cancels the latest transaction so it does not get sent to Sentry. */\n  private _discardLatestTransaction(): void {\n    if (this._latestTransaction) {\n      this._latestTransaction.sampled = false;\n      this._latestTransaction.finish();\n      this._latestTransaction = undefined;\n    }\n\n    this._clearStateChangeTimeout();\n  }\n\n  /** Cancels the latest transaction so it does not get sent to Sentry. */\n  private _clearStateChangeTimeout(): void {\n    if (typeof this._stateChangeTimeout !== 'undefined') {\n      clearTimeout(this._stateChangeTimeout);\n      this._stateChangeTimeout = undefined;\n    }\n  }\n}\n"],"mappings":"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"}