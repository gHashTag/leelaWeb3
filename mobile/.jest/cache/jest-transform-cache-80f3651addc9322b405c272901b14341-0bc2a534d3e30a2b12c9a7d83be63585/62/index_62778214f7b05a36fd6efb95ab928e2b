0e4e46e1ebb349cfd6c600703e761a70
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Gem/index.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gem = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var react_native_size_matters_1 = require("react-native-size-matters");
var images_1 = require("./images");
var Gem = function Gem(_ref) {
  var playerNumber = _ref.playerNumber,
    onPress = _ref.onPress;
  var container = styles.container,
    gems = styles.gems;
  var source = function source() {
    if (playerNumber >= 1 && playerNumber <= 6) {
      return images_1.ICONS[playerNumber - 1];
    } else {
      return images_1.ICONS[0];
    }
  };
  return (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
    onPress: onPress,
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: container,
      children: (0, _jsxRuntime.jsx)(react_native_1.Image, {
        style: gems,
        source: source(),
        testID: "gem-image"
      })
    })
  });
};
exports.Gem = Gem;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 2
  },
  gems: {
    width: (0, react_native_size_matters_1.ms)(42, 0.5),
    height: (0, react_native_size_matters_1.ms)(42, 0.5),
    borderRadius: (0, react_native_size_matters_1.ms)(42, 0.5) / 2
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiaW1hZ2VzXzEiLCJHZW0iLCJfcmVmIiwicGxheWVyTnVtYmVyIiwib25QcmVzcyIsImNvbnRhaW5lciIsInN0eWxlcyIsImdlbXMiLCJzb3VyY2UiLCJJQ09OUyIsIl9qc3hSdW50aW1lIiwianN4IiwiUHJlc3NhYmxlIiwiY2hpbGRyZW4iLCJWaWV3Iiwic3R5bGUiLCJJbWFnZSIsInRlc3RJRCIsImV4cG9ydHMiLCJTY2FsZWRTaGVldCIsImNyZWF0ZSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInpJbmRleCIsIndpZHRoIiwibXMiLCJoZWlnaHQiLCJib3JkZXJSYWRpdXMiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL0dlbS9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtJbWFnZSwgUHJlc3NhYmxlLCBWaWV3fSBmcm9tICdyZWFjdC1uYXRpdmUnXG5pbXBvcnQge1NjYWxlZFNoZWV0LCBtc30gZnJvbSAncmVhY3QtbmF0aXZlLXNpemUtbWF0dGVycydcbmltcG9ydCB7SUNPTlN9IGZyb20gJy4vaW1hZ2VzJ1xuXG5pbnRlcmZhY2UgR2VtUHJvcHMge1xuICBwbGF5ZXJOdW1iZXI6IG51bWJlclxuICBvblByZXNzOiAoKSA9PiB2b2lkXG59XG5cbmNvbnN0IEdlbTogUmVhY3QuRkM8R2VtUHJvcHM+ID0gKHtwbGF5ZXJOdW1iZXIsIG9uUHJlc3N9KSA9PiB7XG4gIGNvbnN0IHtjb250YWluZXIsIGdlbXN9ID0gc3R5bGVzXG5cbiAgY29uc3Qgc291cmNlID0gKCkgPT4ge1xuICAgIGlmIChwbGF5ZXJOdW1iZXIgPj0gMSAmJiBwbGF5ZXJOdW1iZXIgPD0gNikge1xuICAgICAgcmV0dXJuIElDT05TW3BsYXllck51bWJlciAtIDFdXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBJQ09OU1swXSAvLyBSZXBsYWNlIHdpdGggdGhlIGRlZmF1bHQgaW1hZ2VcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxQcmVzc2FibGUgb25QcmVzcz17b25QcmVzc30+XG4gICAgICA8VmlldyBzdHlsZT17Y29udGFpbmVyfT5cbiAgICAgICAgPEltYWdlIHN0eWxlPXtnZW1zfSBzb3VyY2U9e3NvdXJjZSgpfSB0ZXN0SUQ9XCJnZW0taW1hZ2VcIiAvPlxuICAgICAgPC9WaWV3PlxuICAgIDwvUHJlc3NhYmxlPlxuICApXG59XG5cbmNvbnN0IHN0eWxlcyA9IFNjYWxlZFNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICB6SW5kZXg6IDIsXG4gIH0sXG4gIGdlbXM6IHtcbiAgICB3aWR0aDogbXMoNDIsIDAuNSksXG4gICAgaGVpZ2h0OiBtcyg0MiwgMC41KSxcbiAgICBib3JkZXJSYWRpdXM6IG1zKDQyLCAwLjUpIC8gMixcbiAgfSxcbn0pXG5cbmV4cG9ydCB7R2VtfVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsMkJBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLFFBQUEsR0FBQUgsT0FBQTtBQU9BLElBQU1JLEdBQUcsR0FBdUIsU0FBMUJBLEdBQUdBLENBQUFDLElBQUEsRUFBbUQ7RUFBQSxJQUExQkMsWUFBWSxHQUFBRCxJQUFBLENBQVpDLFlBQVk7SUFBRUMsT0FBTyxHQUFBRixJQUFBLENBQVBFLE9BQU87RUFDckQsSUFBT0MsU0FBUyxHQUFVQyxNQUFNLENBQXpCRCxTQUFTO0lBQUVFLElBQUksR0FBSUQsTUFBTSxDQUFkQyxJQUFJO0VBRXRCLElBQU1DLE1BQU0sR0FBRyxTQUFUQSxNQUFNQSxDQUFBLEVBQVE7SUFDbEIsSUFBSUwsWUFBWSxJQUFJLENBQUMsSUFBSUEsWUFBWSxJQUFJLENBQUMsRUFBRTtNQUMxQyxPQUFPSCxRQUFBLENBQUFTLEtBQUssQ0FBQ04sWUFBWSxHQUFHLENBQUMsQ0FBQztLQUMvQixNQUFNO01BQ0wsT0FBT0gsUUFBQSxDQUFBUyxLQUFLLENBQUMsQ0FBQyxDQUFDOztFQUVuQixDQUFDO0VBRUQsT0FDRSxJQUFBQyxXQUFBLENBQUFDLEdBQUEsRUFBQ2IsY0FBQSxDQUFBYyxTQUFTO0lBQUNSLE9BQU8sRUFBRUEsT0FBUTtJQUFBUyxRQUFBLEVBQzFCLElBQUFILFdBQUEsQ0FBQUMsR0FBQSxFQUFDYixjQUFBLENBQUFnQixJQUFJO01BQUNDLEtBQUssRUFBRVYsU0FBVTtNQUFBUSxRQUFBLEVBQ3JCLElBQUFILFdBQUEsQ0FBQUMsR0FBQSxFQUFDYixjQUFBLENBQUFrQixLQUFLO1FBQUNELEtBQUssRUFBRVIsSUFBSztRQUFDQyxNQUFNLEVBQUVBLE1BQU0sRUFBRztRQUFDUyxNQUFNLEVBQUM7TUFBVztJQUMxRCxDQUFNO0VBQ1IsQ0FBVyxDQUFDO0FBRWhCLENBQUM7QUFlT0MsT0FBQSxDQUFBakIsR0FBQSxHQUFBQSxHQUFBO0FBYlIsSUFBTUssTUFBTSxHQUFHUCwyQkFBQSxDQUFBb0IsV0FBVyxDQUFDQyxNQUFNLENBQUM7RUFDaENmLFNBQVMsRUFBRTtJQUNUZ0IsVUFBVSxFQUFFLFFBQVE7SUFDcEJDLGNBQWMsRUFBRSxRQUFRO0lBQ3hCQyxNQUFNLEVBQUU7R0FDVDtFQUNEaEIsSUFBSSxFQUFFO0lBQ0ppQixLQUFLLEVBQUUsSUFBQXpCLDJCQUFBLENBQUEwQixFQUFFLEVBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQztJQUNsQkMsTUFBTSxFQUFFLElBQUEzQiwyQkFBQSxDQUFBMEIsRUFBRSxFQUFDLEVBQUUsRUFBRSxHQUFHLENBQUM7SUFDbkJFLFlBQVksRUFBRSxJQUFBNUIsMkJBQUEsQ0FBQTBCLEVBQUUsRUFBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLEdBQUc7O0NBRS9CLENBQUMifQ==