{"version":3,"names":["react_1","__importStar","require","react_native_1","react_native_size_matters_1","constants_1","Gem_1","images_1","marginTop","H","W","imageHeight","s","maxImageHeight","ms","imageTopMargin","Math","min","curImageHeight","imageWidth","maxImageWidth","curImageWidth","GameBoard","_ref","players","scheme","useColorScheme","playerPositions","useMemo","positions","forEach","player","plan","id","uri","imgObj","_images_1$ICONS$find","image","ICONS","find","x","title","path","_react_native_1$Image","Image","resolveAssetSource","width","height","aspect","rows","_jsxRuntime","jsxs","View","style","styles","imageContainer","testID","children","jsx","source","bgImage","resizeMode","gameBoardContainer","container","map","a","i","row","b","index","box","Gem","planNumber","exports","StyleSheet","create","alignSelf","alignItems","flexDirection","maxHeight","maxWidth","marginVertical","marginHorizontal","justifyContent","borderRadius","position","top","mvs"],"sources":["/Users/playra/LeelaAiWeb3/src/components/GameBoard/index.tsx"],"sourcesContent":["import React, {useMemo} from 'react'\nimport {Image, StyleSheet, View, useColorScheme} from 'react-native'\nimport {ms, mvs, s} from 'react-native-size-matters'\n\nimport {H, W} from '../../constants'\nimport {Gem} from '../Gem'\nimport {ICONS} from './images'\n\ninterface Player {\n  id: number\n  plan: number\n  uri: string | number\n}\n\ninterface GameBoardProps {\n  players: Player[]\n}\n\nconst marginTop = H - W > 350 ? 20 : 0\n\nconst imageHeight = s(248) + s(32)\nconst maxImageHeight = ms(248, 0.5) + s(32)\n\nconst imageTopMargin = Math.min(ms(27, 0.5), s(27))\nconst curImageHeight = Math.min(maxImageHeight, imageHeight) + imageTopMargin\n\nconst imageWidth = s(279) + s(18)\nconst maxImageWidth = ms(279, 0.5) + s(18)\nconst curImageWidth = imageWidth >= maxImageWidth ? maxImageWidth : imageWidth\n\nconst GameBoard: React.FC<GameBoardProps> = ({players}) => {\n  const scheme = useColorScheme()\n\n  const playerPositions = useMemo(() => {\n    const positions: {[key: number]: {id: number; uri: string | number}} = {}\n    players.forEach(player => {\n      positions[player.plan] = {id: player.id, uri: player.uri}\n    })\n    return positions\n  }, [players])\n\n  const imgObj = useMemo(() => {\n    const image = ICONS.find(x => {\n      return x.title === scheme\n    })?.path\n    if (image) {\n      const {width, height} = Image.resolveAssetSource(image)\n      const aspect = width / height\n      return {image, aspect}\n    } else {\n      return {image: '', aspect: 1}\n    }\n  }, [scheme])\n\n  const rows = [\n    [72, 71, 70, 69, 68, 67, 66, 65, 64],\n    [55, 56, 57, 58, 59, 60, 61, 62, 63],\n    [54, 53, 52, 51, 50, 49, 48, 47, 46],\n    [37, 38, 39, 40, 41, 42, 43, 44, 45],\n    [36, 35, 34, 33, 32, 31, 30, 29, 28],\n    [19, 20, 21, 22, 23, 24, 25, 26, 27],\n    [18, 17, 16, 15, 14, 13, 12, 11, 10],\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n  ]\n\n  return (\n    <View\n      style={[styles.imageContainer, {width: curImageHeight * imgObj.aspect}]}\n      testID=\"gem-container\">\n      <Image source={imgObj.image} style={styles.bgImage} resizeMode=\"cover\" />\n      <View style={styles.gameBoardContainer}>\n        <View style={styles.container}>\n          {rows.map((a, i) => (\n            <View style={styles.row} key={i}>\n              {a.map((b, index) => (\n                <View key={index} style={styles.box}>\n                  <Gem planNumber={b} player={playerPositions[b]} />\n                </View>\n              ))}\n            </View>\n          ))}\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: imageTopMargin,\n  },\n  imageContainer: {\n    height: curImageHeight,\n    alignSelf: 'center',\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  gameBoardContainer: {\n    width: curImageWidth,\n    height: curImageHeight,\n    marginTop,\n  },\n  box: {\n    width: s(31),\n    height: s(31),\n    maxHeight: ms(31, 0.5),\n    maxWidth: ms(31, 0.5),\n    marginVertical: s(2),\n    marginHorizontal: s(1),\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: s(31) / 2,\n  },\n  bgImage: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: mvs(33, 1.6) - imageTopMargin,\n  },\n})\n\nexport {GameBoard}\n"],"mappings":"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"}