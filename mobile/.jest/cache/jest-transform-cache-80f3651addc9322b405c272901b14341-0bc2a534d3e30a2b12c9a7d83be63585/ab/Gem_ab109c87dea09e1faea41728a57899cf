f0c61c1c5ee79e4f31a845f0122899b2
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Gem/Gem.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gem = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var cons_1 = require("../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var Text_1 = require("../Text/Text");
var Gem = function Gem(_ref) {
  var player = _ref.player,
    planNumber = _ref.planNumber,
    onPress = _ref.onPress;
  var source;
  if (player != null && player.avatar) {
    if (typeof player.avatar === 'string' && player.avatar !== '') {
      source = {
        uri: player.avatar
      };
    } else if (typeof player.avatar === 'number') {
      source = player.avatar;
    }
  }
  var isNumberVisible = !player && planNumber !== 68;
  return (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
    onPress: onPress,
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: styles.container,
      testID: "gem-container",
      children: isNumberVisible ? (0, _jsxRuntime.jsx)(react_native_1.View, {
        style: [styles.circle, styles.gems],
        testID: "gem-number",
        children: (0, _jsxRuntime.jsx)(Text_1.Text, {
          h: 'h4',
          title: planNumber.toString(),
          oneColor: cons_1.gray,
          testID: "gem-text"
        })
      }) : (0, _jsxRuntime.jsx)(react_native_1.View, {
        style: [styles.imgStyle, {
          zIndex: player == null ? void 0 : player.id
        }],
        children: source && (0, _jsxRuntime.jsx)(react_native_1.Image, {
          style: styles.gems,
          source: source,
          testID: "player-gem-image"
        })
      })
    })
  });
};
exports.Gem = Gem;
var styles = react_native_1.StyleSheet.create({
  circle: {
    alignItems: 'center',
    backgroundColor: cons_1.transparent,
    borderRadius: (0, react_native_size_matters_1.ms)(44) / 2,
    height: (0, react_native_size_matters_1.ms)(44),
    justifyContent: 'center',
    width: (0, react_native_size_matters_1.ms)(44)
  },
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  gems: {
    borderRadius: (0, react_native_size_matters_1.ms)(42, 0.5) / 2,
    height: (0, react_native_size_matters_1.ms)(42, 0.5),
    width: (0, react_native_size_matters_1.ms)(42, 0.5)
  },
  imgStyle: {
    position: 'absolute'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiY29uc18xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiVGV4dF8xIiwiR2VtIiwiX3JlZiIsInBsYXllciIsInBsYW5OdW1iZXIiLCJvblByZXNzIiwic291cmNlIiwiYXZhdGFyIiwidXJpIiwiaXNOdW1iZXJWaXNpYmxlIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJQcmVzc2FibGUiLCJjaGlsZHJlbiIsIlZpZXciLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsInRlc3RJRCIsImNpcmNsZSIsImdlbXMiLCJUZXh0IiwiaCIsInRpdGxlIiwidG9TdHJpbmciLCJvbmVDb2xvciIsImdyYXkiLCJpbWdTdHlsZSIsInpJbmRleCIsImlkIiwiSW1hZ2UiLCJleHBvcnRzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImFsaWduSXRlbXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0cmFuc3BhcmVudCIsImJvcmRlclJhZGl1cyIsIm1zIiwiaGVpZ2h0IiwianVzdGlmeUNvbnRlbnQiLCJ3aWR0aCIsInBvc2l0aW9uIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9HZW0vR2VtLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IFZpZXcsIEltYWdlLCBQcmVzc2FibGUsIFN0eWxlU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnXG5cbmltcG9ydCB7IGdyYXksIHRyYW5zcGFyZW50IH0gZnJvbSAnY29ucydcbmltcG9ydCB7IG1zIH0gZnJvbSAncmVhY3QtbmF0aXZlLXNpemUtbWF0dGVycydcbmltcG9ydCB7IEdlbVByb3BzIH0gZnJvbSAndHlwZXMnXG5cbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi9UZXh0L1RleHQnXG5cbmNvbnN0IEdlbTogUmVhY3QuRkM8R2VtUHJvcHM+ID0gKHsgcGxheWVyLCBwbGFuTnVtYmVyLCBvblByZXNzIH0pID0+IHtcbiAgbGV0IHNvdXJjZVxuXG4gIGlmIChwbGF5ZXI/LmF2YXRhcikge1xuICAgIGlmICh0eXBlb2YgcGxheWVyLmF2YXRhciA9PT0gJ3N0cmluZycgJiYgcGxheWVyLmF2YXRhciAhPT0gJycpIHtcbiAgICAgIHNvdXJjZSA9IHsgdXJpOiBwbGF5ZXIuYXZhdGFyIH1cbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBwbGF5ZXIuYXZhdGFyID09PSAnbnVtYmVyJykge1xuICAgICAgc291cmNlID0gcGxheWVyLmF2YXRhclxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGlzTnVtYmVyVmlzaWJsZSA9ICFwbGF5ZXIgJiYgcGxhbk51bWJlciAhPT0gNjhcblxuICByZXR1cm4gKFxuICAgIDxQcmVzc2FibGUgb25QcmVzcz17b25QcmVzc30+XG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0gdGVzdElEPVwiZ2VtLWNvbnRhaW5lclwiPlxuICAgICAgICB7aXNOdW1iZXJWaXNpYmxlID8gKFxuICAgICAgICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLmNpcmNsZSwgc3R5bGVzLmdlbXNdfSB0ZXN0SUQ9XCJnZW0tbnVtYmVyXCI+XG4gICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICBoPXsnaDQnfVxuICAgICAgICAgICAgICB0aXRsZT17cGxhbk51bWJlci50b1N0cmluZygpfVxuICAgICAgICAgICAgICBvbmVDb2xvcj17Z3JheX1cbiAgICAgICAgICAgICAgdGVzdElEPVwiZ2VtLXRleHRcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPFZpZXcgc3R5bGU9e1tzdHlsZXMuaW1nU3R5bGUsIHsgekluZGV4OiBwbGF5ZXI/LmlkIH1dfT5cbiAgICAgICAgICAgIHtzb3VyY2UgJiYgKFxuICAgICAgICAgICAgICA8SW1hZ2VcbiAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmdlbXN9XG4gICAgICAgICAgICAgICAgc291cmNlPXtzb3VyY2V9XG4gICAgICAgICAgICAgICAgdGVzdElEPVwicGxheWVyLWdlbS1pbWFnZVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgKX1cbiAgICAgIDwvVmlldz5cbiAgICA8L1ByZXNzYWJsZT5cbiAgKVxufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNpcmNsZToge1xuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGJhY2tncm91bmRDb2xvcjogdHJhbnNwYXJlbnQsXG4gICAgYm9yZGVyUmFkaXVzOiBtcyg0NCkgLyAyLFxuICAgIGhlaWdodDogbXMoNDQpLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICB3aWR0aDogbXMoNDQpLFxuICB9LFxuICBjb250YWluZXI6IHtcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gIH0sXG4gIGdlbXM6IHtcbiAgICBib3JkZXJSYWRpdXM6IG1zKDQyLCAwLjUpIC8gMixcbiAgICBoZWlnaHQ6IG1zKDQyLCAwLjUpLFxuICAgIHdpZHRoOiBtcyg0MiwgMC41KSxcbiAgfSxcbiAgaW1nU3R5bGU6IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgfSxcbn0pXG5cbmV4cG9ydCB7IEdlbSB9XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxjQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxNQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRywyQkFBQSxHQUFBSCxPQUFBO0FBR0EsSUFBQUksTUFBQSxHQUFBSixPQUFBO0FBRUEsSUFBTUssR0FBRyxHQUF1QixT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