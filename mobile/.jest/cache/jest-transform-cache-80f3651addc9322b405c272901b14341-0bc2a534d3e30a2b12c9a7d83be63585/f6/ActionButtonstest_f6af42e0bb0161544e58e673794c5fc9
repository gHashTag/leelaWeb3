2eb68d1dc4822c738be6bea54553f689
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/ActionButtons/ActionButtons.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var ActionButtons_1 = require("./ActionButtons");
var isLiked = false;
describe('ActionButtons Component', function () {
  it('renders admin menu button if isAdmin is true', function () {
    var handleAdminMenu = jest.fn();
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: true,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: handleAdminMenu,
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        handleShareLink: function handleShareLink() {},
        isLiked: isLiked
      })),
      getByTestId = _ref.getByTestId;
    var adminMenuButton = getByTestId('admin-menu-button');
    expect(adminMenuButton).toBeTruthy();
  });
  it('renders comment and like buttons', function () {
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref2.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    expect(commentButton).toBeTruthy();
    expect(likeButton).toBeTruthy();
  });
  it('applies correct styles to comment and like buttons', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref3.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    var commentButtonStyles = commentButton.props.style;
    var likeButtonStyles = likeButton.props.style;
    expect(commentButtonStyles).toMatchObject({
      justifyContent: 'flex-start'
    });
    expect(likeButtonStyles).toMatchObject({});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiQWN0aW9uQnV0dG9uc18xIiwiaXNMaWtlZCIsImRlc2NyaWJlIiwiaXQiLCJoYW5kbGVBZG1pbk1lbnUiLCJqZXN0IiwiZm4iLCJfcmVmIiwicmVuZGVyIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJBY3Rpb25CdXR0b25zIiwiaXNBZG1pbiIsImNvbW1Db3VudCIsImxpa2VDb3VudCIsImhhbmRsZUNvbW1lbnQiLCJoYW5kbGVMaWtlIiwiaGFuZGxlU2hhcmVMaW5rIiwiZ2V0QnlUZXN0SWQiLCJhZG1pbk1lbnVCdXR0b24iLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiX3JlZjIiLCJjb21tZW50QnV0dG9uIiwiaGVhcnQiLCJsaWtlQnV0dG9uIiwiX3JlZjMiLCJjb21tZW50QnV0dG9uU3R5bGVzIiwicHJvcHMiLCJzdHlsZSIsImxpa2VCdXR0b25TdHlsZXMiLCJ0b01hdGNoT2JqZWN0IiwianVzdGlmeUNvbnRlbnQiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL0FjdGlvbkJ1dHRvbnMvQWN0aW9uQnV0dG9ucy50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IFN0eWxlUHJvcCwgVmlld1N0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJ1xuXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSdcbmltcG9ydCBFU3R5bGVTaGVldCBmcm9tICdyZWFjdC1uYXRpdmUtZXh0ZW5kZWQtc3R5bGVzaGVldCdcblxuaW1wb3J0IHsgQWN0aW9uQnV0dG9ucyB9IGZyb20gJy4vQWN0aW9uQnV0dG9ucydcbmNvbnN0IGlzTGlrZWQgPSBmYWxzZVxuXG5kZXNjcmliZSgnQWN0aW9uQnV0dG9ucyBDb21wb25lbnQnLCAoKSA9PiB7XG4gIGl0KCdyZW5kZXJzIGFkbWluIG1lbnUgYnV0dG9uIGlmIGlzQWRtaW4gaXMgdHJ1ZScsICgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVBZG1pbk1lbnUgPSBqZXN0LmZuKClcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QWN0aW9uQnV0dG9uc1xuICAgICAgICBpc0FkbWluPXt0cnVlfVxuICAgICAgICBjb21tQ291bnQ9ezV9XG4gICAgICAgIGxpa2VDb3VudD17MTB9XG4gICAgICAgIGhhbmRsZUFkbWluTWVudT17aGFuZGxlQWRtaW5NZW51fVxuICAgICAgICBoYW5kbGVDb21tZW50PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZVNoYXJlTGluaz17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2lzTGlrZWR9XG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgYWRtaW5NZW51QnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2FkbWluLW1lbnUtYnV0dG9uJylcbiAgICBleHBlY3QoYWRtaW5NZW51QnV0dG9uKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgncmVuZGVycyBjb21tZW50IGFuZCBsaWtlIGJ1dHRvbnMnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPEFjdGlvbkJ1dHRvbnNcbiAgICAgICAgaXNBZG1pbj17ZmFsc2V9XG4gICAgICAgIGNvbW1Db3VudD17NX1cbiAgICAgICAgbGlrZUNvdW50PXsxMH1cbiAgICAgICAgaGFuZGxlQWRtaW5NZW51PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlQ29tbWVudD17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZUxpa2U9eygpID0+IHt9fVxuICAgICAgICBpc0xpa2VkPXtpc0xpa2VkfVxuICAgICAgICBoYW5kbGVTaGFyZUxpbms9eygpID0+IHt9fVxuICAgICAgLz4sXG4gICAgKVxuICAgIGNvbnN0IGNvbW1lbnRCdXR0b24gPSBnZXRCeVRlc3RJZCgnY29tbWVudC1idXR0b24nKVxuICAgIGNvbnN0IGhlYXJ0ID0gaXNMaWtlZCA/ICdoZWFydCcgOiAnaGVhcnQtb3V0bGluZSdcbiAgICBjb25zdCBsaWtlQnV0dG9uID0gZ2V0QnlUZXN0SWQoaGVhcnQpXG4gICAgZXhwZWN0KGNvbW1lbnRCdXR0b24pLnRvQmVUcnV0aHkoKVxuICAgIGV4cGVjdChsaWtlQnV0dG9uKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgnYXBwbGllcyBjb3JyZWN0IHN0eWxlcyB0byBjb21tZW50IGFuZCBsaWtlIGJ1dHRvbnMnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPEFjdGlvbkJ1dHRvbnNcbiAgICAgICAgaXNBZG1pbj17ZmFsc2V9XG4gICAgICAgIGNvbW1Db3VudD17NX1cbiAgICAgICAgbGlrZUNvdW50PXsxMH1cbiAgICAgICAgaGFuZGxlQWRtaW5NZW51PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlQ29tbWVudD17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZUxpa2U9eygpID0+IHt9fVxuICAgICAgICBpc0xpa2VkPXtpc0xpa2VkfVxuICAgICAgICBoYW5kbGVTaGFyZUxpbms9eygpID0+IHt9fVxuICAgICAgLz4sXG4gICAgKVxuICAgIGNvbnN0IGNvbW1lbnRCdXR0b24gPSBnZXRCeVRlc3RJZCgnY29tbWVudC1idXR0b24nKVxuICAgIGNvbnN0IGhlYXJ0ID0gaXNMaWtlZCA/ICdoZWFydCcgOiAnaGVhcnQtb3V0bGluZSdcbiAgICBjb25zdCBsaWtlQnV0dG9uID0gZ2V0QnlUZXN0SWQoaGVhcnQpXG4gICAgY29uc3QgY29tbWVudEJ1dHRvblN0eWxlcyA9IGNvbW1lbnRCdXR0b24ucHJvcHNcbiAgICAgIC5zdHlsZSBhcyBTdHlsZVByb3A8Vmlld1N0eWxlPlxuICAgIGNvbnN0IGxpa2VCdXR0b25TdHlsZXMgPSBsaWtlQnV0dG9uLnByb3BzLnN0eWxlIGFzIFN0eWxlUHJvcDxWaWV3U3R5bGU+XG5cbiAgICBleHBlY3QoY29tbWVudEJ1dHRvblN0eWxlcykudG9NYXRjaE9iamVjdCh7XG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnLCAvLyDQntC20LjQtNCw0LXQvNGL0Lkg0YHRgtC40LvRjCDQtNC70Y8g0LrQvdC+0L/QutC4INC60L7QvNC80LXQvdGC0LDRgNC40Y9cbiAgICB9KVxuXG4gICAgZXhwZWN0KGxpa2VCdXR0b25TdHlsZXMpLnRvTWF0Y2hPYmplY3Qoe1xuICAgICAgLy8g0LLQsNGIINC+0LbQuNC00LDQtdC80YvQuSDRgdGC0LjQu9GMINC00LvRjyDQutC90L7Qv9C60Lgg0LvQsNC50LrQsFxuICAgIH0pXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFJQSxJQUFBQyxjQUFBLEdBQUFELE9BQUE7QUFHQSxJQUFBRSxlQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFNRyxPQUFPLEdBQUcsS0FBSztBQUVyQkMsUUFBUSxDQUFDLHlCQUF5QixFQUFFLFlBQUs7RUFDdkNDLEVBQUUsQ0FBQyw4Q0FBOEMsRUFBRSxZQUFLO0lBQ3RELElBQU1DLGVBQWUsR0FBR0MsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDakMsSUFBQUMsSUFBQSxHQUF3QixJQUFBUixjQUFBLENBQUFTLE1BQU0sRUFDNUIsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNWLGVBQUEsQ0FBQVcsYUFBYTtRQUNaQyxPQUFPLEVBQUUsSUFBSztRQUNkQyxTQUFTLEVBQUUsQ0FBRTtRQUNiQyxTQUFTLEVBQUUsRUFBRztRQUNkVixlQUFlLEVBQUVBLGVBQWdCO1FBQ2pDVyxhQUFhLEVBQUUsU0FBQUEsY0FBQSxFQUFLLENBQUUsQ0FBRTtRQUN4QkMsVUFBVSxFQUFFLFNBQUFBLFdBQUEsRUFBSyxDQUFFLENBQUU7UUFDckJD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