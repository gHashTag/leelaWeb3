{"version":3,"names":["react_1","__importDefault","require","react_native_1","__1","playerWithNumber","id","plan","avatar","playerWithStringAvatar","playerWithNumberAvatar","describe","test","_ref","render","_jsxRuntime","jsx","Gem","planNumber","onPress","getByTestId","gemImage","expect","toBeDefined","onPressMock","jest","fn","_ref2","gemContainer","fireEvent","press","toHaveBeenCalled","_ref3","player","queryByTestId","numberGem","toBeTruthy","imageGem","toBeFalsy"],"sources":["/Users/playra/LeelaAiWeb3/src/components/Gem/Gem.test.tsx"],"sourcesContent":["// src/components/Gem/Gem.test.tsx\nimport React from 'react'\n\nimport { render, fireEvent } from '@testing-library/react-native'\n\nimport { Gem } from '../'\n\nconst playerWithNumber = {\n  id: 1,\n  plan: 68,\n  avatar: '',\n}\n\nconst playerWithStringAvatar = {\n  id: 2,\n  plan: 72,\n  avatar: 'https://example.com/avatar.jpg',\n}\n\nconst playerWithNumberAvatar = {\n  id: 3,\n  plan: 34,\n  avatar: 106,\n}\n\ndescribe('Gem Component', () => {\n  test('should have the correct testID prop', () => {\n    const { getByTestId } = render(<Gem planNumber={5} onPress={() => {}} />)\n    const gemImage = getByTestId('gem-image')\n    expect(gemImage).toBeDefined()\n  })\n\n  test('should call the onPress function when pressed', () => {\n    const onPressMock = jest.fn()\n    const { getByTestId } = render(<Gem planNumber={5} onPress={onPressMock} />)\n    const gemContainer = getByTestId('gem-container')\n    fireEvent.press(gemContainer)\n    expect(onPressMock).toHaveBeenCalled()\n  })\n\n  test('should render number for player with plan number 68', () => {\n    const { queryByTestId } = render(\n      <Gem player={playerWithNumber} planNumber={68} />,\n    )\n\n    const numberGem = queryByTestId('gem-image')\n    expect(numberGem).toBeTruthy()\n\n    const imageGem = queryByTestId('player-gem-image')\n    expect(imageGem).toBeFalsy()\n  })\n})\n"],"mappings":";;;;;;;;;;;;;AACA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAD,OAAA;AAEA,IAAAE,GAAA,GAAAF,OAAA;AAEA,IAAMG,gBAAgB,GAAG;EACvBC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;CACT;AAED,IAAMC,sBAAsB,GAAG;EAC7BH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;CACT;AAED,IAAME,sBAAsB,GAAG;EAC7BJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;CACT;AAEDG,QAAQ,CAAC,eAAe,EAAE,YAAK;EAC7BC,IAAI,CAAC,qCAAqC,EAAE,YAAK;IAC/C,IAAAC,IAAA,GAAwB,IAAAV,cAAA,CAAAW,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACZ,GAAA,CAAAa,GAAG;QAACC,UAAU,EAAE,CAAE;QAACC,OAAO,EAAE,SAAAA,QAAA,EAAK,CAAE;MAAE,EAAG,CAAC;MAAjEC,WAAW,GAAAP,IAAA,CAAXO,WAAW;IACnB,IAAMC,QAAQ,GAAGD,WAAW,CAAC,WAAW,CAAC;IACzCE,MAAM,CAACD,QAAQ,CAAC,CAACE,WAAW,EAAE;EAChC,CAAC,CAAC;EAEFX,IAAI,CAAC,+CAA+C,EAAE,YAAK;IACzD,IAAMY,WAAW,GAAGC,IAAI,CAACC,EAAE,EAAE;IAC7B,IAAAC,KAAA,GAAwB,IAAAxB,cAAA,CAAAW,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACZ,GAAA,CAAAa,GAAG;QAACC,UAAU,EAAE,CAAE;QAACC,OAAO,EAAEK;MAAY,EAAG,CAAC;MAApEJ,WAAW,GAAAO,KAAA,CAAXP,WAAW;IACnB,IAAMQ,YAAY,GAAGR,WAAW,CAAC,eAAe,CAAC;IACjDjB,cAAA,CAAA0B,SAAS,CAACC,KAAK,CAACF,YAAY,CAAC;IAC7BN,MAAM,CAACE,WAAW,CAAC,CAACO,gBAAgB,EAAE;EACxC,CAAC,CAAC;EAEFnB,IAAI,CAAC,qDAAqD,EAAE,YAAK;IAC/D,IAAAoB,KAAA,GAA0B,IAAA7B,cAAA,CAAAW,MAAM,EAC9B,IAAAC,WAAA,CAAAC,GAAA,EAACZ,GAAA,CAAAa,GAAG;QAACgB,MAAM,EAAE5B,gBAAiB;QAACa,UAAU,EAAE;MAAG,EAAG,CAClD;MAFOgB,aAAa,GAAAF,KAAA,CAAbE,aAAa;IAIrB,IAAMC,SAAS,GAAGD,aAAa,CAAC,WAAW,CAAC;IAC5CZ,MAAM,CAACa,SAAS,CAAC,CAACC,UAAU,EAAE;IAE9B,IAAMC,QAAQ,GAAGH,aAAa,CAAC,kBAAkB,CAAC;IAClDZ,MAAM,CAACe,QAAQ,CAAC,CAACC,SAAS,EAAE;EAC9B,CAAC,CAAC;AACJ,CAAC,CAAC"}