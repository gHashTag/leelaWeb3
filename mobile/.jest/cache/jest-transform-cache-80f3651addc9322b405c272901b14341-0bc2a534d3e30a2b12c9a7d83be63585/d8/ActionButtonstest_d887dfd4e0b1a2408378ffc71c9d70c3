d2d4f5ab5c55588dce5df7ab93c5481d
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/ActionButtons/ActionButtons.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var ActionButtons_1 = require("./ActionButtons");
var isLiked = false;
describe('ActionButtons Component', function () {
  it('renders admin menu button if isAdmin is true', function () {
    var handleAdminMenu = jest.fn();
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: true,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: handleAdminMenu,
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        handleShareLink: function handleShareLink() {},
        isLiked: isLiked
      })),
      getByTestId = _ref.getByTestId;
    var adminMenuButton = getByTestId('admin-menu-button');
    expect(adminMenuButton).toBeTruthy();
  });
  it('renders comment and like buttons', function () {
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref2.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    expect(commentButton).toBeTruthy();
    expect(likeButton).toBeTruthy();
  });
  it('applies correct styles to comment and like buttons', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref3.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    var commentButtonStyles = commentButton.props.style;
    var likeButtonStyles = likeButton.props.style;
    expect(commentButtonStyles).toMatchObject({
      justifyContent: 'flex-start'
    });
    expect(likeButtonStyles).toMatchObject({});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiQWN0aW9uQnV0dG9uc18xIiwiaXNMaWtlZCIsImRlc2NyaWJlIiwiaXQiLCJoYW5kbGVBZG1pbk1lbnUiLCJqZXN0IiwiZm4iLCJfcmVmIiwicmVuZGVyIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJBY3Rpb25CdXR0b25zIiwiaXNBZG1pbiIsImNvbW1Db3VudCIsImxpa2VDb3VudCIsImhhbmRsZUNvbW1lbnQiLCJoYW5kbGVMaWtlIiwiaGFuZGxlU2hhcmVMaW5rIiwiZ2V0QnlUZXN0SWQiLCJhZG1pbk1lbnVCdXR0b24iLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiX3JlZjIiLCJjb21tZW50QnV0dG9uIiwiaGVhcnQiLCJsaWtlQnV0dG9uIiwiX3JlZjMiLCJjb21tZW50QnV0dG9uU3R5bGVzIiwicHJvcHMiLCJzdHlsZSIsImxpa2VCdXR0b25TdHlsZXMiLCJ0b01hdGNoT2JqZWN0IiwianVzdGlmeUNvbnRlbnQiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL0FjdGlvbkJ1dHRvbnMvQWN0aW9uQnV0dG9ucy50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJ1xuXG5pbXBvcnQgeyBBY3Rpb25CdXR0b25zIH0gZnJvbSAnLi9BY3Rpb25CdXR0b25zJ1xuY29uc3QgaXNMaWtlZCA9IGZhbHNlXG5cbmRlc2NyaWJlKCdBY3Rpb25CdXR0b25zIENvbXBvbmVudCcsICgpID0+IHtcbiAgaXQoJ3JlbmRlcnMgYWRtaW4gbWVudSBidXR0b24gaWYgaXNBZG1pbiBpcyB0cnVlJywgKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZUFkbWluTWVudSA9IGplc3QuZm4oKVxuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxBY3Rpb25CdXR0b25zXG4gICAgICAgIGlzQWRtaW49e3RydWV9XG4gICAgICAgIGNvbW1Db3VudD17NX1cbiAgICAgICAgbGlrZUNvdW50PXsxMH1cbiAgICAgICAgaGFuZGxlQWRtaW5NZW51PXtoYW5kbGVBZG1pbk1lbnV9XG4gICAgICAgIGhhbmRsZUNvbW1lbnQ9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVMaWtlPXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlU2hhcmVMaW5rPXsoKSA9PiB7fX1cbiAgICAgICAgaXNMaWtlZD17aXNMaWtlZH1cbiAgICAgIC8+LFxuICAgIClcbiAgICBjb25zdCBhZG1pbk1lbnVCdXR0b24gPSBnZXRCeVRlc3RJZCgnYWRtaW4tbWVudS1idXR0b24nKVxuICAgIGV4cGVjdChhZG1pbk1lbnVCdXR0b24pLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdyZW5kZXJzIGNvbW1lbnQgYW5kIGxpa2UgYnV0dG9ucycsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QWN0aW9uQnV0dG9uc1xuICAgICAgICBpc0FkbWluPXtmYWxzZX1cbiAgICAgICAgY29tbUNvdW50PXs1fVxuICAgICAgICBsaWtlQ291bnQ9ezEwfVxuICAgICAgICBoYW5kbGVBZG1pbk1lbnU9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVDb21tZW50PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2lzTGlrZWR9XG4gICAgICAgIGhhbmRsZVNoYXJlTGluaz17KCkgPT4ge319XG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgY29tbWVudEJ1dHRvbiA9IGdldEJ5VGVzdElkKCdjb21tZW50LWJ1dHRvbicpXG4gICAgY29uc3QgaGVhcnQgPSBpc0xpa2VkID8gJ2hlYXJ0JyA6ICdoZWFydC1vdXRsaW5lJ1xuICAgIGNvbnN0IGxpa2VCdXR0b24gPSBnZXRCeVRlc3RJZChoZWFydClcbiAgICBleHBlY3QoY29tbWVudEJ1dHRvbikudG9CZVRydXRoeSgpXG4gICAgZXhwZWN0KGxpa2VCdXR0b24pLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIGNvcnJlY3Qgc3R5bGVzIHRvIGNvbW1lbnQgYW5kIGxpa2UgYnV0dG9ucycsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QWN0aW9uQnV0dG9uc1xuICAgICAgICBpc0FkbWluPXtmYWxzZX1cbiAgICAgICAgY29tbUNvdW50PXs1fVxuICAgICAgICBsaWtlQ291bnQ9ezEwfVxuICAgICAgICBoYW5kbGVBZG1pbk1lbnU9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVDb21tZW50PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2lzTGlrZWR9XG4gICAgICAgIGhhbmRsZVNoYXJlTGluaz17KCkgPT4ge319XG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgY29tbWVudEJ1dHRvbiA9IGdldEJ5VGVzdElkKCdjb21tZW50LWJ1dHRvbicpXG4gICAgY29uc3QgaGVhcnQgPSBpc0xpa2VkID8gJ2hlYXJ0JyA6ICdoZWFydC1vdXRsaW5lJ1xuICAgIGNvbnN0IGxpa2VCdXR0b24gPSBnZXRCeVRlc3RJZChoZWFydClcblxuICAgIGNvbnN0IGNvbW1lbnRCdXR0b25TdHlsZXMgPSBjb21tZW50QnV0dG9uLnByb3BzLnN0eWxlXG4gICAgY29uc3QgbGlrZUJ1dHRvblN0eWxlcyA9IGxpa2VCdXR0b24ucHJvcHMuc3R5bGVcblxuICAgIC8vINCf0YDQvtCy0LXRgNGM0YLQtSDRgdGC0LjQu9C4LCDQutC+0YLQvtGA0YvQtSDQstGLINGF0L7RgtC40YLQtSDQv9GA0L7QstC10YDQuNGC0YwsINGBINC/0L7QvNC+0YnRjNGOIGV4cGVjdFxuICAgIGV4cGVjdChjb21tZW50QnV0dG9uU3R5bGVzKS50b01hdGNoT2JqZWN0KHtcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gICAgfSlcblxuICAgIC8vINCS0LDRiCDQvtC20LjQtNCw0LXQvNGL0Lkg0YHRgtC40LvRjCDQtNC70Y8g0LrQvdC+0L/QutC4INC70LDQudC60LBcbiAgICBleHBlY3QobGlrZUJ1dHRvblN0eWxlcykudG9NYXRjaE9iamVjdCh7XG4gICAgICAvLyAuLi5cbiAgICB9KVxuICB9KVxufSlcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsZUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBTUcsT0FBTyxHQUFHLEtBQUs7QUFFckJDLFFBQVEsQ0FBQyx5QkFBeUIsRUFBRSxZQUFLO0VBQ3ZDQyxFQUFFLENBQUMsOENBQThDLEVBQUUsWUFBSztJQUN0RCxJQUFNQyxlQUFlLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ2pDLElBQUFDLElBQUEsR0FBd0IsSUFBQVIsY0FBQSxDQUFBUyxNQUFNLEVBQzVCLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDVixlQUFBLENBQUFXLGFBQWE7UUFDWkMsT0FBTyxFQUFFLElBQUs7UUFDZEMsU0FBUyxFQUFFLENBQUU7UUFDYkMsU0FBUyxFQUFFLEVBQUc7UUFDZFYsZUFBZSxFQUFFQSxlQUFnQjtRQUNqQ1csYUFBYSxFQUFFLFNBQUFBLGNBQUEsRUFBSyxDQUFFLENBQUU7UUFDeEJDLFVBQVUsRUFBRSxTQUFBQSxXQUFBLEVBQUssQ0FBRSxDQUFFO1FBQ3JCQyxlQUFlLEVBQUUsU0FBQUEsZ0JBQUEsRUFBSyxDQUFFLENBQUU7UUFDMUJoQixPQUFPLEVBQUVBO01BQVEsRUFDakIsQ0FDSDtNQVhPaUIsV0FBVyxHQUFBWCxJQUFBLENBQVhXLFdBQVc7SUFZbkIsSUFB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