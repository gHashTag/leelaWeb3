{"version":3,"names":["utf8ToBytes","string","units","Infinity","codePoint","length","leadSurrogate","bytes","i","charCodeAt","push","Error"],"sources":["../../../../src/js/vendor/buffer/utf8ToBytes.ts"],"sourcesContent":["// Adapted from https://github.com/feross/buffer/blob/795bbb5bda1b39f1370ebd784bea6107b087e3a7/index.js#L1956\n\n// The MIT License (MIT)\n\n// Copyright (c) Feross Aboukhadijeh, and other contributors.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable */\n\n/**\n * Convert a string to a byte array\n */\nexport function utf8ToBytes(string: string, units?: number): number[] {\n  units = units || Infinity;\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes: number[] = [];\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xd7ff && codePoint < 0xe000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xdbff) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xdc00) {\n        if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push((codePoint >> 0xc) | 0xe0, ((codePoint >> 0x6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(\n        (codePoint >> 0x12) | 0xf0,\n        ((codePoint >> 0xc) & 0x3f) | 0x80,\n        ((codePoint >> 0x6) & 0x3f) | 0x80,\n        (codePoint & 0x3f) | 0x80,\n      );\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n"],"mappings":";;;;AA6BM,SAAUA,WAAWA,CAACC,MAAc,EAAEC,KAAc;EACxDA,KAAK,GAAGA,KAAK,IAAIC,QAAQ;EACzB,IAAIC,SAAS;EACb,IAAMC,MAAM,GAAGJ,MAAM,CAACI,MAAM;EAC5B,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAMC,KAAK,GAAa,EAAE;EAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAE,EAAEG,CAAC,EAAE;IAC/BJ,SAAS,GAAGH,MAAM,CAACQ,UAAU,CAACD,CAAC,CAAC;IAGhC,IAAIJ,SAAS,GAAG,MAAM,IAAIA,SAAS,GAAG,MAAM,EAAE;MAE5C,IAAI,CAACE,aAAa,EAAE;QAElB,IAAIF,SAAS,GAAG,MAAM,EAAE;UAEtB,IAAI,CAACF,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEK,KAAK,CAACG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;UACnD;SACD,MAAM,IAAIF,CAAC,GAAG,CAAC,KAAKH,MAAM,EAAE;UAE3B,IAAI,CAACH,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEK,KAAK,CAACG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;UACnD;;QAIFJ,aAAa,GAAGF,SAAS;QAEzB;;MAIF,IAAIA,SAAS,GAAG,MAAM,EAAE;QACtB,IAAI,CAACF,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEK,KAAK,CAACG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACnDJ,aAAa,GAAGF,SAAS;QACzB;;MAIFA,SAAS,GAAG,CAAGE,aAAa,GAAG,MAAM,IAAK,EAAE,GAAKF,SAAS,GAAG,MAAO,IAAI,OAAO;KAChF,MAAM,IAAIE,aAAa,EAAE;MAExB,IAAI,CAACJ,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEK,KAAK,CAACG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;IAGrDJ,aAAa,GAAG,IAAI;IAGpB,IAAIF,SAAS,GAAG,IAAI,EAAE;MACpB,IAAI,CAACF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBK,KAAK,CAACG,IAAI,CAACN,SAAS,CAAC;KACtB,MAAM,IAAIA,SAAS,GAAG,KAAK,EAAE;MAC5B,IAAI,CAACF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBK,KAAK,CAACG,IAAI,CAAEN,SAAS,IAAI,GAAG,GAAI,IAAI,EAAGA,SAAS,GAAG,IAAI,GAAI,IAAI,CAAC;KACjE,MAAM,IAAIA,SAAS,GAAG,OAAO,EAAE;MAC9B,IAAI,CAACF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBK,KAAK,CAACG,IAAI,CAAEN,SAAS,IAAI,GAAG,GAAI,IAAI,EAAIA,SAAS,IAAI,GAAG,GAAI,IAAI,GAAI,IAAI,EAAGA,SAAS,GAAG,IAAI,GAAI,IAAI,CAAC;KACrG,MAAM,IAAIA,SAAS,GAAG,QAAQ,EAAE;MAC/B,IAAI,CAACF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBK,KAAK,CAACG,IAAI,CACPN,SAAS,IAAI,IAAI,GAAI,IAAI,EACxBA,SAAS,IAAI,GAAG,GAAI,IAAI,GAAI,IAAI,EAChCA,SAAS,IAAI,GAAG,GAAI,IAAI,GAAI,IAAI,EACjCA,SAAS,GAAG,IAAI,GAAI,IAAI,CAC1B;KACF,MAAM;MACL,MAAM,IAAIO,KAAK,CAAC,oBAAoB,CAAC;;;EAIzC,OAAOJ,KAAK;AACd"}