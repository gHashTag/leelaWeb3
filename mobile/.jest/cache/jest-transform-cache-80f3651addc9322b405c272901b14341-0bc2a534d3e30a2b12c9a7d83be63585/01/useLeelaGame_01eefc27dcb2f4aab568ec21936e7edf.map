{"version":3,"names":["react_1","require","async_storage_1","__importDefault","cons_1","i18next_1","handlePlayerMovement_1","images_1","MAX_ROLL","initialState","currentPlayer","id","plan","previousPlan","isStart","isFinished","consecutiveSixes","message","default","t","positionBeforeThreeSixes","avatar","GEM_ICONS","lastRoll","rollHistory","planHistory","reducer","state","action","type","rollResult","Math","floor","random","Object","assign","concat","_toConsumableArray2","handlePlayerMovement","player","useLeelaGame","_ref","useReducer","_ref2","_slicedToArray2","dispatch","getSavedState","_ref3","_asyncToGenerator2","savedState","getItem","JSON","parse","error","captureException","apply","arguments","useEffect","then","setItem","stringify","catch","rollDice","updatePlayer","setRollHistory","setPlanHistory","exports"],"sources":["/Users/playra/LeelaAiWeb3/src/hooks/useLeelaGame/useLeelaGame.ts"],"sourcesContent":["import { useEffect, useReducer } from 'react'\n\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { captureException } from 'cons'\nimport i18next from 'i18next'\nimport { Player } from 'types'\n\nimport { handlePlayerMovement } from './handlePlayerMovement'\nimport { GEM_ICONS } from './images'\n\nconst MAX_ROLL = 6\n\ninterface State {\n  currentPlayer: Player\n  lastRoll: number\n  rollHistory: number[]\n  planHistory: number[]\n}\n\ntype Action =\n  | { type: 'ROLL_DICE' }\n  | { type: 'UPDATE_PLAYER'; player: Player }\n  | { type: 'SET_ROLL_HISTORY'; rollHistory: number[] }\n  | { type: 'SET_PLAN_HISTORY'; planHistory: number[] }\n  | { type: 'SET_INITIAL_STATE'; initialState: State }\n\nconst initialState: State = {\n  currentPlayer: {\n    id: 1,\n    plan: 68,\n    previousPlan: 68,\n    isStart: false,\n    isFinished: false,\n    consecutiveSixes: 0,\n    message: i18next.t('sixToBegin'),\n    positionBeforeThreeSixes: 0,\n    avatar: GEM_ICONS[1],\n  },\n  lastRoll: 1,\n  rollHistory: [],\n  planHistory: [68],\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'ROLL_DICE':\n      const rollResult = Math.floor(Math.random() * MAX_ROLL) + 1\n      return {\n        ...state,\n        lastRoll: rollResult,\n        rollHistory: [...state.rollHistory, rollResult],\n        currentPlayer: handlePlayerMovement(state.currentPlayer, rollResult),\n      }\n    case 'UPDATE_PLAYER':\n      return {\n        ...state,\n        currentPlayer: action.player,\n      }\n    case 'SET_ROLL_HISTORY':\n      return {\n        ...state,\n        rollHistory: action.rollHistory,\n      }\n    case 'SET_PLAN_HISTORY':\n      return {\n        ...state,\n        planHistory: action.planHistory,\n      }\n    case 'SET_INITIAL_STATE':\n      return action.initialState\n    default:\n      return state\n  }\n}\n\nconst useLeelaGame = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const getSavedState = async () => {\n    try {\n      const savedState = await AsyncStorage.getItem('leelaGameState')\n      return savedState ? JSON.parse(savedState) : initialState\n    } catch (error) {\n      captureException(error, 'Error retrieving state from AsyncStorage:')\n      return initialState\n    }\n  }\n\n  useEffect(() => {\n    getSavedState().then((savedState) => {\n      dispatch({ type: 'SET_INITIAL_STATE', initialState: savedState })\n    })\n  }, [])\n\n  // Подписка на изменения стейта и сохранение в AsyncStorage\n  useEffect(() => {\n    AsyncStorage.setItem('leelaGameState', JSON.stringify(state)).catch(\n      (error) => captureException(error, 'Error saving state to AsyncStorage:'),\n    )\n  }, [state])\n\n  const rollDice = () => {\n    dispatch({ type: 'ROLL_DICE' })\n  }\n\n  const updatePlayer = (player: Player) => {\n    dispatch({ type: 'UPDATE_PLAYER', player })\n  }\n\n  const setRollHistory = (rollHistory: number[]) => {\n    dispatch({ type: 'SET_ROLL_HISTORY', rollHistory })\n  }\n\n  const setPlanHistory = (planHistory: number[]) => {\n    dispatch({ type: 'SET_PLAN_HISTORY', planHistory })\n  }\n\n  return {\n    currentPlayer: state.currentPlayer,\n    rollHistory: state.rollHistory,\n    planHistory: state.planHistory,\n    rollDice,\n    lastRoll: state.lastRoll,\n    updatePlayer,\n    setRollHistory,\n    setPlanHistory,\n  }\n}\n\nexport { useLeelaGame }\n"],"mappings":"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"}