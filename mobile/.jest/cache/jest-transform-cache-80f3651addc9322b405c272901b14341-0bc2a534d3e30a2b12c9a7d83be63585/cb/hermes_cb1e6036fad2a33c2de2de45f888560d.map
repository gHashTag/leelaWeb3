{"version":3,"names":["_wrapper","require","_convertHermesProfile","parseHermesStackFrameFunctionName","hermesName","indexOfLeftParenthesis","indexOf","name","substring","MS_TO_NS","startProfiling","started","NATIVE","profileStartTimestampNs","Date","now","stopProfiling","hermesProfile","convertToSentryProfile"],"sources":["../../../src/js/profiling/hermes.ts"],"sourcesContent":["import { NATIVE } from '../wrapper';\nimport { convertToSentryProfile } from './convertHermesProfile';\nimport type { RawThreadCpuProfile } from './types';\n\nexport type StackFrameId = number;\nexport type MicrosecondsSinceBoot = string;\n\nexport interface TraceEvent {\n  name: string;\n  ph: string;\n  cat: string;\n  pid: number;\n  ts: MicrosecondsSinceBoot;\n  tid: string;\n  args: {\n    name?: string;\n  };\n}\n\nexport interface Sample {\n  cpu: string;\n  name: string;\n  ts: MicrosecondsSinceBoot;\n  pid: number;\n  tid: string;\n  weight: string;\n  sf: StackFrameId;\n}\n\nexport interface StackFrame {\n  line?: string;\n  column?: string;\n  funcLine?: string;\n  funcColumn?: string;\n  name: string;\n  category: string;\n  parent?: number;\n}\n\nexport interface Profile {\n  traceEvents: TraceEvent[];\n  samples: Sample[];\n  stackFrames: Record<string, StackFrame>;\n}\n\n/**\n * Hermes Profile Stack Frame Name contains function name and file path.\n *\n * `foo(/path/to/file.js:1:2)` -> `foo`\n */\nexport function parseHermesStackFrameFunctionName(hermesName: string): string {\n  const indexOfLeftParenthesis = hermesName.indexOf('(');\n  const name = indexOfLeftParenthesis !== -1 ? hermesName.substring(0, indexOfLeftParenthesis) : hermesName;\n  return name;\n}\n\nconst MS_TO_NS: number = 1e6;\n\n/**\n * Starts Hermes Sampling Profiler and returns the timestamp when profiling started in nanoseconds.\n */\nexport function startProfiling(): number | null {\n  const started = NATIVE.startProfiling();\n  if (!started) {\n    return null;\n  }\n\n  const profileStartTimestampNs = Date.now() * MS_TO_NS;\n  return profileStartTimestampNs;\n}\n\n/**\n * Stops Hermes Sampling Profiler and returns the profile.\n */\nexport function stopProfiling(): RawThreadCpuProfile | null {\n  const hermesProfile = NATIVE.stopProfiling();\n  if (!hermesProfile) {\n    return null;\n  }\n  return convertToSentryProfile(hermesProfile);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AAiDM,SAAUE,iCAAiCA,CAACC,UAAkB;EAClE,IAAMC,sBAAsB,GAAGD,UAAU,CAACE,OAAO,CAAC,GAAG,CAAC;EACtD,IAAMC,IAAI,GAAGF,sBAAsB,KAAK,CAAC,CAAC,GAAGD,UAAU,CAACI,SAAS,CAAC,CAAC,EAAEH,sBAAsB,CAAC,GAAGD,UAAU;EACzG,OAAOG,IAAI;AACb;AAEA,IAAME,QAAQ,GAAW,GAAG;AAKtB,SAAUC,cAAcA,CAAA;EAC5B,IAAMC,OAAO,GAAGC,eAAM,CAACF,cAAc,EAAE;EACvC,IAAI,CAACC,OAAO,EAAE;IACZ,OAAO,IAAI;;EAGb,IAAME,uBAAuB,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAGN,QAAQ;EACrD,OAAOI,uBAAuB;AAChC;AAKM,SAAUG,aAAaA,CAAA;EAC3B,IAAMC,aAAa,GAAGL,eAAM,CAACI,aAAa,EAAE;EAC5C,IAAI,CAACC,aAAa,EAAE;IAClB,OAAO,IAAI;;EAEb,OAAO,IAAAC,4CAAsB,EAACD,aAAa,CAAC;AAC9C"}