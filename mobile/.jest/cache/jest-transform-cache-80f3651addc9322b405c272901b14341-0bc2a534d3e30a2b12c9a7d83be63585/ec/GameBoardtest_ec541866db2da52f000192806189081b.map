{"version":3,"names":["react_1","__importDefault","require","react_native_1","__1","players","id","plan","avatar","test","_ref","render","_jsxRuntime","jsx","GameBoard","getAllByTestId","gemComponents","playerGemImages","expect","length","toEqual","_ref2","forEach","player","gemImage","toBeTruthy","props","source","uri"],"sources":["/Users/playra/LeelaAiWeb3/src/components/GameBoard/GameBoard.test.tsx"],"sourcesContent":["import React from 'react'\n\nimport { render } from '@testing-library/react-native'\nimport { Player } from 'types'\n\nimport { GameBoard } from '../'\n\nconst players: Player[] = [\n  {\n    id: 2,\n    plan: 72,\n    avatar: 106,\n  },\n  {\n    id: 4,\n    plan: 34,\n    avatar:\n      'https://bafkreiftrmfmimlvo26xaxfvt2ypnjjaavq5mgnkjljs6mczfekii4cmtq.ipfs.nftstorage.link/',\n  },\n]\n\ntest('should render the correct number of Gem components based on the players prop', () => {\n  const { getAllByTestId } = render(<GameBoard players={players} />)\n  const gemComponents = getAllByTestId('gem-container')\n  const playerGemImages = getAllByTestId('player-gem-image')\n  expect(playerGemImages.length).toEqual(2) // Проверка на 2 игрока\n  expect(gemComponents.length).toEqual(72) // Проверка на общее количество компонентов Gem\n})\n\ntest('should render player avatars correctly', () => {\n  const { getAllByTestId } = render(<GameBoard players={players} />)\n\n  players.forEach((player) => {\n    const gemImage = getAllByTestId(`gem-image-${player.id}`)[0]\n    expect(gemImage).toBeTruthy()\n\n    if (typeof player.avatar === 'string') {\n      expect(gemImage.props.source.uri).toEqual(player.avatar)\n    } else if (typeof player.avatar === 'number') {\n      expect(gemImage.props.source).toEqual(player.avatar)\n    }\n  })\n})\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAD,OAAA;AAGA,IAAAE,GAAA,GAAAF,OAAA;AAEA,IAAMG,OAAO,GAAa,CACxB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;CACT,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,MAAM,EACJ;CACH,CACF;AAEDC,IAAI,CAAC,8EAA8E,EAAE,YAAK;EACxF,IAAAC,IAAA,GAA2B,IAAAP,cAAA,CAAAQ,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACT,GAAA,CAAAU,SAAS;MAACT,OAAO,EAAEA;IAAQ,EAAG,CAAC;IAA1DU,cAAc,GAAAL,IAAA,CAAdK,cAAc;EACtB,IAAMC,aAAa,GAAGD,cAAc,CAAC,eAAe,CAAC;EACrD,IAAME,eAAe,GAAGF,cAAc,CAAC,kBAAkB,CAAC;EAC1DG,MAAM,CAACD,eAAe,CAACE,MAAM,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EACzCF,MAAM,CAACF,aAAa,CAACG,MAAM,CAAC,CAACC,OAAO,CAAC,EAAE,CAAC;AAC1C,CAAC,CAAC;AAEFX,IAAI,CAAC,wCAAwC,EAAE,YAAK;EAClD,IAAAY,KAAA,GAA2B,IAAAlB,cAAA,CAAAQ,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACT,GAAA,CAAAU,SAAS;MAACT,OAAO,EAAEA;IAAQ,EAAG,CAAC;IAA1DU,cAAc,GAAAM,KAAA,CAAdN,cAAc;EAEtBV,OAAO,CAACiB,OAAO,CAAC,UAACC,MAAM,EAAI;IACzB,IAAMC,QAAQ,GAAGT,cAAc,CAAC,aAAaQ,MAAM,CAACjB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5DY,MAAM,CAACM,QAAQ,CAAC,CAACC,UAAU,EAAE;IAE7B,IAAI,OAAOF,MAAM,CAACf,MAAM,KAAK,QAAQ,EAAE;MACrCU,MAAM,CAACM,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC,CAACR,OAAO,CAACG,MAAM,CAACf,MAAM,CAAC;KACzD,MAAM,IAAI,OAAOe,MAAM,CAACf,MAAM,KAAK,QAAQ,EAAE;MAC5CU,MAAM,CAACM,QAAQ,CAACE,KAAK,CAACC,MAAM,CAAC,CAACP,OAAO,CAACG,MAAM,CAACf,MAAM,CAAC;;EAExD,CAAC,CAAC;AACJ,CAAC,CAAC"}