8ebed469fa9cc434be2d99a2af394888
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeFitImage = _interopRequireDefault(require("react-native-fit-image"));
var _openUrl = _interopRequireDefault(require("./util/openUrl"));
var _hasParents = _interopRequireDefault(require("./util/hasParents"));
var _textStyleProps = _interopRequireDefault(require("./data/textStyleProps"));
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/node_modules/react-native-markdown-display/src/lib/renderRules.js";
var renderRules = {
  unknown: function unknown(node, children, parent, styles) {
    return null;
  },
  body: function body(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_body,
      children: children
    }, node.key);
  },
  heading1: function heading1(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_heading1,
      children: children
    }, node.key);
  },
  heading2: function heading2(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_heading2,
      children: children
    }, node.key);
  },
  heading3: function heading3(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_heading3,
      children: children
    }, node.key);
  },
  heading4: function heading4(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_heading4,
      children: children
    }, node.key);
  },
  heading5: function heading5(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_heading5,
      children: children
    }, node.key);
  },
  heading6: function heading6(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_heading6,
      children: children
    }, node.key);
  },
  hr: function hr(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_hr
    }, node.key);
  },
  strong: function strong(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.strong,
      children: children
    }, node.key);
  },
  em: function em(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.em,
      children: children
    }, node.key);
  },
  s: function s(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.s,
      children: children
    }, node.key);
  },
  blockquote: function blockquote(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_blockquote,
      children: children
    }, node.key);
  },
  bullet_list: function bullet_list(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_bullet_list,
      children: children
    }, node.key);
  },
  ordered_list: function ordered_list(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_ordered_list,
      children: children
    }, node.key);
  },
  list_item: function list_item(node, children, parent, styles) {
    var inheritedStyles = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    var refStyle = Object.assign({}, inheritedStyles, _reactNative.StyleSheet.flatten(styles.list_item));
    var arr = Object.keys(refStyle);
    var modifiedInheritedStylesObj = {};
    for (var b = 0; b < arr.length; b++) {
      if (_textStyleProps.default.includes(arr[b])) {
        modifiedInheritedStylesObj[arr[b]] = refStyle[arr[b]];
      }
    }
    if ((0, _hasParents.default)(parent, 'bullet_list')) {
      return (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles._VIEW_SAFE_list_item,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: [modifiedInheritedStylesObj, styles.bullet_list_icon],
          accessible: false,
          children: _reactNative.Platform.select({
            android: "\u2022",
            ios: "\xB7",
            default: "\u2022"
          })
        }), (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles._VIEW_SAFE_bullet_list_content,
          children: children
        })]
      }, node.key);
    }
    if ((0, _hasParents.default)(parent, 'ordered_list')) {
      var orderedListIndex = parent.findIndex(function (el) {
        return el.type === 'ordered_list';
      });
      var orderedList = parent[orderedListIndex];
      var listItemNumber;
      if (orderedList.attributes && orderedList.attributes.start) {
        listItemNumber = orderedList.attributes.start + node.index;
      } else {
        listItemNumber = node.index + 1;
      }
      return (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles._VIEW_SAFE_list_item,
        children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: [modifiedInheritedStylesObj, styles.ordered_list_icon],
          children: [listItemNumber, node.markup]
        }), (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles._VIEW_SAFE_ordered_list_content,
          children: children
        })]
      }, node.key);
    }
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_list_item,
      children: children
    }, node.key);
  },
  code_inline: function code_inline(node, children, parent, styles) {
    var inheritedStyles = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [inheritedStyles, styles.code_inline],
      children: node.content
    }, node.key);
  },
  code_block: function code_block(node, children, parent, styles) {
    var inheritedStyles = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    var content = node.content;
    if (typeof node.content === 'string' && node.content.charAt(node.content.length - 1) === '\n') {
      content = node.content.substring(0, node.content.length - 1);
    }
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [inheritedStyles, styles.code_block],
      children: content
    }, node.key);
  },
  fence: function fence(node, children, parent, styles) {
    var inheritedStyles = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    var content = node.content;
    if (typeof node.content === 'string' && node.content.charAt(node.content.length - 1) === '\n') {
      content = node.content.substring(0, node.content.length - 1);
    }
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [inheritedStyles, styles.fence],
      children: content
    }, node.key);
  },
  table: function table(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_table,
      children: children
    }, node.key);
  },
  thead: function thead(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_thead,
      children: children
    }, node.key);
  },
  tbody: function tbody(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_tbody,
      children: children
    }, node.key);
  },
  th: function th(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_th,
      children: children
    }, node.key);
  },
  tr: function tr(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_tr,
      children: children
    }, node.key);
  },
  td: function td(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_td,
      children: children
    }, node.key);
  },
  link: function link(node, children, parent, styles, onLinkPress) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.link,
      onPress: function onPress() {
        return (0, _openUrl.default)(node.attributes.href, onLinkPress);
      },
      children: children
    }, node.key);
  },
  blocklink: function blocklink(node, children, parent, styles, onLinkPress) {
    return (0, _jsxRuntime.jsx)(_reactNative.TouchableWithoutFeedback, {
      onPress: function onPress() {
        return (0, _openUrl.default)(node.attributes.href, onLinkPress);
      },
      style: styles.blocklink,
      children: (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.image,
        children: children
      })
    }, node.key);
  },
  image: function image(node, children, parent, styles, allowedImageHandlers, defaultImageHandler) {
    var _node$attributes = node.attributes,
      src = _node$attributes.src,
      alt = _node$attributes.alt;
    var show = allowedImageHandlers.filter(function (value) {
      return src.toLowerCase().startsWith(value.toLowerCase());
    }).length > 0;
    if (show === false && defaultImageHandler === null) {
      return null;
    }
    var imageProps = {
      indicator: true,
      key: node.key,
      style: styles._VIEW_SAFE_image,
      source: {
        uri: show === true ? src : `${defaultImageHandler}${src}`
      }
    };
    if (alt) {
      imageProps.accessible = true;
      imageProps.accessibilityLabel = alt;
    }
    return (0, _jsxRuntime.jsx)(_reactNativeFitImage.default, Object.assign({}, imageProps));
  },
  text: function text(node, children, parent, styles) {
    var inheritedStyles = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [inheritedStyles, styles.text],
      children: node.content
    }, node.key);
  },
  textgroup: function textgroup(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.textgroup,
      children: children
    }, node.key);
  },
  paragraph: function paragraph(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_paragraph,
      children: children
    }, node.key);
  },
  hardbreak: function hardbreak(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.hardbreak,
      children: '\n'
    }, node.key);
  },
  softbreak: function softbreak(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.softbreak,
      children: '\n'
    }, node.key);
  },
  pre: function pre(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles._VIEW_SAFE_pre,
      children: children
    }, node.key);
  },
  inline: function inline(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.inline,
      children: children
    }, node.key);
  },
  span: function span(node, children, parent, styles) {
    return (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.span,
      children: children
    }, node.key);
  }
};
var _default = renderRules;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,