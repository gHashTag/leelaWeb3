d174ca56c04060a4045406e63576de2d
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Buttons/ButtonCircle/ButtonCircle.tsx";
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonCircle = void 0;
var react_1 = __importStar(require("react"));
var react_native_1 = require("react-native");
var cons_1 = require("../../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var FontAwesome_1 = __importDefault(require("react-native-vector-icons/FontAwesome"));
var Ionicons_1 = __importDefault(require("react-native-vector-icons/Ionicons"));
var __1 = require("../..");
var ButtonCircle = (0, react_1.memo)(function (_ref) {
  var name = _ref.name,
    onPress = _ref.onPress,
    isIonicons = _ref.isIonicons,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 30 : _ref$size;
  var _ref2 = (0, react_1.useState)(false),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    isPressed = _ref3[0],
    setIsPressed = _ref3[1];
  var scheme = (0, react_native_1.useColorScheme)();
  var colorTheme = scheme === 'dark' ? cons_1.dimGray : cons_1.gray;
  var handlePressIn = function handlePressIn() {
    setIsPressed(true);
  };
  var handlePressOut = function handlePressOut() {
    setIsPressed(false);
    onPress && onPress();
  };
  return (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
    onPress: onPress,
    onPressIn: handlePressIn,
    onPressOut: handlePressOut,
    style: styles.container,
    testID: "buttonCircle",
    children: isPressed ? (0, _jsxRuntime.jsx)(__1.NeomorphFlexView, {
      viewStyle: styles.card,
      children: isIonicons ? (0, _jsxRuntime.jsx)(Ionicons_1.default, {
        name: name,
        size: size,
        color: cons_1.gray,
        style: styles.icon
      }) : (0, _jsxRuntime.jsx)(FontAwesome_1.default, {
        name: name,
        size: size,
        color: colorTheme,
        style: styles.icon
      })
    }) : (0, _jsxRuntime.jsx)(__1.NeomorphView, {
      viewStyle: styles.card,
      children: isIonicons ? (0, _jsxRuntime.jsx)(Ionicons_1.default, {
        name: name,
        size: size,
        color: colorTheme,
        style: styles.icon
      }) : (0, _jsxRuntime.jsx)(FontAwesome_1.default, {
        name: name,
        size: size,
        color: colorTheme,
        style: styles.icon
      })
    })
  });
});
exports.ButtonCircle = ButtonCircle;
var styles = react_native_1.StyleSheet.create({
  card: {
    borderRadius: (0, react_native_size_matters_1.s)(30),
    height: (0, react_native_size_matters_1.ms)(60, 0.9),
    justifyContent: 'center',
    width: (0, react_native_size_matters_1.ms)(60, 0.9)
  },
  container: {
    alignItems: 'center',
    borderRadius: (0, react_native_size_matters_1.s)(30),
    height: (0, react_native_size_matters_1.ms)(60, 0.9),
    justifyContent: 'center',
    width: (0, react_native_size_matters_1.ms)(60, 0.9)
  },
  icon: {
    alignSelf: 'center'
  },
  st: {
    height: 1
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,