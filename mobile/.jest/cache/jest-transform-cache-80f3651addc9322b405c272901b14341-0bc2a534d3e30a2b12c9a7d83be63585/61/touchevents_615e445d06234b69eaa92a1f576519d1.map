{"version":3,"names":["_core","require","_utils","React","_interopRequireWildcard","_reactNative","_factory","_tracing","_ops","_jsxRuntime","_jsxFileName","_this2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","touchEventStyles","StyleSheet","create","wrapperView","flex","DEFAULT_BREADCRUMB_CATEGORY","DEFAULT_BREADCRUMB_TYPE","DEFAULT_MAX_COMPONENT_TREE_SIZE","SENTRY_LABEL_PROP_KEY","TouchEventBoundary","_React$Component","_inherits2","_super","_this","_classCallCheck2","name","_tracingIntegration","_createClass2","value","componentDidMount","client","getCurrentHub","getClient","_a","addIntegration","createIntegration","getIntegration","ReactNativeTracing","render","jsx","View","style","onTouchStart","_onTouchStart","bind","children","props","_logTouchEvent","componentTreeNames","activeLabel","level","crumb","category","breadcrumbCategory","data","componentTree","message","type","breadcrumbType","addBreadcrumb","logger","log","_isNameIgnored","ignoreNames","ignoredDisplayNames","concat","_toConsumableArray2","some","ignoreName","RegExp","match","_targetInst","currentInst","activeDisplayName","maxComponentTreeSize","length","elementType","displayName","memoizedProps","sentryLabel","undefined","labelValue","labelName","push","_currentInst","return","finalLabel","_b","startUserInteractionTransaction","elementId","op","UI_ACTION_TOUCH","Component","exports","defaultProps","withTouchEventBoundary","InnerComponent","boundaryProps","WrappedComponent","assign"],"sources":["../../src/js/touchevents.tsx"],"sourcesContent":["import { addBreadcrumb, getCurrentHub } from '@sentry/core';\nimport type { SeverityLevel } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport * as React from 'react';\nimport type { GestureResponderEvent} from 'react-native';\nimport { StyleSheet, View } from 'react-native';\n\nimport { createIntegration } from './integrations/factory';\nimport { ReactNativeTracing } from './tracing';\nimport { UI_ACTION_TOUCH } from './tracing/ops';\n\nexport type TouchEventBoundaryProps = {\n  /**\n   * The category assigned to the breadcrumb that is logged by the touch event.\n   */\n  breadcrumbCategory?: string;\n  /**\n   * The type assigned to the breadcrumb that is logged by the touch event.\n   */\n  breadcrumbType?: string;\n  /**\n   * The max number of components to display when logging a touch's component tree.\n   */\n  maxComponentTreeSize?: number;\n  /**\n   * Component name(s) to ignore when logging the touch event. This prevents unhelpful logs such as\n   * \"Touch event within element: View\" where you still can't tell which View it occurred in.\n   */\n  ignoreNames?: Array<string | RegExp>;\n  /**\n   * Deprecated, use ignoreNames instead\n   * @deprecated\n   */\n  ignoredDisplayNames?: Array<string | RegExp>;\n  /**\n   * React Node wrapped by TouchEventBoundary.\n   */\n  children?: React.ReactNode;\n  /**\n   * Label Name used to identify the touched element.\n   */\n  labelName?: string;\n};\n\nconst touchEventStyles = StyleSheet.create({\n  wrapperView: {\n    flex: 1,\n  },\n});\n\nconst DEFAULT_BREADCRUMB_CATEGORY = 'touch';\nconst DEFAULT_BREADCRUMB_TYPE = 'user';\nconst DEFAULT_MAX_COMPONENT_TREE_SIZE = 20;\n\nconst SENTRY_LABEL_PROP_KEY = 'sentry-label';\n\ninterface ElementInstance {\n  elementType?: {\n    displayName?: string;\n    name?: string;\n  };\n  memoizedProps?: Record<string, unknown>;\n  return?: ElementInstance;\n}\n\ninterface PrivateGestureResponderEvent extends GestureResponderEvent {\n  _targetInst?: ElementInstance;\n}\n\n/**\n * Boundary to log breadcrumbs for interaction events.\n */\nclass TouchEventBoundary extends React.Component<TouchEventBoundaryProps> {\n\n  public static displayName: string = '__Sentry.TouchEventBoundary';\n  public static defaultProps: Partial<TouchEventBoundaryProps> = {\n    breadcrumbCategory: DEFAULT_BREADCRUMB_CATEGORY,\n    breadcrumbType: DEFAULT_BREADCRUMB_TYPE,\n    ignoreNames: [],\n    maxComponentTreeSize: DEFAULT_MAX_COMPONENT_TREE_SIZE,\n  };\n\n  public readonly name: string = 'TouchEventBoundary';\n\n  private _tracingIntegration: ReactNativeTracing | null = null;\n\n  /**\n   * Registers the TouchEventBoundary as a Sentry Integration.\n   */\n  public componentDidMount(): void {\n    const client = getCurrentHub().getClient();\n    client?.addIntegration?.(createIntegration(this.name));\n    if (!this._tracingIntegration && client) {\n      this._tracingIntegration = client.getIntegration(ReactNativeTracing);\n    }\n  }\n\n  /**\n   *\n   */\n  public render(): React.ReactNode {\n    return (\n      <View\n        style={touchEventStyles.wrapperView}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onTouchStart={this._onTouchStart.bind(this) as any}\n      >\n        {this.props.children}\n      </View>\n    );\n  }\n\n  /**\n   * Logs the touch event given the component tree names and a label.\n   */\n  private _logTouchEvent(\n    componentTreeNames: string[],\n    activeLabel?: string\n  ): void {\n    const level = 'info' as SeverityLevel;\n    const crumb = {\n      category: this.props.breadcrumbCategory,\n      data: { componentTree: componentTreeNames },\n      level: level,\n      message: activeLabel\n        ? `Touch event within element: ${activeLabel}`\n        : 'Touch event within component tree',\n      type: this.props.breadcrumbType,\n    };\n    addBreadcrumb(crumb);\n\n    logger.log(`[TouchEvents] ${crumb.message}`);\n  }\n\n  /**\n   * Checks if the name is supposed to be ignored.\n   */\n  private _isNameIgnored(name: string): boolean {\n    let ignoreNames = this.props.ignoreNames || [];\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.props.ignoredDisplayNames) {\n      // This is to make it compatible with prior version.\n      // eslint-disable-next-line deprecation/deprecation\n      ignoreNames = [...ignoreNames, ...this.props.ignoredDisplayNames];\n    }\n\n    return ignoreNames.some(\n      (ignoreName: string | RegExp) =>\n        (typeof ignoreName === 'string' && name === ignoreName) ||\n        (ignoreName instanceof RegExp && name.match(ignoreName))\n    );\n  }\n\n  // Originally was going to clean the names of any HOCs as well but decided that it might hinder debugging effectively. Will leave here in case\n  // private readonly _cleanName = (name: string): string =>\n  //   name.replace(/.*\\(/g, \"\").replace(/\\)/g, \"\");\n\n  /**\n   * Traverses through the component tree when a touch happens and logs it.\n   * @param e\n   */\n  // eslint-disable-next-line complexity\n  private _onTouchStart(e: PrivateGestureResponderEvent): void {\n    if (!e._targetInst) {\n      return;\n    }\n\n    let currentInst: ElementInstance | undefined = e._targetInst;\n\n    let activeLabel: string | undefined;\n    let activeDisplayName: string | undefined;\n    const componentTreeNames: string[] = [];\n\n    while (\n      currentInst &&\n      // maxComponentTreeSize will always be defined as we have a defaultProps. But ts needs a check so this is here.\n      this.props.maxComponentTreeSize &&\n      componentTreeNames.length < this.props.maxComponentTreeSize\n    ) {\n      if (\n        // If the loop gets to the boundary itself, break.\n        currentInst.elementType?.displayName ===\n        TouchEventBoundary.displayName\n      ) {\n        break;\n      }\n\n      const props = currentInst.memoizedProps;\n      const sentryLabel =\n        typeof props?.[SENTRY_LABEL_PROP_KEY] !== 'undefined'\n          ? `${props[SENTRY_LABEL_PROP_KEY]}`\n          : undefined;\n\n      // For some reason type narrowing doesn't work as expected with indexing when checking it all in one go in\n      // the \"check-label\" if sentence, so we have to assign it to a variable here first\n      let labelValue;\n      if (typeof this.props.labelName === 'string')\n        labelValue = props?.[this.props.labelName];\n\n      // Check the label first\n      if (sentryLabel && !this._isNameIgnored(sentryLabel)) {\n        if (!activeLabel) {\n          activeLabel = sentryLabel;\n        }\n        componentTreeNames.push(sentryLabel);\n      } else if (\n        typeof labelValue === 'string' &&\n        !this._isNameIgnored(labelValue)\n      ) {\n        if (!activeLabel) {\n          activeLabel = labelValue;\n        }\n        componentTreeNames.push(labelValue);\n      } else if (currentInst.elementType) {\n        const { elementType } = currentInst;\n\n        if (\n          elementType.displayName &&\n          !this._isNameIgnored(elementType.displayName)\n        ) {\n          // Check display name\n          if (!activeDisplayName) {\n            activeDisplayName = elementType.displayName;\n          }\n          componentTreeNames.push(elementType.displayName);\n        }\n      }\n\n      currentInst = currentInst.return;\n    }\n\n    const finalLabel = activeLabel ?? activeDisplayName;\n\n    if (componentTreeNames.length > 0 || finalLabel) {\n      this._logTouchEvent(componentTreeNames, finalLabel);\n    }\n\n    this._tracingIntegration?.startUserInteractionTransaction({\n      elementId: activeLabel,\n      op: UI_ACTION_TOUCH,\n    });\n  }\n}\n\n/**\n * Convenience Higher-Order-Component for TouchEventBoundary\n * @param WrappedComponent any React Component\n * @param boundaryProps TouchEventBoundaryProps\n */\nconst withTouchEventBoundary = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  InnerComponent: React.ComponentType<any>,\n  boundaryProps?: TouchEventBoundaryProps\n): React.FunctionComponent => {\n  const WrappedComponent: React.FunctionComponent = (props) => (\n    <TouchEventBoundary {...(boundaryProps ?? {})}>\n      <InnerComponent {...props} />\n    </TouchEventBoundary>\n  );\n\n  WrappedComponent.displayName = 'WithTouchEventBoundary';\n\n  return WrappedComponent;\n};\n\nexport { TouchEventBoundary, withTouchEventBoundary };\n"],"mappings":"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"}