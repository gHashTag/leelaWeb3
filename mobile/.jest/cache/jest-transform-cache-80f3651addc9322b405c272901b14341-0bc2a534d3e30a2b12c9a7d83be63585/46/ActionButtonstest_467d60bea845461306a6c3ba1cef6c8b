7561e8d7545005f451e4d34f033bc3ab
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/ActionButtons/ActionButtons.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var ActionButtons_1 = require("./ActionButtons");
describe('ActionButtons Component', function () {
  it('renders admin menu button if isAdmin is true', function () {
    var handleAdminMenu = jest.fn();
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: true,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: handleAdminMenu,
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        handleShareLink: function handleShareLink() {},
        isLiked: false
      })),
      getByTestId = _ref.getByTestId;
    var adminMenuButton = getByTestId('admin-menu-button');
    expect(adminMenuButton).toBeTruthy();
  });
  it('renders comment and like buttons', function () {
    var isLiked = false;
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref2.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    expect(commentButton).toBeTruthy();
    expect(likeButton).toBeTruthy();
  });
  it('applies correct styles to comment and like buttons', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: false,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref3.getByTestId;
    var commentButton = getByTestId('comment-button');
    var likeButton = getByTestId('like-button');
    var commentButtonStyles = commentButton.props.style;
    var likeButtonStyles = likeButton.props.style;
    expect(commentButtonStyles).toMatchObject({
      justifyContent: 'flex-start'
    });
    expect(likeButtonStyles).toMatchObject({});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiQWN0aW9uQnV0dG9uc18xIiwiZGVzY3JpYmUiLCJpdCIsImhhbmRsZUFkbWluTWVudSIsImplc3QiLCJmbiIsIl9yZWYiLCJyZW5kZXIiLCJfanN4UnVudGltZSIsImpzeCIsIkFjdGlvbkJ1dHRvbnMiLCJpc0FkbWluIiwiY29tbUNvdW50IiwibGlrZUNvdW50IiwiaGFuZGxlQ29tbWVudCIsImhhbmRsZUxpa2UiLCJoYW5kbGVTaGFyZUxpbmsiLCJpc0xpa2VkIiwiZ2V0QnlUZXN0SWQiLCJhZG1pbk1lbnVCdXR0b24iLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiX3JlZjIiLCJjb21tZW50QnV0dG9uIiwiaGVhcnQiLCJsaWtlQnV0dG9uIiwiX3JlZjMiLCJjb21tZW50QnV0dG9uU3R5bGVzIiwicHJvcHMiLCJzdHlsZSIsImxpa2VCdXR0b25TdHlsZXMiLCJ0b01hdGNoT2JqZWN0IiwianVzdGlmeUNvbnRlbnQiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL0FjdGlvbkJ1dHRvbnMvQWN0aW9uQnV0dG9ucy50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IFN0eWxlUHJvcCwgVmlld1N0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJ1xuXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSdcbmltcG9ydCBFU3R5bGVTaGVldCBmcm9tICdyZWFjdC1uYXRpdmUtZXh0ZW5kZWQtc3R5bGVzaGVldCdcblxuaW1wb3J0IHsgQWN0aW9uQnV0dG9ucyB9IGZyb20gJy4vQWN0aW9uQnV0dG9ucydcblxuZGVzY3JpYmUoJ0FjdGlvbkJ1dHRvbnMgQ29tcG9uZW50JywgKCkgPT4ge1xuICBpdCgncmVuZGVycyBhZG1pbiBtZW51IGJ1dHRvbiBpZiBpc0FkbWluIGlzIHRydWUnLCAoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlQWRtaW5NZW51ID0gamVzdC5mbigpXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPEFjdGlvbkJ1dHRvbnNcbiAgICAgICAgaXNBZG1pbj17dHJ1ZX1cbiAgICAgICAgY29tbUNvdW50PXs1fVxuICAgICAgICBsaWtlQ291bnQ9ezEwfVxuICAgICAgICBoYW5kbGVBZG1pbk1lbnU9e2hhbmRsZUFkbWluTWVudX1cbiAgICAgICAgaGFuZGxlQ29tbWVudD17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZUxpa2U9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVTaGFyZUxpbms9eygpID0+IHt9fVxuICAgICAgICBpc0xpa2VkPXtmYWxzZX1cbiAgICAgIC8+LFxuICAgIClcbiAgICBjb25zdCBhZG1pbk1lbnVCdXR0b24gPSBnZXRCeVRlc3RJZCgnYWRtaW4tbWVudS1idXR0b24nKVxuICAgIGV4cGVjdChhZG1pbk1lbnVCdXR0b24pLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdyZW5kZXJzIGNvbW1lbnQgYW5kIGxpa2UgYnV0dG9ucycsICgpID0+IHtcbiAgICBjb25zdCBpc0xpa2VkID0gZmFsc2VcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QWN0aW9uQnV0dG9uc1xuICAgICAgICBpc0FkbWluPXtmYWxzZX1cbiAgICAgICAgY29tbUNvdW50PXs1fVxuICAgICAgICBsaWtlQ291bnQ9ezEwfVxuICAgICAgICBoYW5kbGVBZG1pbk1lbnU9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVDb21tZW50PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2lzTGlrZWR9XG4gICAgICAgIGhhbmRsZVNoYXJlTGluaz17KCkgPT4ge319XG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgY29tbWVudEJ1dHRvbiA9IGdldEJ5VGVzdElkKCdjb21tZW50LWJ1dHRvbicpXG4gICAgY29uc3QgaGVhcnQgPSBpc0xpa2VkID8gJ2hlYXJ0JyA6ICdoZWFydC1vdXRsaW5lJ1xuICAgIGNvbnN0IGxpa2VCdXR0b24gPSBnZXRCeVRlc3RJZChoZWFydClcbiAgICBleHBlY3QoY29tbWVudEJ1dHRvbikudG9CZVRydXRoeSgpXG4gICAgZXhwZWN0KGxpa2VCdXR0b24pLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIGNvcnJlY3Qgc3R5bGVzIHRvIGNvbW1lbnQgYW5kIGxpa2UgYnV0dG9ucycsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QWN0aW9uQnV0dG9uc1xuICAgICAgICBpc0FkbWluPXtmYWxzZX1cbiAgICAgICAgY29tbUNvdW50PXs1fVxuICAgICAgICBsaWtlQ291bnQ9ezEwfVxuICAgICAgICBoYW5kbGVBZG1pbk1lbnU9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVDb21tZW50PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2ZhbHNlfVxuICAgICAgICBoYW5kbGVTaGFyZUxpbms9eygpID0+IHt9fVxuICAgICAgLz4sXG4gICAgKVxuICAgIGNvbnN0IGNvbW1lbnRCdXR0b24gPSBnZXRCeVRlc3RJZCgnY29tbWVudC1idXR0b24nKVxuICAgIGNvbnN0IGxpa2VCdXR0b24gPSBnZXRCeVRlc3RJZCgnbGlrZS1idXR0b24nKVxuXG4gICAgY29uc3QgY29tbWVudEJ1dHRvblN0eWxlcyA9IGNvbW1lbnRCdXR0b24ucHJvcHNcbiAgICAgIC5zdHlsZSBhcyBTdHlsZVByb3A8Vmlld1N0eWxlPlxuICAgIGNvbnN0IGxpa2VCdXR0b25TdHlsZXMgPSBsaWtlQnV0dG9uLnByb3BzLnN0eWxlIGFzIFN0eWxlUHJvcDxWaWV3U3R5bGU+XG5cbiAgICBleHBlY3QoY29tbWVudEJ1dHRvblN0eWxlcykudG9NYXRjaE9iamVjdCh7XG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnLCAvLyDQntC20LjQtNCw0LXQvNGL0Lkg0YHRgtC40LvRjCDQtNC70Y8g0LrQvdC+0L/QutC4INC60L7QvNC80LXQvdGC0LDRgNC40Y9cbiAgICB9KVxuXG4gICAgZXhwZWN0KGxpa2VCdXR0b25TdHlsZXMpLnRvTWF0Y2hPYmplY3Qoe1xuICAgICAgLy8g0LLQsNGIINC+0LbQuNC00LDQtdC80YvQuSDRgdGC0LjQu9GMINC00LvRjyDQutC90L7Qv9C60Lgg0LvQsNC50LrQsFxuICAgIH0pXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFJQSxJQUFBQyxjQUFBLEdBQUFELE9BQUE7QUFHQSxJQUFBRSxlQUFBLEdBQUFGLE9BQUE7QUFFQUcsUUFBUSxDQUFDLHlCQUF5QixFQUFFLFlBQUs7RUFDdkNDLEVBQUUsQ0FBQyw4Q0FBOEMsRUFBRSxZQUFLO0lBQ3RELElBQU1DLGVBQWUsR0FBR0MsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDakMsSUFBQUMsSUFBQSxHQUF3QixJQUFBUCxjQUFBLENBQUFRLE1BQU0sRUFDNUIsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNULGVBQUEsQ0FBQVUsYUFBYTtRQUNaQyxPQUFPLEVBQUUsSUFBSztRQUNkQyxTQUFTLEVBQUUsQ0FBRTtRQUNiQyxTQUFTLEVBQUUsRUFBRztRQUNkVixlQUFlLEVBQUVBLGVBQWdCO1FBQ2pDVyxhQUFhLEVBQUUsU0FBQUEsY0FBQSxFQUFLLENBQUUsQ0FBRTtRQUN4QkMsVUFBVSxFQUFFLFNBQUFBLFdBQUEsRUFBSyxDQUFFLENBQUU7UUFDckJDLGVBQWUsRUFBRSxTQUFBQSxnQkFBQSxFQUFLLENBQUUsQ0FBRTtRQUMxQkMsT0FBTyxFQUFFO01BQU0sRUFDZixDQUNIO01B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