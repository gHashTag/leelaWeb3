{"version":3,"names":["_utils","require","_wrapper","DEFAULT_BUFFER_SIZE","exports","NativeTransport","options","arguments","length","undefined","_classCallCheck2","default","_buffer","makePromiseBuffer","bufferSize","_createClass2","key","value","send","envelope","add","NATIVE","sendEnvelope","flush","timeout","drain","makeNativeTransport","makeNativeTransportFactory","_ref","enableNative","isNativeAvailable"],"sources":["../../../src/js/transports/native.ts"],"sourcesContent":["import type { BaseTransportOptions, Envelope, Transport } from '@sentry/types';\nimport type { PromiseBuffer } from '@sentry/utils';\nimport { makePromiseBuffer } from '@sentry/utils';\n\nimport { NATIVE } from '../wrapper';\n\nexport const DEFAULT_BUFFER_SIZE = 30;\n\nexport type BaseNativeTransport = BaseTransportOptions;\n\nexport interface BaseNativeTransportOptions {\n  bufferSize?: number;\n}\n\n/** Native Transport class implementation */\nexport class NativeTransport implements Transport {\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<void>;\n\n  public constructor(options: BaseNativeTransportOptions = {}) {\n    this._buffer = makePromiseBuffer(options.bufferSize || DEFAULT_BUFFER_SIZE);\n  }\n\n  /**\n   * Sends the envelope to the Store endpoint in Sentry.\n   *\n   * @param envelope Envelope that should be sent to Sentry.\n   */\n  public send(envelope: Envelope): PromiseLike<void> {\n    return this._buffer.add(() => NATIVE.sendEnvelope(envelope));\n  }\n\n  /**\n   * Wait for all envelopes to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the transport should wait for envelopes to be flushed. Omitting this parameter will\n   *   cause the transport to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n}\n\n/**\n * Creates a Native Transport.\n */\nexport function makeNativeTransport(options: BaseNativeTransportOptions = {}): NativeTransport {\n  return new NativeTransport(options);\n}\n\n/**\n * Creates a Native Transport factory if the native transport is available.\n */\nexport function makeNativeTransportFactory({\n  enableNative,\n}: {\n  enableNative?: boolean;\n}): typeof makeNativeTransport | null {\n  if (enableNative && NATIVE.isNativeAvailable()) {\n    return makeNativeTransport;\n  }\n  return null;\n}\n"],"mappings":";;;;;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,QAAA,GAAAD,OAAA;AAEO,IAAME,mBAAmB,GAAG,EAAE;AAACC,OAAA,CAAAD,mBAAA,GAAAA,mBAAA;AAAA,IASzBE,eAAe;EAI1B,SAAAA,gBAAA,EAA2D;IAAA,IAAxCC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAsC,EAAE;IAAA,IAAAG,gBAAA,CAAAC,OAAA,QAAAN,eAAA;IACzD,IAAI,CAACO,OAAO,GAAG,IAAAC,wBAAiB,EAACP,OAAO,CAACQ,UAAU,IAAIX,mBAAmB,CAAC;EAC7E;EAAC,IAAAY,aAAA,CAAAJ,OAAA,EAAAN,eAAA;IAAAW,GAAA;IAAAC,KAAA,EAOM,SAAAC,KAAKC,QAAkB;MAC5B,OAAO,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC;QAAA,OAAMC,eAAM,CAACC,YAAY,CAACH,QAAQ,CAAC;MAAA,EAAC;IAC9D;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAUM,SAAAM,MAAMC,OAAgB;MAC3B,OAAO,IAAI,CAACZ,OAAO,CAACa,KAAK,CAACD,OAAO,CAAC;IACpC;EAAC;EAAA,OAAAnB,eAAA;AAAA;AAAAD,OAAA,CAAAC,eAAA,GAAAA,eAAA;AAMG,SAAUqB,mBAAmBA,CAAA,EAAyC;EAAA,IAAxCpB,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAsC,EAAE;EAC1E,OAAO,IAAIF,eAAe,CAACC,OAAO,CAAC;AACrC;AAKM,SAAUqB,0BAA0BA,CAAAC,IAAA,EAIzC;EAAA,IAHCC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EAIZ,IAAIA,YAAY,IAAIR,eAAM,CAACS,iBAAiB,EAAE,EAAE;IAC9C,OAAOJ,mBAAmB;;EAE5B,OAAO,IAAI;AACb"}