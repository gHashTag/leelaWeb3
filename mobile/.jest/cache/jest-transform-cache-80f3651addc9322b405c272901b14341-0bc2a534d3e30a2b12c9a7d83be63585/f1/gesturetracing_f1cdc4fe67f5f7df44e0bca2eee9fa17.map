{"version":3,"names":["_core","require","_utils","_ops","_reactnativetracing","DEFAULT_BREADCRUMB_CATEGORY","exports","DEFAULT_BREADCRUMB_TYPE","GESTURE_POSTFIX_LENGTH","length","ACTION_GESTURE_FALLBACK","sentryTraceGesture","label","gesture","options","arguments","undefined","gestureCandidate","logger","warn","handlers","hub","_a","getCurrentHub","call","name","handlerName","substring","toLowerCase","originalOnBegin","onBegin","event","_b","getClient","getIntegration","ReactNativeTracing","startUserInteractionTransaction","elementId","op","UI_ACTION","addGestureBreadcrumb","originalOnEnd","onEnd","message","crumb","level","type","category","data","key","Object","keys","GestureEventKeys","eventKey","addBreadcrumb","log","NUMBER_OF_POINTERS","NUMBER_OF_TOUCHES","FORCE","FORCE_CHANGE","ROTATION","ROTATION_CHANGE","SCALE","SCALE_CHANGE","DURATION","VELOCITY","VELOCITY_X","VELOCITY_Y"],"sources":["../../../src/js/tracing/gesturetracing.ts"],"sourcesContent":["import { getCurrentHub } from '@sentry/core';\nimport type { Breadcrumb, Hub } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { UI_ACTION } from './ops';\nimport { ReactNativeTracing } from './reactnativetracing';\n\nexport const DEFAULT_BREADCRUMB_CATEGORY = 'gesture';\nexport const DEFAULT_BREADCRUMB_TYPE = 'user';\n\nexport const GESTURE_POSTFIX_LENGTH = 'GestureHandler'.length;\nexport const ACTION_GESTURE_FALLBACK = 'gesture';\n\n/**\n * Internal interface following RNGH 2 Gesture Event API.\n * We need to use this to avoid importing RNGH 2 types and depending on it.\n * https://github.com/software-mansion/react-native-gesture-handler/blob/f0868f7ccf678c947ef65519ebf97ae149a10289/src/handlers/gestures/gesture.ts#L55\n * @hidden\n */\ntype GestureEvent = Record<string, unknown>;\n\n/**\n * Internal interface for RNGH 2 Gesture API.\n * We need to use this to avoid importing RNGH 2 types and depending on it.\n * https://github.com/software-mansion/react-native-gesture-handler/blob/2.9.0/src/handlers/gestures/gesture.ts#L120\n * @hidden\n */\ninterface BaseGesture {\n  handlers?: {\n    onBegin?: (event: GestureEvent) => void;\n    onEnd?: (event: GestureEvent) => void;\n  };\n  handlerName: string;\n}\n\ninterface GestureTracingOptions {\n  getCurrentHub: () => Hub;\n}\n\n/**\n * Patches React Native Gesture Handler v2 Gesture to start a transaction on gesture begin with the appropriate label.\n * Example: ShoppingCartScreen.dismissGesture\n */\nexport function sentryTraceGesture<GestureT>(\n  /**\n   * Label of the gesture to be used in transaction name.\n   * Example: dismissGesture\n   */\n  label: string,\n  gesture: GestureT,\n  options: Partial<GestureTracingOptions> = {},\n): GestureT {\n  const gestureCandidate = gesture as unknown as BaseGesture | undefined | null;\n  if (!gestureCandidate) {\n    logger.warn('[GestureTracing] Gesture can not be undefined');\n    return gesture;\n  }\n  if (!gestureCandidate.handlers) {\n    logger.warn(\n      '[GestureTracing] Can not wrap gesture without handlers. If you want to wrap a gesture composition wrap individual gestures.',\n    );\n    return gesture;\n  }\n  if (!label) {\n    logger.warn('[GestureTracing] Can not wrap gesture without name.');\n    return gesture;\n  }\n  const hub = options.getCurrentHub?.() || getCurrentHub();\n\n  const name =\n    gestureCandidate.handlerName.length > GESTURE_POSTFIX_LENGTH\n      ? gestureCandidate.handlerName\n          .substring(0, gestureCandidate.handlerName.length - GESTURE_POSTFIX_LENGTH)\n          .toLowerCase()\n      : ACTION_GESTURE_FALLBACK;\n\n  const originalOnBegin = gestureCandidate.handlers.onBegin;\n  (gesture as unknown as Required<BaseGesture>).handlers.onBegin = (event: GestureEvent) => {\n    hub\n      .getClient()\n      ?.getIntegration(ReactNativeTracing)\n      ?.startUserInteractionTransaction({ elementId: label, op: `${UI_ACTION}.${name}` });\n\n    addGestureBreadcrumb(`Gesture ${label} begin.`, { event, hub, name });\n\n    if (originalOnBegin) {\n      originalOnBegin(event);\n    }\n  };\n\n  const originalOnEnd = gestureCandidate.handlers.onEnd;\n  (gesture as unknown as Required<BaseGesture>).handlers.onEnd = (event: GestureEvent) => {\n    addGestureBreadcrumb(`Gesture ${label} end.`, { event, hub, name });\n\n    if (originalOnEnd) {\n      originalOnEnd(event);\n    }\n  };\n\n  return gesture;\n}\n\nfunction addGestureBreadcrumb(\n  message: string,\n  options: {\n    event: Record<string, unknown> | undefined | null;\n    hub: Hub;\n    name: string;\n  },\n): void {\n  const { event, hub, name } = options;\n  const crumb: Breadcrumb = {\n    message,\n    level: 'info',\n    type: DEFAULT_BREADCRUMB_TYPE,\n    category: DEFAULT_BREADCRUMB_CATEGORY,\n  };\n\n  if (event) {\n    const data: Record<string, unknown> = {\n      gesture: name,\n    };\n    for (const key of Object.keys(GestureEventKeys)) {\n      const eventKey = GestureEventKeys[key as keyof typeof GestureEventKeys];\n      if (eventKey in event) {\n        data[eventKey] = event[eventKey];\n      }\n    }\n    crumb.data = data;\n  }\n\n  hub.addBreadcrumb(crumb);\n\n  logger.log(`[GestureTracing] ${crumb.message}`);\n}\n\n/**\n * Selected keys from RNGH 2 Gesture Event API.\n * We only want to send relevant data to save on payload size.\n * @hidden\n */\nconst GestureEventKeys = {\n  NUMBER_OF_POINTERS: 'numberOfPointers',\n  NUMBER_OF_TOUCHES: 'numberOfTouches',\n  FORCE: 'force',\n  FORCE_CHANGE: 'forceChange',\n  ROTATION: 'rotation',\n  ROTATION_CHANGE: 'rotationChange',\n  SCALE: 'scale',\n  SCALE_CHANGE: 'scaleChange',\n  DURATION: 'duration',\n  VELOCITY: 'velocity',\n  VELOCITY_X: 'velocityX',\n  VELOCITY_Y: 'velocityY',\n} as const;\n"],"mappings":";;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,IAAA,GAAAF,OAAA;AACA,IAAAG,mBAAA,GAAAH,OAAA;AAEO,IAAMI,2BAA2B,GAAG,SAAS;AAACC,OAAA,CAAAD,2BAAA,GAAAA,2BAAA;AAC9C,IAAME,uBAAuB,GAAG,MAAM;AAACD,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAEvC,IAAMC,sBAAsB,GAAG,gBAAgB,CAACC,MAAM;AAACH,OAAA,CAAAE,sBAAA,GAAAA,sBAAA;AACvD,IAAME,uBAAuB,GAAG,SAAS;AAACJ,OAAA,CAAAI,uBAAA,GAAAA,uBAAA;AAgC3C,SAAUC,kBAAkBA,CAKhCC,KAAa,EACbC,OAAiB,EAC2B;EAAA,IAA5CC,OAAA,GAAAC,SAAA,CAAAN,MAAA,QAAAM,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAA0C,EAAE;;EAE5C,IAAME,gBAAgB,GAAGJ,OAAoD;EAC7E,IAAI,CAACI,gBAAgB,EAAE;IACrBC,aAAM,CAACC,IAAI,CAAC,+CAA+C,CAAC;IAC5D,OAAON,OAAO;;EAEhB,IAAI,CAACI,gBAAgB,CAACG,QAAQ,EAAE;IAC9BF,aAAM,CAACC,IAAI,CACT,6HAA6H,CAC9H;IACD,OAAON,OAAO;;EAEhB,IAAI,CAACD,KAAK,EAAE;IACVM,aAAM,CAACC,IAAI,CAAC,qDAAqD,CAAC;IAClE,OAAON,OAAO;;EAEhB,IAAMQ,GAAG,GAAG,EAAAC,EAAA,GAAAR,OAAO,CAACS,aAAa,cAAAD,EAAA,uBAAAA,EAAA,CAAAE,IAAA,CAArBV,OAAO,MAAsB,IAAAS,mBAAa,GAAE;EAExD,IAAME,IAAI,GACRR,gBAAgB,CAACS,WAAW,CAACjB,MAAM,GAAGD,sBAAsB,GACxDS,gBAAgB,CAACS,WAAW,CACzBC,SAAS,CAAC,CAAC,EAAEV,gBAAgB,CAACS,WAAW,CAACjB,MAAM,GAAGD,sBAAsB,CAAC,CAC1EoB,WAAW,EAAE,GAChBlB,uBAAuB;EAE7B,IAAMmB,eAAe,GAAGZ,gBAAgB,CAACG,QAAQ,CAACU,OAAO;EACxDjB,OAA4C,CAACO,QAAQ,CAACU,OAAO,GAAG,UAACC,KAAmB,EAAI;;IACvF,CAAAC,EAAA,IAAAV,EAAA,GAAAD,GAAG,CACAY,SAAS,EAAE,cAAAX,EAAA,uBAAAA,EAAA,CACVY,cAAc,CAACC,sCAAkB,eAAAH,EAAA,uBAAAA,EAAA,CACjCI,+BAA+B,CAAC;MAAEC,SAAS,EAAEzB,KAAK;MAAE0B,EAAE,EAAE,GAAGC,cAAS,IAAId,IAAI;IAAE,CAAE;IAEpFe,oBAAoB,CAAC,WAAW5B,KAAK,SAAS,EAAE;MAAEmB,KAAK,EAALA,KAAK;MAAEV,GAAG,EAAHA,GAAG;MAAEI,IAAI,EAAJA;IAAI,CAAE,CAAC;IAErE,IAAII,eAAe,EAAE;MACnBA,eAAe,CAACE,KAAK,CAAC;;EAE1B,CAAC;EAED,IAAMU,aAAa,GAAGxB,gBAAgB,CAACG,QAAQ,CAACsB,KAAK;EACpD7B,OAA4C,CAACO,QAAQ,CAACsB,KAAK,GAAG,UAACX,KAAmB,EAAI;IACrFS,oBAAoB,CAAC,WAAW5B,KAAK,OAAO,EAAE;MAAEmB,KAAK,EAALA,KAAK;MAAEV,GAAG,EAAHA,GAAG;MAAEI,IAAI,EAAJA;IAAI,CAAE,CAAC;IAEnE,IAAIgB,aAAa,EAAE;MACjBA,aAAa,CAACV,KAAK,CAAC;;EAExB,CAAC;EAED,OAAOlB,OAAO;AAChB;AAEA,SAAS2B,oBAAoBA,CAC3BG,OAAe,EACf7B,OAIC;EAED,IAAQiB,KAAK,GAAgBjB,OAAO,CAA5BiB,KAAK;IAAEV,GAAG,GAAWP,OAAO,CAArBO,GAAG;IAAEI,IAAI,GAAKX,OAAO,CAAhBW,IAAI;EACxB,IAAMmB,KAAK,GAAe;IACxBD,OAAO,EAAPA,OAAO;IACPE,KAAK,EAAE,MAAM;IACbC,IAAI,EAAEvC,uBAAuB;IAC7BwC,QAAQ,EAAE1C;GACX;EAED,IAAI0B,KAAK,EAAE;IACT,IAAMiB,IAAI,GAA4B;MACpCnC,OAAO,EAAEY;KACV;IACD,KAAK,IAAMwB,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,gBAAgB,CAAC,EAAE;MAC/C,IAAMC,QAAQ,GAAGD,gBAAgB,CAACH,GAAoC,CAAC;MACvE,IAAII,QAAQ,IAAItB,KAAK,EAAE;QACrBiB,IAAI,CAACK,QAAQ,CAAC,GAAGtB,KAAK,CAACsB,QAAQ,CAAC;;;IAGpCT,KAAK,CAACI,IAAI,GAAGA,IAAI;;EAGnB3B,GAAG,CAACiC,aAAa,CAACV,KAAK,CAAC;EAExB1B,aAAM,CAACqC,GAAG,CAAC,oBAAoBX,KAAK,CAACD,OAAO,EAAE,CAAC;AACjD;AAOA,IAAMS,gBAAgB,GAAG;EACvBI,kBAAkB,EAAE,kBAAkB;EACtCC,iBAAiB,EAAE,iBAAiB;EACpCC,KAAK,EAAE,OAAO;EACdC,YAAY,EAAE,aAAa;EAC3BC,QAAQ,EAAE,UAAU;EACpBC,eAAe,EAAE,gBAAgB;EACjCC,KAAK,EAAE,OAAO;EACdC,YAAY,EAAE,aAAa;EAC3BC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,WAAW;EACvBC,UAAU,EAAE;CACJ"}