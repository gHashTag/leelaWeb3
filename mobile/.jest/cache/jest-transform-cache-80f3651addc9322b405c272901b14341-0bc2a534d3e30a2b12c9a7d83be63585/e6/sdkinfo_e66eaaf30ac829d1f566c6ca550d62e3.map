{"version":3,"names":["_utils","require","_version","_wrapper","defaultSdkInfo","name","SDK_NAME","packages","SDK_PACKAGE_NAME","version","SDK_VERSION","exports","SdkInfo","_classCallCheck2","default","id","_nativeSdkPackage","_createClass2","key","value","setupOnce","addGlobalEventProcessor","_this","event","__awaiter","NATIVE","fetchNativeSdkInfo","e","logger","warn","platform","sdk","concat","_toConsumableArray2"],"sources":["../../../src/js/integrations/sdkinfo.ts"],"sourcesContent":["import type { EventProcessor, Integration, Package, SdkInfo as SdkInfoType } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { SDK_NAME, SDK_PACKAGE_NAME, SDK_VERSION } from '../version';\nimport { NATIVE } from '../wrapper';\n\ntype DefaultSdkInfo = Pick<Required<SdkInfoType>, 'name' | 'packages' | 'version'>;\n\nexport const defaultSdkInfo: DefaultSdkInfo = {\n  name: SDK_NAME,\n  packages: [\n    {\n      name: SDK_PACKAGE_NAME,\n      version: SDK_VERSION,\n    },\n  ],\n  version: SDK_VERSION,\n};\n\n/** Default SdkInfo instrumentation */\nexport class SdkInfo implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'SdkInfo';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = SdkInfo.id;\n\n  private _nativeSdkPackage: Package | null = null;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (e: EventProcessor) => void): void {\n    addGlobalEventProcessor(async event => {\n      // this._nativeSdkInfo should be defined a following time so this call won't always be awaited.\n      if (this._nativeSdkPackage === null) {\n        try {\n          this._nativeSdkPackage = await NATIVE.fetchNativeSdkInfo();\n        } catch (e) {\n          // If this fails, go ahead as usual as we would rather have the event be sent with a package missing.\n          logger.warn(\n            '[SdkInfo] Native SDK Info retrieval failed...something could be wrong with your Sentry installation:',\n          );\n          logger.warn(e);\n        }\n      }\n\n      event.platform = event.platform || 'javascript';\n      event.sdk = event.sdk || {};\n      event.sdk.name = event.sdk.name || defaultSdkInfo.name;\n      event.sdk.version = event.sdk.version || defaultSdkInfo.version;\n      event.sdk.packages = [\n        // default packages are added by baseclient and should not be added here\n        ...(event.sdk.packages || []),\n        ...((this._nativeSdkPackage && [this._nativeSdkPackage]) || []),\n      ];\n\n      return event;\n    });\n  }\n}\n"],"mappings":";;;;;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AAIO,IAAMG,cAAc,GAAmB;EAC5CC,IAAI,EAAEC,iBAAQ;EACdC,QAAQ,EAAE,CACR;IACEF,IAAI,EAAEG,yBAAgB;IACtBC,OAAO,EAAEC;GACV,CACF;EACDD,OAAO,EAAEC;CACV;AAACC,OAAA,CAAAP,cAAA,GAAAA,cAAA;AAAA,IAGWQ,OAAO;EAApB,SAAAA,QAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,OAAA;IASS,KAAAP,IAAI,GAAWO,OAAO,CAACG,EAAE;IAExB,KAAAC,iBAAiB,GAAmB,IAAI;EAiClD;EAAC,IAAAC,aAAA,CAAAH,OAAA,EAAAF,OAAA;IAAAM,GAAA;IAAAC,KAAA,EA5BQ,SAAAC,UAAUC,uBAAoD;MAAA,IAAAC,KAAA;MACnED,uBAAuB,CAAC,UAAME,KAAK;QAAA,OAAG,IAAAC,gBAAA,EAAAF,KAAA;UAEpC,IAAI,IAAI,CAACN,iBAAiB,KAAK,IAAI,EAAE;YACnC,IAAI;cACF,IAAI,CAACA,iBAAiB,GAAG,MAAMS,eAAM,CAACC,kBAAkB,EAAE;aAC3D,CAAC,OAAOC,CAAC,EAAE;cAEVC,aAAM,CAACC,IAAI,CACT,sGAAsG,CACvG;cACDD,aAAM,CAACC,IAAI,CAACF,CAAC,CAAC;;;UAIlBJ,KAAK,CAACO,QAAQ,GAAGP,KAAK,CAACO,QAAQ,IAAI,YAAY;UAC/CP,KAAK,CAACQ,GAAG,GAAGR,KAAK,CAACQ,GAAG,IAAI,EAAE;UAC3BR,KAAK,CAACQ,GAAG,CAAC1B,IAAI,GAAGkB,KAAK,CAACQ,GAAG,CAAC1B,IAAI,IAAID,cAAc,CAACC,IAAI;UACtDkB,KAAK,CAACQ,GAAG,CAACtB,OAAO,GAAGc,KAAK,CAACQ,GAAG,CAACtB,OAAO,IAAIL,cAAc,CAACK,OAAO;UAC/Dc,KAAK,CAACQ,GAAG,CAACxB,QAAQ,MAAAyB,MAAA,KAAAC,mBAAA,CAAAnB,OAAA,EAEZS,KAAK,CAACQ,GAAG,CAACxB,QAAQ,IAAI,EAAE,OAAA0B,mBAAA,CAAAnB,OAAA,EACvB,IAAI,CAACE,iBAAiB,IAAI,CAAC,IAAI,CAACA,iBAAiB,CAAC,IAAK,EAAE,EAC/D;UAED,OAAOO,KAAK;QACd,CAAC;MAAA,EAAC;IACJ;EAAC;EAAA,OAAAX,OAAA;AAAA;AAAAD,OAAA,CAAAC,OAAA,GAAAA,OAAA;AAvCaA,OAAA,CAAAG,EAAE,GAAW,SAAS"}