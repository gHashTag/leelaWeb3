f60499212798ce1dac5ba8576461af0b
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Buttons/ButtonVectorIcon/ButtonVectorIcon.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonVectorIcon = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var cons_1 = require("../../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var FontAwesome_1 = __importDefault(require("react-native-vector-icons/FontAwesome"));
var Ionicons_1 = __importDefault(require("react-native-vector-icons/Ionicons"));
var __1 = require("../../");
var Pressable_1 = require("../../Pressable/Pressable");
var Space_1 = require("../../Space/Space");
function ButtonVectorIcon(_ref) {
  var name = _ref.name,
    onPress = _ref.onPress,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? (0, react_native_size_matters_1.s)(10) : _ref$size,
    iconSize = _ref.iconSize,
    color = _ref.color,
    viewStyle = _ref.viewStyle,
    count = _ref.count,
    ionicons = _ref.ionicons,
    onPressIn = _ref.onPressIn;
  var scheme = (0, react_native_1.useColorScheme)();
  var colorTheme = scheme === 'dark' ? cons_1.dimGray : cons_1.gray;
  var summaryIconSize = iconSize ? iconSize : size;
  var summaryIoniconsSize = iconSize ? iconSize + (0, react_native_size_matters_1.s)(2) : size + (0, react_native_size_matters_1.s)(2);
  return (0, _jsxRuntime.jsxs)(Pressable_1.Pressable, {
    style: viewStyle,
    onPress: onPress,
    onPressIn: onPressIn,
    testID: "button-link-container",
    children: [ionicons ? (0, _jsxRuntime.jsx)(Ionicons_1.default, {
      name: name,
      size: summaryIoniconsSize,
      color: color ? color : colorTheme
    }) : (0, _jsxRuntime.jsx)(FontAwesome_1.default, {
      name: name,
      size: summaryIconSize,
      color: color ? color : colorTheme
    }), count !== undefined && (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [(0, _jsxRuntime.jsx)(Space_1.Space, {
        width: (0, react_native_size_matters_1.s)(5)
      }), (0, _jsxRuntime.jsx)(__1.Text, {
        title: count.toString(),
        h: 'h5',
        textStyle: [styles.fontStyle, {
          fontSize: size,
          color: colorTheme
        }],
        testID: "button-link-title"
      })]
    })]
  });
}
exports.ButtonVectorIcon = ButtonVectorIcon;
var styles = react_native_size_matters_1.ScaledSheet.create({
  fontStyle: {
    top: 3
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiY29uc18xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiRm9udEF3ZXNvbWVfMSIsIklvbmljb25zXzEiLCJfXzEiLCJQcmVzc2FibGVfMSIsIlNwYWNlXzEiLCJCdXR0b25WZWN0b3JJY29uIiwiX3JlZiIsIm5hbWUiLCJvblByZXNzIiwiX3JlZiRzaXplIiwic2l6ZSIsInMiLCJpY29uU2l6ZSIsImNvbG9yIiwidmlld1N0eWxlIiwiY291bnQiLCJpb25pY29ucyIsIm9uUHJlc3NJbiIsInNjaGVtZSIsInVzZUNvbG9yU2NoZW1lIiwiY29sb3JUaGVtZSIsImRpbUdyYXkiLCJncmF5Iiwic3VtbWFyeUljb25TaXplIiwic3VtbWFyeUlvbmljb25zU2l6ZSIsIl9qc3hSdW50aW1lIiwianN4cyIsIlByZXNzYWJsZSIsInN0eWxlIiwidGVzdElEIiwiY2hpbGRyZW4iLCJqc3giLCJkZWZhdWx0IiwidW5kZWZpbmVkIiwiRnJhZ21lbnQiLCJTcGFjZSIsIndpZHRoIiwiVGV4dCIsInRpdGxlIiwidG9TdHJpbmciLCJoIiwidGV4dFN0eWxlIiwic3R5bGVzIiwiZm9udFN0eWxlIiwiZm9udFNpemUiLCJleHBvcnRzIiwiU2NhbGVkU2hlZXQiLCJjcmVhdGUiLCJ0b3AiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL0J1dHRvbnMvQnV0dG9uVmVjdG9ySWNvbi9CdXR0b25WZWN0b3JJY29uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IFN0eWxlUHJvcCwgVmlld1N0eWxlLCB1c2VDb2xvclNjaGVtZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSdcblxuaW1wb3J0IHsgZGltR3JheSwgZ3JheSB9IGZyb20gJ2NvbnMnXG5pbXBvcnQgeyBTY2FsZWRTaGVldCwgcyB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1zaXplLW1hdHRlcnMnXG5pbXBvcnQgSWNvbiBmcm9tICdyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL0ZvbnRBd2Vzb21lJ1xuaW1wb3J0IElvbmljb25zIGZyb20gJ3JlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvSW9uaWNvbnMnXG5cbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi8nXG5pbXBvcnQgeyBQcmVzc2FibGUgfSBmcm9tICcuLi8uLi9QcmVzc2FibGUvUHJlc3NhYmxlJ1xuaW1wb3J0IHsgU3BhY2UgfSBmcm9tICcuLi8uLi9TcGFjZS9TcGFjZSdcblxuaW50ZXJmYWNlIEJ1dHRvblZlY3Rvckljb25JIHtcbiAgbmFtZTogc3RyaW5nXG4gIHNpemU/OiBudW1iZXJcbiAgaWNvblNpemU/OiBudW1iZXJcbiAgY29sb3I/OiBzdHJpbmdcbiAgb25QcmVzcz86ICgpID0+IHZvaWQgfCBQcm9taXNlPHZvaWQ+XG4gIHZpZXdTdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+XG4gIGNvdW50PzogbnVtYmVyXG4gIGlvbmljb25zPzogYm9vbGVhblxuICBvblByZXNzSW4/OiAoKSA9PiB2b2lkXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBCdXR0b25WZWN0b3JJY29uKHtcbiAgbmFtZSxcbiAgb25QcmVzcyxcbiAgc2l6ZSA9IHMoMTApLFxuICBpY29uU2l6ZSxcbiAgY29sb3IsXG4gIHZpZXdTdHlsZSxcbiAgY291bnQsXG4gIGlvbmljb25zLFxuICBvblByZXNzSW4sXG59OiBCdXR0b25WZWN0b3JJY29uSSkge1xuICBjb25zdCBzY2hlbWUgPSB1c2VDb2xvclNjaGVtZSgpXG4gIGNvbnN0IGNvbG9yVGhlbWUgPSBzY2hlbWUgPT09ICdkYXJrJyA/IGRpbUdyYXkgOiBncmF5XG4gIGNvbnN0IHN1bW1hcnlJY29uU2l6ZSA9IGljb25TaXplID8gaWNvblNpemUgOiBzaXplXG4gIGNvbnN0IHN1bW1hcnlJb25pY29uc1NpemUgPSBpY29uU2l6ZSA/IGljb25TaXplICsgcygyKSA6IHNpemUgKyBzKDIpXG4gIHJldHVybiAoXG4gICAgPFByZXNzYWJsZVxuICAgICAgc3R5bGU9e3ZpZXdTdHlsZX1cbiAgICAgIG9uUHJlc3M9e29uUHJlc3N9XG4gICAgICBvblByZXNzSW49e29uUHJlc3NJbn1cbiAgICAgIHRlc3RJRD1cImJ1dHRvbi1saW5rLWNvbnRhaW5lclwiXG4gICAgPlxuICAgICAge2lvbmljb25zID8gKFxuICAgICAgICA8SW9uaWNvbnNcbiAgICAgICAgICBuYW1lPXtuYW1lfVxuICAgICAgICAgIHNpemU9e3N1bW1hcnlJb25pY29uc1NpemV9XG4gICAgICAgICAgY29sb3I9e2NvbG9yID8gY29sb3IgOiBjb2xvclRoZW1lfVxuICAgICAgICAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPEljb25cbiAgICAgICAgICBuYW1lPXtuYW1lfVxuICAgICAgICAgIHNpemU9e3N1bW1hcnlJY29uU2l6ZX1cbiAgICAgICAgICBjb2xvcj17Y29sb3IgPyBjb2xvciA6IGNvbG9yVGhlbWV9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgICAge2NvdW50ICE9PSB1bmRlZmluZWQgJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxTcGFjZSB3aWR0aD17cyg1KX0gLz5cbiAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgdGl0bGU9e2NvdW50LnRvU3RyaW5nKCl9XG4gICAgICAgICAgICBoPXsnaDUnfVxuICAgICAgICAgICAgdGV4dFN0eWxlPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5mb250U3R5bGUsXG4gICAgICAgICAgICAgIHsgZm9udFNpemU6IHNpemUsIGNvbG9yOiBjb2xvclRoZW1lIH0sXG4gICAgICAgICAgICBdfVxuICAgICAgICAgICAgdGVzdElEPVwiYnV0dG9uLWxpbmstdGl0bGVcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICA8L1ByZXNzYWJsZT5cbiAgKVxufVxuXG5jb25zdCBzdHlsZXMgPSBTY2FsZWRTaGVldC5jcmVhdGUoe1xuICBmb250U3R5bGU6IHtcbiAgICB0b3A6IDMsXG4gIH0sXG59KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxjQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxNQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRywyQkFBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksYUFBQSxHQUFBTCxlQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSyxVQUFBLEdBQUFOLGVBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFNLEdBQUEsR0FBQU4sT0FBQTtBQUNBLElBQUFPLFdBQUEsR0FBQVAsT0FBQTtBQUNBLElBQUFRLE9BQUEsR0FBQVIsT0FBQTtBQWNBLFNBQWdCUyxnQkFBZ0JBLENBQUFDLElBQUEsRUFVWjtFQUFBLElBVGxCQyxJQUFJLEdBQUFELElBQUEsQ0FBSkMsSUFBSTtJQUNKQyxPQUFPLEdBQUFGLElBQUEsQ0FBUEUsT0FBTztJQUFBQyxTQUFBLEdBQUFILElBQUEsQ0FDUEksSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxJQUFBViwyQkFBQSxDQUFBWSxDQUFDLEVBQUMsRUFBRSxDQUFDLEdBQUFGLFNBQUE7SUFDWkcsUUFBUSxHQUFBTixJQUFBLENBQVJNLFFBQVE7SUFDUkMsS0FBSyxHQUFBUCxJQUFBLENBQUxPLEtBQUs7SUFDTEMsU0FBUyxHQUFBUixJQUFBLENBQVRRLFNBQVM7SUFDVEMsS0FBSyxHQUFBVCxJQUFBLENBQUxTLEtBQUs7SUFDTEMsUUFBUSxHQUFBVixJQUFBLENBQVJVLFFBQVE7SUFDUkMsU0FBUyxHQUFBWCxJQUFBLENBQVRXLFNBQVM7RUFFVCxJQUFNQyxNQUFNLEdBQUcsSUFBQXJCLGNBQUEsQ0FBQXNCLGNBQWMsR0FBRTtFQUMvQixJQUFNQyxVQUFVLEdBQUdGLE1BQU0sS0FBSyxNQUFNLEdBQUdwQixNQUFBLENBQUF1QixPQUFPLEdBQUd2QixNQUFBLENBQUF3QixJQUFJO0VBQ3JELElBQU1DLGVBQWUsR0FBR1gsUUFBUSxHQUFHQSxRQUFRLEdBQUdGLElBQUk7RUFDbEQsSUFBTWMsbUJBQW1CLEdBQUdaLFFBQVEsR0FBR0EsUUFBUSxHQUFHLElBQUFiLDJCQUFBLENBQUFZLENBQUMsRUFBQyxDQUFDLENBQUMsR0FBR0QsSUFBSSxHQUFHLElBQUFYLDJCQUFBLENBQUFZLENBQUMsRUFBQyxDQUFDLENBQUM7RUFDcEUsT0FDRSxJQUFBYyxXQUFBLENBQUFDLElBQUEsRUFBQ3ZCLFdBQUEsQ0FBQXdCLFNBQVM7SUFDUkMsS0FBSyxFQUFFZCxTQUFVO0lBQ2pCTixPQUFPLEVBQUVBLE9BQVE7SUFDakJTLFNBQVMsRUFBRUEsU0FBVTtJQUNyQlksTUFBTSxFQUFDLHVCQUF1QjtJQUFBQyxRQUFBLEdBRTdCZCxRQUFRLEdBQ1AsSUFBQVMsV0FBQSxDQUFBTSxHQUFBLEVBQUM5QixVQUFBLENBQUErQixPQUFRO01BQ1B6QixJQUFJLEVBQUVBLElBQUs7TUFDWEcsSUFBSSxFQUFFYyxtQkFBb0I7TUFDMUJYLEtBQUssRUFBRUEsS0FBSyxHQUFHQSxLQUFLLEdBQUdPO0lBQVcsRUFDbEMsR0FFRixJQUFBSyxXQUFBLENBQUFNLEdBQUEsRUFBQy9CLGFBQUEsQ0FBQWdDLE9BQUk7TUFDSHpCLElBQUksRUFBRUEsSUFBSztNQUNYRyxJQUFJLEVBQUVhLGVBQWdCO01BQ3RCVixLQUFLLEVBQUVBLEtBQUssR0FBR0EsS0FBSyxHQUFHTztJQUFXLEVBRXJDLEVBQ0FMLEtBQUssS0FBS2tCLFNBQVMsSUFDbEIsSUFBQVIsV0FBQSxDQUFBQyxJQUFBLEVBQUFELFdBQUEsQ0FBQVMsUUFBQTtNQUFBSixRQUFBLEdBQ0UsSUFBQUwsV0FBQSxDQUFBTSxHQUFBLEVBQUMzQixPQUFBLENBQUErQixLQUFLO1FBQUNDLEtBQUssRUFBRSxJQUFBckMsMkJBQUEsQ0FBQVksQ0FBQyxFQUFDLENBQUM7TUFBRSxFQUNuQixNQUFBYyxXQUFBLENBQUFNLEdBQUEsRUFBQzdCLEdBQUEsQ0FBQW1DLElBQUk7UUFDSEMsS0FBSyxFQUFFdkIsS0FBSyxDQUFDd0IsUUFBUSxFQUFHO1FBQ3hCQyxDQUFDLEVBQUUsSUFBSztRQUNSQyxTQUFTLEVBQUUsQ0FDVEMsTUFBTSxDQUFDQyxTQUFTLEVBQ2hCO1VBQUVDLFFBQVEsRUFBRWxDLElBQUk7VUFBRUcsS0FBSyxFQUFFTztRQUFVLENBQUUsQ0FDckM7UUFDRlMsTUFBTSxFQUFDO01BQW1CLEVBRTlCO0lBQUEsRUFDRDtFQUFBLENBQ1EsQ0FBQztBQUVoQjtBQW5EQWdCLE9BQUEsQ0FBQXhDLGdCQUFBLEdBQUFBLGdCQUFBO0FBcURBLElBQU1xQyxNQUFNLEdBQUczQywyQkFBQSxDQUFBK0MsV0FBVyxDQUFDQyxNQUFNLENBQUM7RUFDaENKLFNBQVMsRUFBRTtJQUNUSyxHQUFHLEVBQUU7O0NBRVIsQ0FBQyJ9