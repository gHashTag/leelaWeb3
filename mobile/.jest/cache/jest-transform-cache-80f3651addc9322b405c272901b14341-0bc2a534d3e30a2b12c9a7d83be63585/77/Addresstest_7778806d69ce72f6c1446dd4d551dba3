38bb95cd1003e7f360e023c5a323057b
"use strict";

_getJestObj().mock('@react-native-clipboard/clipboard');
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Address/Address.test.tsx";
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var Address_1 = require("../Address");
jest.useFakeTimers();
describe('Address component', function () {
  it('should copy full address to clipboard and change opacity on press', (0, _asyncToGenerator2.default)(function* () {
    var rlyAccount = 'exampleAddress12345';
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(Address_1.Address, {
        rlyAccount: rlyAccount
      })),
      getByTestId = _ref2.getByTestId,
      getByText = _ref2.getByText;
    var copyButton = getByTestId('copy-button');
    var renderedText = getByText('exampl...12345');
    expect(renderedText).toBeTruthy();
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9qc3hSdW50aW1lIiwiX3RoaXMiLCJfanN4RmlsZU5hbWUiLCJfcmVxdWlyZSIsImplc3QiLCJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVhY3RfbmF0aXZlXzEiLCJBZGRyZXNzXzEiLCJ1c2VGYWtlVGltZXJzIiwiZGVzY3JpYmUiLCJpdCIsImRlZmF1bHQiLCJybHlBY2NvdW50IiwiX3JlZjIiLCJyZW5kZXIiLCJqc3giLCJBZGRyZXNzIiwiZ2V0QnlUZXN0SWQiLCJnZXRCeVRleHQiLCJjb3B5QnV0dG9uIiwicmVuZGVyZWRUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbGF5cmEvTGVlbGFBaVdlYjMvc3JjL2NvbXBvbmVudHMvQWRkcmVzcy9BZGRyZXNzLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgcmVuZGVyLCBmaXJlRXZlbnQsIHdhaXRGb3IgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSdcblxuaW1wb3J0IHsgQWRkcmVzcyB9IGZyb20gJy4uL0FkZHJlc3MnXG5cbmplc3QudXNlRmFrZVRpbWVycygpIC8vIEVuYWJsZSBmYWtlIHRpbWVycyBmb3Igc2ltdWxhdGluZyB0aW1lXG5cbmplc3QubW9jaygnQHJlYWN0LW5hdGl2ZS1jbGlwYm9hcmQvY2xpcGJvYXJkJykgLy8gTW9ja2luZyB0aGUgQ2xpcGJvYXJkIG1vZHVsZVxuXG5kZXNjcmliZSgnQWRkcmVzcyBjb21wb25lbnQnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgY29weSBmdWxsIGFkZHJlc3MgdG8gY2xpcGJvYXJkIGFuZCBjaGFuZ2Ugb3BhY2l0eSBvbiBwcmVzcycsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBybHlBY2NvdW50ID0gJ2V4YW1wbGVBZGRyZXNzMTIzNDUnXG5cbiAgICBjb25zdCB7IGdldEJ5VGVzdElkLCBnZXRCeVRleHQgfSA9IHJlbmRlcihcbiAgICAgIDxBZGRyZXNzIHJseUFjY291bnQ9e3JseUFjY291bnR9IC8+LFxuICAgIClcblxuICAgIGNvbnN0IGNvcHlCdXR0b24gPSBnZXRCeVRlc3RJZCgnY29weS1idXR0b24nKVxuXG4gICAgLy8gQ2hlY2sgdGhlIHJlbmRlcmVkIHRleHQgYWZ0ZXIgYW5pbWF0aW9ucyBjb21wbGV0ZVxuICAgIGNvbnN0IHJlbmRlcmVkVGV4dCA9IGdldEJ5VGV4dCgnZXhhbXBsLi4uMTIzNDUnKVxuICAgIGV4cGVjdChyZW5kZXJlZFRleHQpLnRvQmVUcnV0aHkoKVxuICB9KVxufSlcbiJdLCJtYXBwaW5ncyI6Ijs7QUFRQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsbUNBQW1DLENBQUM7QUFBQSxJQUFBQyxzQkFBQSxHQUFBQyxPQUFBO0FBQUEsSUFBQUMsa0JBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFFLFdBQUEsR0FBQUYsT0FBQTtBQUFBLElBQUFHLEtBQUE7RUFBQUMsWUFBQTtBQUFBLFNBQUFQLFlBQUE7RUFBQSxJQUFBUSxRQUFBLEdBQUFMLE9BQUE7SUFBQU0sSUFBQSxHQUFBRCxRQUFBLENBQUFDLElBQUE7RUFBQVQsV0FBQSxZQUFBQSxZQUFBO0lBQUEsT0FBQVMsSUFBQTtFQUFBO0VBQUEsT0FBQUEsSUFBQTtBQUFBOzs7Ozs7Ozs7QUFSOUMsSUFBQUMsT0FBQSxHQUFBQyxlQUFBLENBQUFSLE9BQUE7QUFFQSxJQUFBUyxjQUFBLEdBQUFULE9BQUE7QUFFQSxJQUFBVSxTQUFBLEdBQUFWLE9BQUE7QUFFQU0sSUFBSSxDQUFDSyxhQUFhLEVBQUU7QUFJcEJDLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxZQUFLO0VBQ2pDQyxFQUFFLENBQUMsbUVBQW1FLE1BQUFaLGtCQUFBLENBQUFhLE9BQUEsRUFBRSxhQUFXO0lBQ2pGLElBQU1DLFVBQVUsR0FBRyxxQkFBcUI7SUFFeEMsSUFBQUMsS0FBQSxHQUFtQyxJQUFBUCxjQUFBLENBQUFRLE1BQU0sRUFDdkMsSUFBQWYsV0FBQSxDQUFBZ0IsR0FBQSxFQUFDUixTQUFBLENBQUFTLE9BQU87UUFBQ0osVUFBVSxFQUFFQTtNQUFXLEVBQUcsQ0FDcEM7TUFGT0ssV0FBVyxHQUFBSixLQUFBLENBQVhJLFdBQVc7TUFBRUMsU0FBUyxHQUFBTCxLQUFBLENBQVRLLFNBQVM7SUFJOUIsSUFBTUMsVUFBVSxHQUFHRixXQUFXLENBQUMsYUFBYSxDQUFDO0lBRzdDLElBQU1HLFlBQVksR0FBR0YsU0FBUyxDQUFDLGdCQUFnQixDQUFDO0lBQ2hERyxNQUFNLENBQUNELFlBQVksQ0FBQyxDQUFDRSxVQUFVLEVBQUU7RUFDbkMsQ0FBQyxFQUFDO0FBQ0osQ0FBQyxDQUFDIn0=