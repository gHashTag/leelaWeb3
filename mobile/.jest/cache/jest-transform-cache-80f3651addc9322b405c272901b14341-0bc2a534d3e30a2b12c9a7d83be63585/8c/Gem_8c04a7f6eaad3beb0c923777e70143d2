981a0264f6113876659789bfe9600d1d
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Gem/Gem.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gem = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var cons_1 = require("../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var Text_1 = require("../Text/Text");
var Gem = function Gem(_ref) {
  var player = _ref.player,
    planNumber = _ref.planNumber,
    onPress = _ref.onPress;
  var container = styles.container,
    gems = styles.gems,
    circle = styles.circle;
  var source;
  if (player != null && player.avatar) {
    if (typeof player.avatar === 'string' && player.avatar !== '') {
      source = {
        uri: player.avatar
      };
    } else if (typeof player.avatar === 'number') {
      source = player.avatar;
    }
  }
  var isNumberVisible = !player && planNumber !== 68;
  console.log('isNumberVisible', isNumberVisible);
  return (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
    onPress: onPress,
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: container,
      testID: "gem-container",
      children: isNumberVisible ? (0, _jsxRuntime.jsx)(react_native_1.View, {
        style: [circle, gems],
        testID: "gem-number",
        children: (0, _jsxRuntime.jsx)(Text_1.Text, {
          h: 'h4',
          title: planNumber.toString(),
          oneColor: cons_1.gray,
          testID: "gem-number"
        })
      }) : (0, _jsxRuntime.jsx)(react_native_1.View, {
        style: [styles.imgStyle, {
          zIndex: player == null ? void 0 : player.id
        }],
        children: source && (0, _jsxRuntime.jsx)(react_native_1.Image, {
          style: gems,
          source: source,
          testID: "player-gem-image"
        })
      })
    })
  });
};
exports.Gem = Gem;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  gems: {
    width: (0, react_native_size_matters_1.ms)(42, 0.5),
    height: (0, react_native_size_matters_1.ms)(42, 0.5),
    borderRadius: (0, react_native_size_matters_1.ms)(42, 0.5) / 2
  },
  circle: {
    width: (0, react_native_size_matters_1.ms)(44),
    height: (0, react_native_size_matters_1.ms)(44),
    borderRadius: (0, react_native_size_matters_1.ms)(44) / 2,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: 'transparent'
  },
  imgStyle: {
    position: 'absolute'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiY29uc18xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiVGV4dF8xIiwiR2VtIiwiX3JlZiIsInBsYXllciIsInBsYW5OdW1iZXIiLCJvblByZXNzIiwiY29udGFpbmVyIiwic3R5bGVzIiwiZ2VtcyIsImNpcmNsZSIsInNvdXJjZSIsImF2YXRhciIsInVyaSIsImlzTnVtYmVyVmlzaWJsZSIsImNvbnNvbGUiLCJsb2ciLCJfanN4UnVudGltZSIsImpzeCIsIlByZXNzYWJsZSIsImNoaWxkcmVuIiwiVmlldyIsInN0eWxlIiwidGVzdElEIiwiVGV4dCIsImgiLCJ0aXRsZSIsInRvU3RyaW5nIiwib25lQ29sb3IiLCJncmF5IiwiaW1nU3R5bGUiLCJ6SW5kZXgiLCJpZCIsIkltYWdlIiwiZXhwb3J0cyIsIlNjYWxlZFNoZWV0IiwiY3JlYXRlIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50Iiwid2lkdGgiLCJtcyIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsImJhY2tncm91bmRDb2xvciIsInBvc2l0aW9uIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9HZW0vR2VtLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IFZpZXcsIEltYWdlLCBQcmVzc2FibGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnXG5cbmltcG9ydCB7IGdyYXkgfSBmcm9tICdjb25zJ1xuaW1wb3J0IHsgU2NhbGVkU2hlZXQsIG1zIH0gZnJvbSAncmVhY3QtbmF0aXZlLXNpemUtbWF0dGVycydcbmltcG9ydCB7IEdlbVByb3BzIH0gZnJvbSAndHlwZXMnXG5cbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi9UZXh0L1RleHQnXG5cbmNvbnN0IEdlbTogUmVhY3QuRkM8R2VtUHJvcHM+ID0gKHsgcGxheWVyLCBwbGFuTnVtYmVyLCBvblByZXNzIH0pID0+IHtcbiAgY29uc3QgeyBjb250YWluZXIsIGdlbXMsIGNpcmNsZSB9ID0gc3R5bGVzXG5cbiAgbGV0IHNvdXJjZVxuXG4gIGlmIChwbGF5ZXI/LmF2YXRhcikge1xuICAgIGlmICh0eXBlb2YgcGxheWVyLmF2YXRhciA9PT0gJ3N0cmluZycgJiYgcGxheWVyLmF2YXRhciAhPT0gJycpIHtcbiAgICAgIHNvdXJjZSA9IHsgdXJpOiBwbGF5ZXIuYXZhdGFyIH1cbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBwbGF5ZXIuYXZhdGFyID09PSAnbnVtYmVyJykge1xuICAgICAgc291cmNlID0gcGxheWVyLmF2YXRhclxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGlzTnVtYmVyVmlzaWJsZSA9ICFwbGF5ZXIgJiYgcGxhbk51bWJlciAhPT0gNjhcbiAgY29uc29sZS5sb2coJ2lzTnVtYmVyVmlzaWJsZScsIGlzTnVtYmVyVmlzaWJsZSlcbiAgcmV0dXJuIChcbiAgICA8UHJlc3NhYmxlIG9uUHJlc3M9e29uUHJlc3N9PlxuICAgICAgPFZpZXcgc3R5bGU9e2NvbnRhaW5lcn0gdGVzdElEPVwiZ2VtLWNvbnRhaW5lclwiPlxuICAgICAgICB7aXNOdW1iZXJWaXNpYmxlID8gKFxuICAgICAgICAgIDxWaWV3IHN0eWxlPXtbY2lyY2xlLCBnZW1zXX0gdGVzdElEPVwiZ2VtLW51bWJlclwiPlxuICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgaD17J2g0J31cbiAgICAgICAgICAgICAgdGl0bGU9e3BsYW5OdW1iZXIudG9TdHJpbmcoKX1cbiAgICAgICAgICAgICAgb25lQ29sb3I9e2dyYXl9XG4gICAgICAgICAgICAgIHRlc3RJRD1cImdlbS1udW1iZXJcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPFZpZXcgc3R5bGU9e1tzdHlsZXMuaW1nU3R5bGUsIHsgekluZGV4OiBwbGF5ZXI/LmlkIH1dfT5cbiAgICAgICAgICAgIHtzb3VyY2UgJiYgKFxuICAgICAgICAgICAgICA8SW1hZ2Ugc3R5bGU9e2dlbXN9IHNvdXJjZT17c291cmNlfSB0ZXN0SUQ9XCJwbGF5ZXItZ2VtLWltYWdlXCIgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9WaWV3PlxuICAgICAgICApfVxuICAgICAgPC9WaWV3PlxuICAgIDwvUHJlc3NhYmxlPlxuICApXG59XG5cbmNvbnN0IHN0eWxlcyA9IFNjYWxlZFNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgfSxcbiAgZ2Vtczoge1xuICAgIHdpZHRoOiBtcyg0MiwgMC41KSxcbiAgICBoZWlnaHQ6IG1zKDQyLCAwLjUpLFxuICAgIGJvcmRlclJhZGl1czogbXMoNDIsIDAuNSkgLyAyLFxuICB9LFxuICBjaXJjbGU6IHtcbiAgICB3aWR0aDogbXMoNDQpLFxuICAgIGhlaWdodDogbXMoNDQpLFxuICAgIGJvcmRlclJhZGl1czogbXMoNDQpIC8gMixcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICB9LFxuICBpbWdTdHlsZToge1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB9LFxufSlcblxuZXhwb3J0IHsgR2VtIH1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFDLGNBQUEsR0FBQUQsT0FBQTtBQUVBLElBQUFFLE1BQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLDJCQUFBLEdBQUFILE9BQUE7QUFHQSxJQUFBSSxNQUFBLEdBQUFKLE9BQUE7QUFFQSxJQUFNSyxHQUFHLEdBQXVCLFNB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