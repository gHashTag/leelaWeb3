6ad790c668e5d4f5f5192818b42ccd70
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/ReportCard/ReportCard.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReportCard = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var components_1 = require("./..");
var cons_1 = require("../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var ReportCard = function ReportCard(_ref) {
  var post = _ref.post,
    onPress = _ref.onPress,
    fullName = _ref.fullName,
    avatar = _ref.avatar,
    isAdmin = _ref.isAdmin,
    isLiked = _ref.isLiked,
    likeCount = _ref.likeCount,
    commCount = _ref.commCount,
    date = _ref.date,
    handleProfile = _ref.handleProfile,
    handleAdminMenu = _ref.handleAdminMenu,
    handleShareLink = _ref.handleShareLink,
    handleLike = _ref.handleLike,
    handleComment = _ref.handleComment;
  return (0, _jsxRuntime.jsx)(components_1.NeomorphView, {
    viewStyle: styles.card,
    children: (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
      onPress: onPress,
      style: styles.container,
      children: (0, _jsxRuntime.jsxs)(react_native_1.View, {
        style: styles.contentContainer,
        children: [(0, _jsxRuntime.jsxs)(react_native_1.View, {
          style: styles.headerInfo,
          children: [(0, _jsxRuntime.jsxs)(react_native_1.View, {
            style: styles.headerName,
            children: [(0, _jsxRuntime.jsxs)(react_native_1.View, {
              style: styles.userInfoContainer,
              children: [(0, _jsxRuntime.jsx)(components_1.Text, {
                numberOfLines: 1,
                h: 'h2',
                title: fullName,
                ellipsizeMode: "tail"
              }), (0, _jsxRuntime.jsx)(components_1.Space, {
                height: (0, react_native_size_matters_1.vs)(8)
              }), (0, _jsxRuntime.jsx)(components_1.Text, {
                h: 'h3',
                textStyle: styles.lightText,
                title: `${date}`
              })]
            }), (0, _jsxRuntime.jsx)(react_native_1.View, {
              style: styles.avatarStyle,
              children: (0, _jsxRuntime.jsx)(components_1.Avatar, {
                avatar: avatar,
                onPress: handleProfile,
                size: 'medium',
                plan: post.plan,
                isAccept: post.accept,
                aditionalStyle: styles.img
              })
            })]
          }), (0, _jsxRuntime.jsx)(components_1.Space, {
            height: (0, react_native_size_matters_1.vs)(11)
          }), (0, _jsxRuntime.jsx)(components_1.Text, {
            h: 'h4',
            textStyle: styles.lightText,
            title: post.text || ' ',
            numberOfLines: 4
          })]
        }), (0, _jsxRuntime.jsx)(components_1.ActionButtons, {
          isAdmin: isAdmin,
          commCount: commCount,
          likeCount: likeCount,
          handleAdminMenu: handleAdminMenu,
          handleComment: handleComment,
          handleLike: handleLike,
          handleShareLink: handleShareLink,
          isLiked: isLiked
        })]
      })
    })
  });
};
exports.ReportCard = ReportCard;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    flex: 1,
    paddingHorizontal: (0, react_native_size_matters_1.s)(15),
    paddingVertical: (0, react_native_size_matters_1.s)(6),
    alignItems: 'center'
  },
  card: {
    width: cons_1.W - 50,
    height: (0, react_native_size_matters_1.vs)(160)
  },
  img: {
    top: 9,
    marginBottom: (0, react_native_size_matters_1.s)(12)
  },
  btnsContainer: {
    justifyContent: 'space-between',
    top: 5,
    flexDirection: 'row',
    padding: (0, react_native_size_matters_1.s)(8)
  },
  smallBtn: {
    flexDirection: 'row'
  },
  contentContainer: {
    flex: 1
  },
  headerInfo: {
    flexDirection: 'column',
    flex: 1
  },
  headerName: {
    justifyContent: 'space-between',
    flexDirection: 'row'
  },
  lightText: {
    textAlign: 'left'
  },
  userInfoContainer: {
    width: cons_1.W - 150,
    top: 15
  },
  nonDetailCommentButton: {
    justifyContent: 'flex-start'
  },
  nonDetailLinkButton: {
    justifyContent: 'flex-end',
    marginRight: (0, react_native_size_matters_1.s)(5)
  },
  nonDetailAdminMenuButton: {
    alignItems: 'flex-end',
    marginRight: (0, react_native_size_matters_1.s)(4)
  },
  avatarStyle: {
    top: 10
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,