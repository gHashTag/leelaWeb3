{"version":3,"names":["react_1","__importStar","require","react_native_1","react_native_size_matters_1","getImage","number","Dice","_ref","count","players","disabled","canGo","isReported","updateStep","random","_ref2","useState","_ref3","_slicedToArray2","default","canRoll","setCanRoll","spinValue","useRef","Animated","Value","current","handleSpin","value","duration","setValue","timing","toValue","easing","Easing","linear","useNativeDriver","start","setTimeout","isOpacity","spin","interpolate","inputRange","outputRange","rollDice","_jsxRuntime","jsx","Pressable","onPress","style","styles","diceContainer","opacityCube","testID","children","Image","image","transform","rotate","source","exports","StyleSheet","create","alignItems","alignSelf","marginVertical","vs","height","width","opacity"],"sources":["/Users/playra/LeelaAiWeb3/src/components/Dice/index.tsx"],"sourcesContent":["import React, {useRef, useState} from 'react'\nimport {Animated, Easing, Pressable, StyleSheet} from 'react-native'\nimport {vs} from 'react-native-size-matters'\n\nexport interface DiceProps {\n  count: number\n  players: number\n  disabled: boolean\n  canGo: boolean\n  isReported: boolean\n  updateStep: (index?: number) => void\n  random: () => void\n}\n\nconst getImage = (number: number) => {\n  // Замените путь на действительное расположение ресурсов\n  switch (number) {\n    case 1:\n      return require('./assets/1.png')\n    case 2:\n      return require('./assets/2.png')\n    case 3:\n      return require('./assets/3.png')\n    case 4:\n      return require('./assets/4.png')\n    case 5:\n      return require('./assets/5.png')\n    case 6:\n      return require('./assets/6.png')\n  }\n}\n\nconst Dice = ({\n  count,\n  players,\n  disabled,\n  canGo,\n  isReported,\n  updateStep,\n  random,\n}: DiceProps) => {\n  const [canRoll, setCanRoll] = useState<boolean>(true)\n  const spinValue = useRef(new Animated.Value(0)).current\n\n  const handleSpin = (value: number) => {\n    const duration = (value / 2) * 500\n    spinValue.setValue(0)\n    Animated.timing(spinValue, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.linear,\n      useNativeDriver: true,\n    }).start(() => {\n      disabled ? updateStep() : updateStep(players - 1)\n      setTimeout(() => setCanRoll(true), 200)\n    })\n  }\n\n  const isOpacity = (!canGo && disabled) || (disabled && !isReported)\n\n  const spin = spinValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg'],\n  })\n\n  const rollDice = (): void => {\n    if (isOpacity) {\n      return\n    }\n    setCanRoll(false)\n    random()\n    handleSpin(count)\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        canRoll && rollDice()\n      }}\n      style={[styles.diceContainer, isOpacity && styles.opacityCube]}\n      testID=\"dice-component\">\n      <Animated.Image\n        style={[styles.image, {transform: [{rotate: spin}]}]}\n        source={getImage(count)}\n      />\n    </Pressable>\n  )\n}\n\nconst styles = StyleSheet.create({\n  diceContainer: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginVertical: vs(12),\n  },\n  image: {\n    height: vs(65),\n    width: vs(65),\n  },\n  opacityCube: {\n    opacity: 0.4,\n  },\n})\n\nexport {Dice}\n"],"mappings":"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"}