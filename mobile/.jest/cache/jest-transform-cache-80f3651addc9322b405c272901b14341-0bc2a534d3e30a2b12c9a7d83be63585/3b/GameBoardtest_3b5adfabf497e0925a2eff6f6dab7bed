432b2a742f4d17aaf8c7ca84c3b1589c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _jsxRuntime = require("react/jsx-runtime");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/GameBoard/GameBoard.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var __1 = require("../");
var players = [{
  id: 2,
  plan: 72,
  avatar: 106
}, {
  id: 4,
  plan: 34,
  avatar: 'https://bafkreiftrmfmimlvo26xaxfvt2ypnjjaavq5mgnkjljs6mczfekii4cmtq.ipfs.nftstorage.link/'
}];
describe('GameBoard Component', function () {
  test('should render the correct number of Gem components based on the players prop', function () {
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(__1.GameBoard, {
        players: players
      })),
      getAllByTestId = _ref.getAllByTestId;
    var gemComponents = getAllByTestId('gem-container');
    var playerGemImages = getAllByTestId('player-gem-image');
    expect(playerGemImages.length).toEqual(2);
    expect(gemComponents.length).toEqual(72);
  });
  test('should render correct player avatars', (0, _asyncToGenerator2.default)(function* () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(__1.GameBoard, {
        players: players
      })),
      queryByTestId = _ref3.queryByTestId;
    yield (0, react_native_1.waitFor)(function () {
      players.forEach(function (player) {
        var playerGemImage = queryByTestId(`gem-${player.id}`);
        expect(playerGemImage).toBeTruthy();
        if (typeof player.avatar === 'string') {
          var _playerGemImage$props, _playerGemImage$props2;
          expect(playerGemImage == null ? void 0 : (_playerGemImage$props = playerGemImage.props) == null ? void 0 : (_playerGemImage$props2 = _playerGemImage$props.source) == null ? void 0 : _playerGemImage$props2.uri).toEqual(player.avatar);
        }
      });
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiX18xIiwicGxheWVycyIsImlkIiwicGxhbiIsImF2YXRhciIsImRlc2NyaWJlIiwidGVzdCIsIl9yZWYiLCJyZW5kZXIiLCJfanN4UnVudGltZSIsImpzeCIsIkdhbWVCb2FyZCIsImdldEFsbEJ5VGVzdElkIiwiZ2VtQ29tcG9uZW50cyIsInBsYXllckdlbUltYWdlcyIsImV4cGVjdCIsImxlbmd0aCIsInRvRXF1YWwiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwiX3JlZjMiLCJxdWVyeUJ5VGVzdElkIiwid2FpdEZvciIsImZvckVhY2giLCJwbGF5ZXIiLCJwbGF5ZXJHZW1JbWFnZSIsInRvQmVUcnV0aHkiLCJfcGxheWVyR2VtSW1hZ2UkcHJvcHMiLCJfcGxheWVyR2VtSW1hZ2UkcHJvcHMyIiwicHJvcHMiLCJzb3VyY2UiLCJ1cmkiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL0dhbWVCb2FyZC9HYW1lQm9hcmQudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyByZW5kZXIsIHdhaXRGb3IgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSdcbmltcG9ydCB7IFBsYXllciB9IGZyb20gJ3R5cGVzJ1xuXG5pbXBvcnQgeyBHYW1lQm9hcmQgfSBmcm9tICcuLi8nXG5cbmNvbnN0IHBsYXllcnM6IFBsYXllcltdID0gW1xuICB7XG4gICAgaWQ6IDIsXG4gICAgcGxhbjogNzIsXG4gICAgYXZhdGFyOiAxMDYsXG4gIH0sXG4gIHtcbiAgICBpZDogNCxcbiAgICBwbGFuOiAzNCxcbiAgICBhdmF0YXI6XG4gICAgICAnaHR0cHM6Ly9iYWZrcmVpZnRybWZtaW1sdm8yNnhheGZ2dDJ5cG5qamFhdnE1bWdua2psanM2bWN6ZmVraWk0Y210cS5pcGZzLm5mdHN0b3JhZ2UubGluay8nLFxuICB9LFxuXVxuXG5kZXNjcmliZSgnR2FtZUJvYXJkIENvbXBvbmVudCcsICgpID0+IHtcbiAgdGVzdCgnc2hvdWxkIHJlbmRlciB0aGUgY29ycmVjdCBudW1iZXIgb2YgR2VtIGNvbXBvbmVudHMgYmFzZWQgb24gdGhlIHBsYXllcnMgcHJvcCcsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEFsbEJ5VGVzdElkIH0gPSByZW5kZXIoPEdhbWVCb2FyZCBwbGF5ZXJzPXtwbGF5ZXJzfSAvPilcbiAgICBjb25zdCBnZW1Db21wb25lbnRzID0gZ2V0QWxsQnlUZXN0SWQoJ2dlbS1jb250YWluZXInKVxuICAgIGNvbnN0IHBsYXllckdlbUltYWdlcyA9IGdldEFsbEJ5VGVzdElkKCdwbGF5ZXItZ2VtLWltYWdlJylcbiAgICBleHBlY3QocGxheWVyR2VtSW1hZ2VzLmxlbmd0aCkudG9FcXVhbCgyKSAvLyDQn9GA0L7QstC10YDQutCwINC90LAgMiDQuNCz0YDQvtC60LBcbiAgICBleHBlY3QoZ2VtQ29tcG9uZW50cy5sZW5ndGgpLnRvRXF1YWwoNzIpIC8vINCf0YDQvtCy0LXRgNC60LAg0L3QsCDQvtCx0YnQtdC1INC60L7Qu9C40YfQtdGB0YLQstC+INC60L7QvNC/0L7QvdC10L3RgtC+0LIgR2VtXG4gIH0pXG5cbiAgdGVzdCgnc2hvdWxkIHJlbmRlciBjb3JyZWN0IHBsYXllciBhdmF0YXJzJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHsgcXVlcnlCeVRlc3RJZCB9ID0gcmVuZGVyKDxHYW1lQm9hcmQgcGxheWVycz17cGxheWVyc30gLz4pXG5cbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcbiAgICAgIHBsYXllcnMuZm9yRWFjaCgocGxheWVyKSA9PiB7XG4gICAgICAgIGNvbnN0IHBsYXllckdlbUltYWdlID0gcXVlcnlCeVRlc3RJZChgZ2VtLSR7cGxheWVyLmlkfWApXG4gICAgICAgIGV4cGVjdChwbGF5ZXJHZW1JbWFnZSkudG9CZVRydXRoeSgpXG4gICAgICAgIGlmICh0eXBlb2YgcGxheWVyLmF2YXRhciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBleHBlY3QocGxheWVyR2VtSW1hZ2U/LnByb3BzPy5zb3VyY2U/LnVyaSkudG9FcXVhbChwbGF5ZXIuYXZhdGFyKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gIH0pXG59KVxuXG4vLyB0ZXN0KCdzaG91bGQgcmVuZGVyIHBsYXllciBhdmF0YXJzJywgKCkgPT4ge1xuLy8gICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoPEdhbWVCb2FyZCBwbGF5ZXJzPXtwbGF5ZXJzfSAvPilcblxuLy8gICBwbGF5ZXJzLmZvckVhY2goKHBsYXllcikgPT4ge1xuLy8gICAgIGNvbnN0IGdlbUltYWdlID0gZ2V0QnlUZXN0SWQoYGdlbS0ke3BsYXllci5pZH1gKVxuLy8gICAgIGV4cGVjdChnZW1JbWFnZSkudG9CZVRydXRoeSgpXG4vLyAgIH0pXG4vLyB9KVxuXG4vLyB0ZXN0KCdzaG91bGQgcmVuZGVyIHRoZSBjb3JyZWN0IG51bWJlciBvZiBHZW0gY29tcG9uZW50cyBiYXNlZCBvbiB0aGUgcGxheWVycyBwcm9wJywgKCkgPT4ge1xuLy8gICBjb25zdCB7IGdldEFsbEJ5VGVzdElkIH0gPSByZW5kZXIoPEdhbWVCb2FyZCBwbGF5ZXJzPXtwbGF5ZXJzfSAvPilcblxuLy8gICBjb25zdCBnZW1Db21wb25lbnRzID0gZ2V0QWxsQnlUZXN0SWQoL15nZW0tXFxkKyQvKVxuLy8gICBleHBlY3QoZ2VtQ29tcG9uZW50cy5sZW5ndGgpLnRvRXF1YWwoNzIpIC8vINCe0LHRidC10LUg0LrQvtC70LjRh9C10YHRgtCy0L4gR2VtINC60L7QvNC/0L7QvdC10L3RgtC+0LIg0LHQtdC3INC/0YPRgdGC0YvRhSDRj9GH0LXQtdC6XG4vLyB9KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFDLGNBQUEsR0FBQUQsT0FBQTtBQUdBLElBQUFFLEdBQUEsR0FBQUYsT0FBQTtBQUVBLElBQU1HLE9BQU8sR0FBYSxDQUN4QjtFQUNFQyxFQUFFLEVBQUUsQ0FBQztFQUNMQyxJQUFJLEVBQUUsRUFBRTtFQUNSQyxNQUFNLEVBQUU7Q0FDVCxFQUNEO0VBQ0VGLEVBQUUsRUFBRSxDQUFDO0VBQ0xDLElBQUksRUFBRSxFQUFFO0VBQ1JDLE1BQU0sRUFDSjtDQUNILENBQ0Y7QUFFREMsUUFBUSxDQUFDLHFCQUFxQixFQUFFLFlBQUs7RUFDbkNDLElBQUksQ0FBQyw4RUFBOEUsRUFBRSxZQUFLO0lBQ3hGLElBQUFDLElBQUEsR0FBMkIsSUFBQVIsY0FBQSxDQUFBUyxNQUFNLEVBQUMsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNWLEdBQUEsQ0FBQVcsU0FBUztRQUFDVixPQUFPLEVBQUVBO01BQVEsRUFBRyxDQUFDO01BQTFEVyxjQUFjLEdBQUFMLElBQUEsQ0FBZEssY0FBYztJQUN0QixJQUFNQyxhQUFhLEdBQUdELGNBQWMsQ0FBQyxlQUFlLENBQUM7SUFDckQsSUFBTUUsZUFBZSxHQUFHRixjQUFjLENBQUMsa0JBQWtCLENBQUM7SUFDMURHLE1BQU0sQ0FBQ0QsZUFBZSxDQUFDRSxNQUFNLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN6Q0YsTUFBTSxDQUFDRixhQUFhLENBQUNHLE1BQU0sQ0FBQyxDQUFDQyxPQUFPLENBQUMsRUFBRSxDQUFDO0VBQzFDLENBQUMsQ0FBQztFQUVGWCxJQUFJLENBQUMsc0NBQXNDLE1BQUFZLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxhQUFXO0lBQ3RELElBQUFDLEtBQUEsR0FBMEIsSUFBQXJCLGNBQUEsQ0FBQVMsTUFBTSxFQUFDLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDVixHQUFBLENBQUFXLFNBQVM7UUFBQ1YsT0FBTyxFQUFFQTtNQUFRLEVBQUcsQ0FBQztNQUF6RG9CLGFBQWEsR0FBQUQsS0FBQSxDQUFiQyxhQUFhO0lBRXJCLE1BQU0sSUFBQXRCLGNBQUEsQ0FBQXVCLE9BQU8sRUFBQyxZQUFLO01BQ2pCckIsT0FBTyxDQUFDc0IsT0FBTyxDQUFDLFVBQUNDLE1BQU0sRUFBSTtRQUN6QixJQUFNQyxjQUFjLEdBQUdKLGFBQWEsQ0FBQyxPQUFPRyxNQUFNLENBQUN0QixFQUFFLEVBQUUsQ0FBQztRQUN4RGEsTUFBTSxDQUFDVSxjQUFjLENBQUMsQ0FBQ0MsVUFBVSxFQUFFO1FBQ25DLElBQUksT0FBT0YsTUFBTSxDQUFDcEIsTUFBTSxLQUFLLFFBQVEsRUFBRTtVQUFBLElBQUF1QixxQkFBQSxFQUFBQyxzQkFBQTtVQUNyQ2IsTUFBTSxDQUFDVSxjQUFjLHFCQUFBRSxxQkFBQSxHQUFkRixjQUFjLENBQUVJLEtBQUssc0JBQUFELHNCQUFBLEdBQXJCRCxxQkFBQSxDQUF1QkcsTUFBTSxxQkFBN0JGLHNCQUFBLENBQStCRyxHQUFHLENBQUMsQ0FBQ2QsT0FBTyxDQUFDTyxNQUFNLENBQUNwQixNQUFNLENBQUM7O01BRXJFLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQUMsRUFBQztBQUNKLENBQUMsQ0FBQyJ9