545f2dfeec1390cce3087267fd511826
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/CommentBubbleRight/CommentBubbleRight.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommentBubbleRight = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var components_1 = require("./..");
var cons_1 = require("../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var CommentBubbleRight = function CommentBubbleRight(_ref) {
  var post = _ref.post,
    onPress = _ref.onPress,
    fullName = _ref.fullName,
    avatar = _ref.avatar,
    date = _ref.date,
    handleProfile = _ref.handleProfile;
  return (0, _jsxRuntime.jsx)(components_1.NeomorphFlexView, {
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: styles.container,
      children: (0, _jsxRuntime.jsxs)(react_native_1.Pressable, {
        onPress: onPress,
        testID: "comment-bubble-right-container",
        children: [(0, _jsxRuntime.jsxs)(react_native_1.View, {
          style: styles.bubbleStyle,
          children: [(0, _jsxRuntime.jsxs)(react_native_1.View, {
            style: styles.headerName,
            children: [(0, _jsxRuntime.jsx)(components_1.Text, {
              h: 'h4',
              textStyle: styles.lightText,
              title: post.text || ' ',
              testID: "comment-bubble-right-comment"
            }), (0, _jsxRuntime.jsx)(components_1.Space, {
              height: (0, react_native_size_matters_1.vs)(5)
            }), (0, _jsxRuntime.jsx)(components_1.Text, {
              title: fullName,
              h: 'h4',
              numberOfLines: 1,
              textStyle: styles.nameStyle,
              testID: "comment-bubble-right-fullName"
            }), (0, _jsxRuntime.jsx)(components_1.Space, {
              height: (0, react_native_size_matters_1.vs)(2)
            }), (0, _jsxRuntime.jsx)(components_1.Text, {
              title: date,
              h: 'h5',
              textStyle: styles.dateStyle,
              testID: "comment-bubble-right-date"
            })]
          }), (0, _jsxRuntime.jsx)(components_1.Avatar, {
            avatar: avatar,
            onPress: handleProfile,
            size: 'medium',
            plan: post.plan,
            isAccept: post.accept,
            additionalStyle: styles.img,
            testID: "avatar-bubble-right"
          })]
        }), (0, _jsxRuntime.jsx)(components_1.Space, {
          height: (0, react_native_size_matters_1.vs)(2)
        }), (0, _jsxRuntime.jsx)(react_native_1.View, {
          style: styles.headerName
        })]
      })
    })
  });
};
exports.CommentBubbleRight = CommentBubbleRight;
var styles = react_native_1.StyleSheet.create({
  bubbleStyle: {
    alignSelf: 'flex-start',
    flexDirection: 'row'
  },
  container: {
    paddingBottom: (0, react_native_size_matters_1.s)(10),
    paddingHorizontal: (0, react_native_size_matters_1.s)(10),
    paddingTop: (0, react_native_size_matters_1.s)(20)
  },
  dateStyle: {
    paddingRight: 10
  },
  headerName: {
    alignItems: 'flex-end'
  },
  img: {
    top: 9
  },
  lightText: {
    maxWidth: cons_1.W - 120,
    paddingRight: 10,
    textAlign: 'right'
  },
  nameStyle: {
    fontWeight: 'bold',
    paddingRight: 10
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,