fbe06b8718e4a8cf26f4b6a94609162e
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Gem/Gem.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gem = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var cons_1 = require("../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var Text_1 = require("../Text/Text");
var Gem = function Gem(_ref) {
  var player = _ref.player,
    planNumber = _ref.planNumber,
    onPress = _ref.onPress;
  var container = styles.container,
    gems = styles.gems,
    circle = styles.circle;
  var source;
  if (player != null && player.avatar) {
    if (typeof player.avatar === 'string' && player.avatar !== '') {
      source = {
        uri: player.avatar
      };
    } else if (typeof player.avatar === 'number') {
      source = player.avatar;
    }
  }
  var isNumberVisible = !player && planNumber !== 68;
  console.log('isNumberVisible', isNumberVisible);
  return (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
    onPress: onPress,
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: container,
      testID: "gem-container",
      children: isNumberVisible ? (0, _jsxRuntime.jsx)(react_native_1.View, {
        style: [circle, gems],
        testID: "gem-number",
        children: (0, _jsxRuntime.jsx)(Text_1.Text, {
          h: 'h4',
          title: planNumber.toString(),
          oneColor: cons_1.gray,
          testID: "gem"
        })
      }) : (0, _jsxRuntime.jsx)(react_native_1.View, {
        style: [styles.imgStyle, {
          zIndex: player == null ? void 0 : player.id
        }],
        children: source && (0, _jsxRuntime.jsx)(react_native_1.Image, {
          style: gems,
          source: source,
          testID: "player-gem-image"
        })
      })
    })
  });
};
exports.Gem = Gem;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  gems: {
    width: (0, react_native_size_matters_1.ms)(42, 0.5),
    height: (0, react_native_size_matters_1.ms)(42, 0.5),
    borderRadius: (0, react_native_size_matters_1.ms)(42, 0.5) / 2
  },
  circle: {
    width: (0, react_native_size_matters_1.ms)(44),
    height: (0, react_native_size_matters_1.ms)(44),
    borderRadius: (0, react_native_size_matters_1.ms)(44) / 2,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: 'transparent'
  },
  imgStyle: {
    position: 'absolute'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiY29uc18xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiVGV4dF8xIiwiR2VtIiwiX3JlZiIsInBsYXllciIsInBsYW5OdW1iZXIiLCJvblByZXNzIiwiY29udGFpbmVyIiwic3R5bGVzIiwiZ2VtcyIsImNpcmNsZSIsInNvdXJjZSIsImF2YXRhciIsInVyaSIsImlzTnVtYmVyVmlzaWJsZSIsImNvbnNvbGUiLCJsb2ciLCJfanN4UnVudGltZSIsImpzeCIsIlByZXNzYWJsZSIsImNoaWxkcmVuIiwiVmlldyIsInN0eWxlIiwidGVzdElEIiwiVGV4dCIsImgiLCJ0aXRsZSIsInRvU3RyaW5nIiwib25lQ29sb3IiLCJncmF5IiwiaW1nU3R5bGUiLCJ6SW5kZXgiLCJpZCIsIkltYWdlIiwiZXhwb3J0cyIsIlNjYWxlZFNoZWV0IiwiY3JlYXRlIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50Iiwid2lkdGgiLCJtcyIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsImJhY2tncm91bmRDb2xvciIsInBvc2l0aW9uIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9HZW0vR2VtLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IFZpZXcsIEltYWdlLCBQcmVzc2FibGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnXG5cbmltcG9ydCB7IGdyYXkgfSBmcm9tICdjb25zJ1xuaW1wb3J0IHsgU2NhbGVkU2hlZXQsIG1zIH0gZnJvbSAncmVhY3QtbmF0aXZlLXNpemUtbWF0dGVycydcbmltcG9ydCB7IEdlbVByb3BzIH0gZnJvbSAndHlwZXMnXG5cbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi9UZXh0L1RleHQnXG5cbmNvbnN0IEdlbTogUmVhY3QuRkM8R2VtUHJvcHM+ID0gKHsgcGxheWVyLCBwbGFuTnVtYmVyLCBvblByZXNzIH0pID0+IHtcbiAgY29uc3QgeyBjb250YWluZXIsIGdlbXMsIGNpcmNsZSB9ID0gc3R5bGVzXG5cbiAgbGV0IHNvdXJjZVxuXG4gIGlmIChwbGF5ZXI/LmF2YXRhcikge1xuICAgIGlmICh0eXBlb2YgcGxheWVyLmF2YXRhciA9PT0gJ3N0cmluZycgJiYgcGxheWVyLmF2YXRhciAhPT0gJycpIHtcbiAgICAgIHNvdXJjZSA9IHsgdXJpOiBwbGF5ZXIuYXZhdGFyIH1cbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBwbGF5ZXIuYXZhdGFyID09PSAnbnVtYmVyJykge1xuICAgICAgc291cmNlID0gcGxheWVyLmF2YXRhclxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGlzTnVtYmVyVmlzaWJsZSA9ICFwbGF5ZXIgJiYgcGxhbk51bWJlciAhPT0gNjhcbiAgY29uc29sZS5sb2coJ2lzTnVtYmVyVmlzaWJsZScsIGlzTnVtYmVyVmlzaWJsZSlcbiAgcmV0dXJuIChcbiAgICA8UHJlc3NhYmxlIG9uUHJlc3M9e29uUHJlc3N9PlxuICAgICAgPFZpZXcgc3R5bGU9e2NvbnRhaW5lcn0gdGVzdElEPVwiZ2VtLWNvbnRhaW5lclwiPlxuICAgICAgICB7aXNOdW1iZXJWaXNpYmxlID8gKFxuICAgICAgICAgIDxWaWV3IHN0eWxlPXtbY2lyY2xlLCBnZW1zXX0gdGVzdElEPVwiZ2VtLW51bWJlclwiPlxuICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgaD17J2g0J31cbiAgICAgICAgICAgICAgdGl0bGU9e3BsYW5OdW1iZXIudG9TdHJpbmcoKX1cbiAgICAgICAgICAgICAgb25lQ29sb3I9e2dyYXl9XG4gICAgICAgICAgICAgIHRlc3RJRD1cImdlbVwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8VmlldyBzdHlsZT17W3N0eWxlcy5pbWdTdHlsZSwgeyB6SW5kZXg6IHBsYXllcj8uaWQgfV19PlxuICAgICAgICAgICAge3NvdXJjZSAmJiAoXG4gICAgICAgICAgICAgIDxJbWFnZSBzdHlsZT17Z2Vtc30gc291cmNlPXtzb3VyY2V9IHRlc3RJRD1cInBsYXllci1nZW0taW1hZ2VcIiAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICl9XG4gICAgICA8L1ZpZXc+XG4gICAgPC9QcmVzc2FibGU+XG4gIClcbn1cblxuY29uc3Qgc3R5bGVzID0gU2NhbGVkU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICB9LFxuICBnZW1zOiB7XG4gICAgd2lkdGg6IG1zKDQyLCAwLjUpLFxuICAgIGhlaWdodDogbXMoNDIsIDAuNSksXG4gICAgYm9yZGVyUmFkaXVzOiBtcyg0MiwgMC41KSAvIDIsXG4gIH0sXG4gIGNpcmNsZToge1xuICAgIHdpZHRoOiBtcyg0NCksXG4gICAgaGVpZ2h0OiBtcyg0NCksXG4gICAgYm9yZGVyUmFkaXVzOiBtcyg0NCkgLyAyLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXG4gIH0sXG4gIGltZ1N0eWxlOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIH0sXG59KVxuXG5leHBvcnQgeyBHZW0gfVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsTUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsMkJBQUEsR0FBQUgsT0FBQTtBQUdBLElBQUFJLE1BQUEsR0FBQUosT0FBQTtBQUVBLElBQU1LLEdBQUcsR0FBdUIsU0FBMUJBLEdB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