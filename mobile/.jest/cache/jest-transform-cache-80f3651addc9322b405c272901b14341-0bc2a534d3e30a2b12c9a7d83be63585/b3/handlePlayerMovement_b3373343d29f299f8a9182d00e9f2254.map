{"version":3,"names":["i18next_1","__importDefault","require","MAX_ROLL","TOTAL_PLANS","WIN_PLAN","handleToMove","name","updatedPlayer","newPlan","to","roll","updatedMessage","default","t","currentPlayer","id","from","Object","assign","message","plan","handlePlayerMovement","isStart","startMessage","consecutiveSixes","previousPlan","isFinished","exports"],"sources":["/Users/playra/LeelaAiWeb3/src/hooks/useLeelaGame/handlePlayerMovement.ts"],"sourcesContent":["import i18next from 'i18next'\nimport { Player } from 'types'\n\nconst MAX_ROLL = 6\nconst TOTAL_PLANS = 72\nconst WIN_PLAN = 68\n\nconst handleToMove = (\n  name: string,\n  updatedPlayer: Player,\n  newPlan: number,\n  to: number,\n  roll: number,\n): Player => {\n  const updatedMessage = i18next.t(name, {\n    currentPlayer: updatedPlayer.id,\n    from: newPlan,\n    to: to,\n    roll,\n  })\n  return {\n    ...updatedPlayer,\n    message: updatedMessage,\n    plan: to,\n  }\n}\n\nconst handlePlayerMovement = (updatedPlayer: Player, roll: number): Player => {\n  if (!updatedPlayer.isStart) {\n    if (roll !== MAX_ROLL) {\n      const startMessage = i18next.t('sixToBegin')\n      return {\n        ...updatedPlayer,\n        message: startMessage,\n      }\n    } else {\n      const updatedMessage = i18next.t('moveAfterSix', {\n        currentPlayer: updatedPlayer.id,\n      })\n      return {\n        ...updatedPlayer,\n        plan: MAX_ROLL,\n        isStart: true,\n        consecutiveSixes: 1,\n        message: updatedMessage,\n      }\n    }\n  }\n\n  let newPlan = updatedPlayer.plan + roll\n\n  if (newPlan > TOTAL_PLANS) {\n    const updatedMessage = i18next.t('stay', {\n      currentPlayer: updatedPlayer.id,\n      roll,\n    })\n    return {\n      ...updatedPlayer,\n      message: updatedMessage,\n    }\n  } else if (newPlan === 12) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 8, roll)\n  } else if (newPlan === 16) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 4, roll)\n  } else if (newPlan === 24) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 7, roll)\n  } else if (newPlan === 29) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 6, roll)\n  } else if (newPlan === 44) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 9, roll)\n  } else if (newPlan === 52) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 35, roll)\n  } else if (newPlan === 55) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 3, roll)\n  } else if (newPlan === 61) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 13, roll)\n  } else if (newPlan === 63) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 2, roll)\n  } else if (newPlan === 72) {\n    return handleToMove('snakes', updatedPlayer, newPlan, 51, roll)\n  } else if (newPlan === 10) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 23, roll)\n  } else if (newPlan === 17) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 69, roll)\n  } else if (newPlan === 20) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 32, roll)\n  } else if (newPlan === 22) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 60, roll)\n  } else if (newPlan === 27) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 41, roll)\n  } else if (newPlan === 28) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 50, roll)\n  } else if (newPlan === 37) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 66, roll)\n  } else if (newPlan === 45) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 67, roll)\n  } else if (newPlan === 46) {\n    return handleToMove('arrows', updatedPlayer, newPlan, 62, roll)\n  } else if (newPlan === 54 || newPlan === WIN_PLAN) {\n    const updatedMessage = i18next.t('finish', {\n      currentPlayer: updatedPlayer.id,\n    })\n    return {\n      ...updatedPlayer,\n      plan: newPlan,\n      previousPlan: newPlan,\n      isFinished: true,\n      isStart: false,\n      message: updatedMessage,\n    }\n  } else {\n    const updatedMessage = i18next.t('moveMessage', {\n      currentPlayer: updatedPlayer.id,\n      roll: roll,\n      from: updatedPlayer.plan,\n      to: newPlan,\n    })\n    return {\n      ...updatedPlayer,\n      plan: newPlan,\n      message: updatedMessage,\n    }\n  }\n}\n\nexport { handlePlayerMovement }\n"],"mappings":"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"}