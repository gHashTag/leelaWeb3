a5876d4f7b20f09d2473f51bc5af1caf
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ = require("./..");
var _CenterView = require("./CenterView");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/CenterView/CenterView.test.jsx";
describe('CenterView Component', function () {
  it('renders children correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_CenterView.CenterView, {
        children: (0, _jsxRuntime.jsx)(_.Text, {
          children: "Centered Content"
        })
      })),
      getByText = _render.getByText;
    var centeredContent = getByText('Centered Content');
    expect(centeredContent).toBeTruthy();
  });
  it('applies flex prop correctly', function () {
    var flexValue = 2;
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_CenterView.CenterView, {
        flex: flexValue,
        testID: "center-view"
      })),
      getByTestId = _render2.getByTestId;
    var centerView = getByTestId('center-view');
    expect(centerView).toHaveStyle({
      flex: flexValue
    });
  });
  it('applies custom styles correctly', function () {
    var customStyles = {
      backgroundColor: 'blue'
    };
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_CenterView.CenterView, {
        style: customStyles,
        testID: "center-view"
      })),
      getByTestId = _render3.getByTestId;
    var centerView = getByTestId('center-view');
    expect(centerView).toHaveStyle(customStyles);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl8iLCJfQ2VudGVyVmlldyIsIl9qc3hSdW50aW1lIiwiX3RoaXMiLCJfanN4RmlsZU5hbWUiLCJkZXNjcmliZSIsIml0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsIkNlbnRlclZpZXciLCJjaGlsZHJlbiIsIlRleHQiLCJnZXRCeVRleHQiLCJjZW50ZXJlZENvbnRlbnQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiZmxleFZhbHVlIiwiX3JlbmRlcjIiLCJmbGV4IiwidGVzdElEIiwiZ2V0QnlUZXN0SWQiLCJjZW50ZXJWaWV3IiwidG9IYXZlU3R5bGUiLCJjdXN0b21TdHlsZXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJfcmVuZGVyMyIsInN0eWxlIl0sInNvdXJjZXMiOlsiQ2VudGVyVmlldy50ZXN0LmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJ1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJ2NvbXBvbmVudHMnXG5cbmltcG9ydCB7IENlbnRlclZpZXcgfSBmcm9tICcuL0NlbnRlclZpZXcnXG5cbmRlc2NyaWJlKCdDZW50ZXJWaWV3IENvbXBvbmVudCcsICgpID0+IHtcbiAgaXQoJ3JlbmRlcnMgY2hpbGRyZW4gY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoXG4gICAgICA8Q2VudGVyVmlldz5cbiAgICAgICAgPFRleHQ+Q2VudGVyZWQgQ29udGVudDwvVGV4dD5cbiAgICAgIDwvQ2VudGVyVmlldz4sXG4gICAgKVxuXG4gICAgY29uc3QgY2VudGVyZWRDb250ZW50ID0gZ2V0QnlUZXh0KCdDZW50ZXJlZCBDb250ZW50JylcblxuICAgIC8vIENoZWNrIGlmIHRoZSBjaGlsZHJlbiBhcmUgcmVuZGVyZWQgY29ycmVjdGx5XG4gICAgZXhwZWN0KGNlbnRlcmVkQ29udGVudCkudG9CZVRydXRoeSgpXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgZmxleCBwcm9wIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCBmbGV4VmFsdWUgPSAyXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPENlbnRlclZpZXcgZmxleD17ZmxleFZhbHVlfSB0ZXN0SUQ9XCJjZW50ZXItdmlld1wiIC8+LFxuICAgIClcblxuICAgIGNvbnN0IGNlbnRlclZpZXcgPSBnZXRCeVRlc3RJZCgnY2VudGVyLXZpZXcnKVxuXG4gICAgLy8gQ2hlY2sgaWYgdGhlIGZsZXggcHJvcCBpcyBhcHBsaWVkIGNvcnJlY3RseVxuICAgIGV4cGVjdChjZW50ZXJWaWV3KS50b0hhdmVTdHlsZSh7IGZsZXg6IGZsZXhWYWx1ZSB9KVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIGN1c3RvbSBzdHlsZXMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IGN1c3RvbVN0eWxlcyA9IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2JsdWUnLFxuICAgIH1cblxuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxDZW50ZXJWaWV3IHN0eWxlPXtjdXN0b21TdHlsZXN9IHRlc3RJRD1cImNlbnRlci12aWV3XCIgLz4sXG4gICAgKVxuXG4gICAgY29uc3QgY2VudGVyVmlldyA9IGdldEJ5VGVzdElkKCdjZW50ZXItdmlldycpXG5cbiAgICAvLyBDaGVjayBpZiBjdXN0b20gc3R5bGVzIGFyZSBhcHBsaWVkXG4gICAgZXhwZWN0KGNlbnRlclZpZXcpLnRvSGF2ZVN0eWxlKGN1c3RvbVN0eWxlcylcbiAgfSlcbn0pXG4iXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxDQUFBLEdBQUFGLE9BQUE7QUFFQSxJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFBeUMsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBQUEsSUFBQUssS0FBQTtFQUFBQyxZQUFBO0FBRXpDQyxRQUFRLENBQUMsc0JBQXNCLEVBQUUsWUFBTTtFQUNyQ0MsRUFBRSxDQUFDLDRCQUE0QixFQUFFLFlBQU07SUFDckMsSUFBQUMsT0FBQSxHQUFzQixJQUFBQyxtQkFBTSxFQUMxQixJQUFBTixXQUFBLENBQUFPLEdBQUEsRUFBQ1IsV0FBQSxDQUFBUyxVQUFVO1FBQUFDLFFBQUEsRUFDVCxJQUFBVCxXQUFBLENBQUFPLEdBQUEsRUFBQ1QsQ0FBQSxDQUFBWSxJQUFJO1VBQUFELFFBQUEsRUFBQztRQUFnQixDQUFNO01BQUMsQ0FDbkIsQ0FDZCxDQUFDO01BSk9FLFNBQVMsR0FBQU4sT0FBQSxDQUFUTSxTQUFTO0lBTWpCLElBQU1DLGVBQWUsR0FBR0QsU0FBUyxDQUFDLGtCQUFrQixDQUFDO0lBR3JERSxNQUFNLENBQUNELGVBQWUsQ0FBQyxDQUFDRSxVQUFVLENBQUMsQ0FBQztFQUN0QyxDQUFDLENBQUM7RUFFRlYsRUFBRSxDQUFDLDZCQUE2QixFQUFFLFlBQU07SUFDdEMsSUFBTVcsU0FBUyxHQUFHLENBQUM7SUFDbkIsSUFBQUMsUUFBQSxHQUF3QixJQUFBVixtQkFBTSxFQUM1QixJQUFBTixXQUFBLENBQUFPLEdBQUEsRUFBQ1IsV0FBQSxDQUFBUyxVQUFVO1FBQUNTLElBQUksRUFBRUYsU0FBVTtRQUFDRyxNQUFNLEVBQUM7TUFBYSxDQUFFLENBQ3JELENBQUM7TUFGT0MsV0FBVyxHQUFBSCxRQUFBLENBQVhHLFdBQVc7SUFJbkIsSUFBTUMsVUFBVSxHQUFHRCxXQUFXLENBQUMsYUFBYSxDQUFDO0lBRzdDTixNQUFNLENBQUNPLFVBQVUsQ0FBQyxDQUFDQyxXQUFXLENBQUM7TUFBRUosSUFBSSxFQUFFRjtJQUFVLENBQUMsQ0FBQztFQUNyRCxDQUFDLENBQUM7RUFFRlgsRUFBRSxDQUFDLGlDQUFpQyxFQUFFLFlBQU07SUFDMUMsSUFBTWtCLFlBQVksR0FBRztNQUNuQkMsZUFBZSxFQUFFO0lBQ25CLENBQUM7SUFFRCxJQUFBQyxRQUFBLEdBQXdCLElBQUFsQixtQkFBTSxFQUM1QixJQUFBTixXQUFBLENBQUFPLEdBQUEsRUFBQ1IsV0FBQSxDQUFBUyxVQUFVO1FBQUNpQixLQUFLLEVBQUVILFlBQWE7UUFBQ0osTUFBTSxFQUFDO01BQWEsQ0FBRSxDQUN6RCxDQUFDO01BRk9DLFdBQVcsR0FBQUssUUFBQSxDQUFYTCxXQUFXO0lBSW5CLElBQU1DLFVBQVUsR0FBR0QsV0FBVyxDQUFDLGFBQWEsQ0FBQztJQUc3Q04sTUFBTSxDQUFDTyxVQUFVLENBQUMsQ0FBQ0MsV0FBVyxDQUFDQyxZQUFZLENBQUM7RUFDOUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=