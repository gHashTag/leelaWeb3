{"version":3,"names":["_utils","require","_environment","_cache","_hermes","_utils2","MAX_PROFILE_DURATION_MS","exports","HermesProfiling","_this","_classCallCheck2","default","name","id","_shouldStartProfiling","transaction","sampled","logger","log","client","_getCurrentHub","getClient","options","getOptions","profilesSampleRate","_experiments","undefined","Math","random","_startNewProfile","profileStartTimestampNs","startProfiling","_currentProfile","profile_id","uuid4","startTimestampNs","setContext","setMetadata","_finishCurrentProfile","_clearCurrentProfileTimeout","profile","stopProfiling","warn","PROFILE_QUEUE","add","_createProfileEventFor","profiledTransaction","_b","_a","contexts","_c","cpuProfile","get","delete","event_id","createProfilingEvent","_currentProfileTimeout","clearTimeout","_createClass2","key","value","setupOnce","_","getCurrentHub","_this2","isHermesEnabled","on","shouldStartProfiling","setTimeout","envelope","size","profiledTransactions","findProfiledTransactionsFromEnvelope","length","profilesToAddToEnvelope","push","addProfilesToEnvelope"],"sources":["../../../src/js/profiling/integration.ts"],"sourcesContent":["import type { Envelope, Event, EventProcessor, Hub, Integration, Profile, Transaction } from '@sentry/types';\nimport { logger, uuid4 } from '@sentry/utils';\n\nimport { isHermesEnabled } from '../utils/environment';\nimport { PROFILE_QUEUE } from './cache';\nimport { startProfiling, stopProfiling } from './hermes';\nimport { addProfilesToEnvelope, createProfilingEvent, findProfiledTransactionsFromEnvelope } from './utils';\n\nexport const MAX_PROFILE_DURATION_MS = 30 * 1e3;\n\n/**\n * Profiling integration creates a profile for each transaction and adds it to the event envelope.\n *\n * @experimental\n */\nexport class HermesProfiling implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'HermesProfiling';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = HermesProfiling.id;\n\n  private _getCurrentHub?: () => Hub;\n\n  private _currentProfile:\n    | {\n        profile_id: string;\n        startTimestampNs: number;\n      }\n    | undefined;\n\n  private _currentProfileTimeout: number | undefined;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (e: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!isHermesEnabled()) {\n      logger.log('[Profiling] Hermes is not enabled, not adding profiling integration.');\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n    const client = getCurrentHub().getClient();\n\n    if (!client || typeof client.on !== 'function') {\n      return;\n    }\n\n    client.on('startTransaction', (transaction: Transaction) => {\n      this._finishCurrentProfile();\n\n      const shouldStartProfiling = this._shouldStartProfiling(transaction);\n      if (!shouldStartProfiling) {\n        return;\n      }\n\n      this._currentProfileTimeout = setTimeout(this._finishCurrentProfile, MAX_PROFILE_DURATION_MS);\n      this._startNewProfile(transaction);\n    });\n\n    client.on('finishTransaction', () => {\n      this._finishCurrentProfile();\n    });\n\n    client.on('beforeEnvelope', (envelope: Envelope) => {\n      if (!PROFILE_QUEUE.size()) {\n        return;\n      }\n\n      const profiledTransactions = findProfiledTransactionsFromEnvelope(envelope);\n      if (!profiledTransactions.length) {\n        logger.log('[Profiling] no profiled transactions found in envelope');\n        return;\n      }\n\n      const profilesToAddToEnvelope: Profile[] = [];\n      for (const profiledTransaction of profiledTransactions) {\n        const profile = this._createProfileEventFor(profiledTransaction);\n        if (profile) {\n          profilesToAddToEnvelope.push(profile);\n        }\n      }\n      addProfilesToEnvelope(envelope, profilesToAddToEnvelope);\n    });\n  }\n\n  private _shouldStartProfiling = (transaction: Transaction): boolean => {\n    if (!transaction.sampled) {\n      logger.log('[Profiling] Transaction is not sampled, skipping profiling');\n      return false;\n    }\n\n    const client = this._getCurrentHub && this._getCurrentHub().getClient();\n    const options = client && client.getOptions();\n\n    // @ts-ignore not part of the browser options yet\n    const profilesSampleRate =\n      options && options._experiments && typeof options._experiments.profilesSampleRate === 'number'\n        ? options._experiments.profilesSampleRate\n        : undefined;\n    if (profilesSampleRate === undefined) {\n      logger.log('[Profiling] Profiling disabled, enable it by setting `profilesSampleRate` option to SDK init call.');\n      return false;\n    }\n\n    // Check if we should sample this profile\n    if (Math.random() > profilesSampleRate) {\n      logger.log('[Profiling] Skip profiling transaction due to sampling.');\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Starts a new profile and links it to the transaction.\n   */\n  private _startNewProfile = (transaction: Transaction): void => {\n    const profileStartTimestampNs = startProfiling();\n    if (!profileStartTimestampNs) {\n      return;\n    }\n\n    this._currentProfile = {\n      profile_id: uuid4(),\n      startTimestampNs: profileStartTimestampNs,\n    };\n    transaction.setContext('profile', { profile_id: this._currentProfile.profile_id });\n    // @ts-expect-error profile_id is not part of the metadata type\n    transaction.setMetadata({ profile_id: this._currentProfile.profile_id });\n    logger.log('[Profiling] started profiling: ', this._currentProfile.profile_id);\n  };\n\n  /**\n   * Stops profiling and adds the profile to the queue to be processed on beforeEnvelope.\n   */\n  private _finishCurrentProfile = (): void => {\n    this._clearCurrentProfileTimeout();\n    if (this._currentProfile === undefined) {\n      return;\n    }\n\n    const profile = stopProfiling();\n    if (!profile) {\n      logger.warn('[Profiling] Stop failed. Cleaning up...');\n      this._currentProfile = undefined;\n      return;\n    }\n\n    profile.profile_id = this._currentProfile.profile_id;\n    PROFILE_QUEUE.add(profile.profile_id, profile);\n    logger.log('[Profiling] finished profiling: ', this._currentProfile.profile_id);\n    this._currentProfile = undefined;\n  };\n\n  private _createProfileEventFor = (profiledTransaction: Event): Profile | null => {\n    const profile_id = profiledTransaction?.contexts?.['profile']?.['profile_id'];\n\n    if (typeof profile_id !== 'string') {\n      logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n      return null;\n    }\n\n    // Remove the profile from the transaction context before sending, relay will take care of the rest.\n    if (profiledTransaction?.contexts?.['.profile']) {\n      delete profiledTransaction.contexts.profile;\n    }\n\n    const cpuProfile = PROFILE_QUEUE.get(profile_id);\n    PROFILE_QUEUE.delete(profile_id);\n\n    if (!cpuProfile) {\n      logger.log(`[Profiling] cannot find profile ${profile_id} for transaction ${profiledTransaction.event_id}`);\n      return null;\n    }\n\n    const profile = createProfilingEvent(cpuProfile, profiledTransaction);\n    logger.log(`[Profiling] Created profile ${profile_id} for transaction ${profiledTransaction.event_id}`);\n    return profile;\n  };\n\n  private _clearCurrentProfileTimeout = (): void => {\n    this._currentProfileTimeout !== undefined && clearTimeout(this._currentProfileTimeout);\n    this._currentProfileTimeout = undefined;\n  };\n}\n"],"mappings":"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"}