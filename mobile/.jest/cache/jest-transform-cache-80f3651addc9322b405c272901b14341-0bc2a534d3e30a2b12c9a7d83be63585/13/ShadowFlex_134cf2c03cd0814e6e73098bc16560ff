c49ae8c7634dcad5670f55636f4a2248
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireDefault(require("react"));
var _types = require("./types");
var _reactNative = require("react-native");
var _Shadow = _interopRequireDefault(require("./Shadow"));
var _jsxRuntime = require("react/jsx-runtime");
var _jsxFileName = "/Users/playra/LeelaAiWeb3/node_modules/react-native-neomorph-shadows/src/ShadowFlex.js";
var _excluded = ["style", "children"],
  _excluded2 = ["elevation", "shadowOpacity", "shadowRadius", "shadowOffset", "shadowColor", "backgroundColor", "overflow"];
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ShadowFlex = function (_React$PureComponent) {
  (0, _inherits2.default)(ShadowFlex, _React$PureComponent);
  var _super = _createSuper(ShadowFlex);
  function ShadowFlex(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ShadowFlex);
    _this = _super.call(this, props);
    _this._onLayout = function (_ref) {
      var nativeEvent = _ref.nativeEvent;
      var _nativeEvent$layout = nativeEvent.layout,
        width = _nativeEvent$layout.width,
        height = _nativeEvent$layout.height;
      console.log(nativeEvent.layout);
      _this.setState({
        shadowStyle: Object.assign({}, _this.state.shadowStyle, {
          width: width,
          height: height
        }),
        layoutFinished: true
      });
    };
    var style = props.style;
    _this.state = {
      shadowStyle: {
        shadowOffset: style == null ? void 0 : style.shadowOffset,
        shadowOpacity: style == null ? void 0 : style.shadowOpacity,
        shadowRadius: style == null ? void 0 : style.shadowRadius,
        shadowColor: style == null ? void 0 : style.shadowColor,
        borderRadius: style == null ? void 0 : style.borderRadius,
        backgroundColor: style == null ? void 0 : style.backgroundColor,
        width: 0,
        height: 0,
        position: 'absolute'
      },
      layoutFinished: false
    };
    return _this;
  }
  (0, _createClass2.default)(ShadowFlex, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        style = _this$props.style,
        children = _this$props.children,
        otherProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
      if (_reactNative.Platform.OS === 'android') {
        var _this$state = this.state,
          layoutFinished = _this$state.layoutFinished,
          shadowStyle = _this$state.shadowStyle;
        var elevation = style.elevation,
          shadowOpacity = style.shadowOpacity,
          shadowRadius = style.shadowRadius,
          shadowOffset = style.shadowOffset,
          shadowColor = style.shadowColor,
          backgroundColor = style.backgroundColor,
          overflow = style.overflow,
          otherStyle = (0, _objectWithoutProperties2.default)(style, _excluded2);
        return (0, _jsxRuntime.jsxs)(_reactNative.View, {
          onLayout: this._onLayout,
          style: otherStyle,
          children: [layoutFinished && (0, _jsxRuntime.jsx)(_Shadow.default, Object.assign({
            style: shadowStyle
          }, otherProps)), children]
        });
      } else {
        return (0, _jsxRuntime.jsx)(_Shadow.default, Object.assign({
          style: style
        }, otherProps, {
          children: children
        }));
      }
    }
  }]);
  return ShadowFlex;
}(_react.default.PureComponent);
exports.default = ShadowFlex;
ShadowFlex.propTypes = _types.ShadowFlexType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,