{"version":3,"names":["RoutingInstrumentation","_classCallCheck2","default","name","instrumentationName","_createClass2","key","value","registerRoutingInstrumentation","listener","beforeNavigate","onConfirmRoute","_tracingListener","_beforeNavigate","_onConfirmRoute","onRouteWillChange","context","transaction","_a","call","_b","exports","InternalRoutingInstrumentation","_RoutingInstrumentati","_inherits2","_super","_createSuper","apply","arguments"],"sources":["../../../src/js/tracing/routingInstrumentation.ts"],"sourcesContent":["import type { Hub } from '@sentry/core';\nimport type { Transaction, TransactionContext } from '@sentry/types';\n\nimport type { BeforeNavigate } from './types';\n\nexport type TransactionCreator = (context: TransactionContext) => Transaction | undefined;\n\nexport type OnConfirmRoute = (context: TransactionContext) => void;\n\nexport interface RoutingInstrumentationInstance {\n  /**\n   * Name of the routing instrumentation\n   */\n  readonly name: string;\n  /**\n   * Registers a listener that's called on every route change with a `TransactionContext`.\n   *\n   * Do not overwrite this unless you know what you are doing.\n   *\n   * @param listener A `RouteListener`\n   * @param beforeNavigate BeforeNavigate\n   * @param inConfirmRoute OnConfirmRoute\n   */\n  registerRoutingInstrumentation(\n    listener: TransactionCreator,\n    beforeNavigate: BeforeNavigate,\n    onConfirmRoute: OnConfirmRoute,\n  ): void;\n  /**\n   * To be called when the route changes, BEFORE the new route mounts.\n   * If this is called after a route mounts the child spans will not be correctly attached.\n   *\n   * @param context A `TransactionContext` used to initialize the transaction.\n   */\n  onRouteWillChange(context: TransactionContext): Transaction | undefined;\n}\n\n/**\n * Base Routing Instrumentation. Can be used by users to manually instrument custom routers.\n * Pass this to the tracing integration, and call `onRouteWillChange` every time before a route changes.\n */\nexport class RoutingInstrumentation implements RoutingInstrumentationInstance {\n  public static instrumentationName: string = 'base-routing-instrumentation';\n\n  public readonly name: string = RoutingInstrumentation.instrumentationName;\n\n  protected _getCurrentHub?: () => Hub;\n  protected _beforeNavigate?: BeforeNavigate;\n  protected _onConfirmRoute?: OnConfirmRoute;\n  protected _tracingListener?: TransactionCreator;\n\n  /** @inheritdoc */\n  public registerRoutingInstrumentation(\n    listener: TransactionCreator,\n    beforeNavigate: BeforeNavigate,\n    onConfirmRoute: OnConfirmRoute,\n  ): void {\n    this._tracingListener = listener;\n    this._beforeNavigate = beforeNavigate;\n    this._onConfirmRoute = onConfirmRoute;\n  }\n\n  /** @inheritdoc */\n  public onRouteWillChange(context: TransactionContext): Transaction | undefined {\n    const transaction = this._tracingListener?.(context);\n\n    if (transaction) {\n      this._onConfirmRoute?.(context);\n    }\n\n    return transaction;\n  }\n}\n\n/**\n * Internal base routing instrumentation where `_onConfirmRoute` is not called in onRouteWillChange\n */\nexport class InternalRoutingInstrumentation extends RoutingInstrumentation {\n  /** @inheritdoc */\n  public onRouteWillChange(context: TransactionContext): Transaction | undefined {\n    return this._tracingListener?.(context);\n  }\n}\n"],"mappings":";;;;;;;;;;;;IAyCaA,sBAAsB;EAAnC,SAAAA,uBAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,sBAAA;IAGkB,KAAAG,IAAI,GAAWH,sBAAsB,CAACI,mBAAmB;EA4B3E;EAAC,IAAAC,aAAA,CAAAH,OAAA,EAAAF,sBAAA;IAAAM,GAAA;IAAAC,KAAA,EApBQ,SAAAC,+BACLC,QAA4B,EAC5BC,cAA8B,EAC9BC,cAA8B;MAE9B,IAAI,CAACC,gBAAgB,GAAGH,QAAQ;MAChC,IAAI,CAACI,eAAe,GAAGH,cAAc;MACrC,IAAI,CAACI,eAAe,GAAGH,cAAc;IACvC;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAGM,SAAAQ,kBAAkBC,OAA2B;;MAClD,IAAMC,WAAW,IAAAC,EAAA,GAAG,IAAI,CAACN,gBAAgB,cAAAM,EAAA,uBAAAA,EAAA,CAAAC,IAAA,CAArB,IAAI,EAAoBH,OAAO,CAAC;MAEpD,IAAIC,WAAW,EAAE;QACf,CAAAG,EAAA,OAAI,CAACN,eAAe,cAAAM,EAAA,uBAAAA,EAAA,CAAAD,IAAA,CAApB,IAAI,EAAmBH,OAAO;;MAGhC,OAAOC,WAAW;IACpB;EAAC;EAAA,OAAAjB,sBAAA;AAAA;AAAAqB,OAAA,CAAArB,sBAAA,GAAAA,sBAAA;AA7BaA,sBAAA,CAAAI,mBAAmB,GAAW,8BAA8B;AAAC,IAmChEkB,8BAA+B,aAAAC,qBAAA;EAAA,IAAAC,UAAA,CAAAtB,OAAA,EAAAoB,8BAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,8BAAA;EAAA,SAAAA,+BAAA;IAAA,IAAArB,gBAAA,CAAAC,OAAA,QAAAoB,8BAAA;IAAA,OAAAG,MAAA,CAAAE,KAAA,OAAAC,SAAA;EAAA;EAAA,IAAAvB,aAAA,CAAAH,OAAA,EAAAoB,8BAAA;IAAAhB,GAAA;IAAAC,KAAA,EAEnC,SAAAQ,kBAAkBC,OAA2B;;MAClD,QAAAE,EAAA,GAAO,IAAI,CAACN,gBAAgB,cAAAM,EAAA,uBAAAA,EAAA,CAAAC,IAAA,CAArB,IAAI,EAAoBH,OAAO;IACxC;EAAC;EAAA,OAAAM,8BAAA;AAAA,EAJiDtB,sBAAsB;AAAAqB,OAAA,CAAAC,8BAAA,GAAAA,8BAAA"}