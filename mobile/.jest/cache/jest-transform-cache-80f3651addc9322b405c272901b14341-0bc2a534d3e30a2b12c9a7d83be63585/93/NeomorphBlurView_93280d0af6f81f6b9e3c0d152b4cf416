8942d5f284f16a7a25a1ecd48dd3479d
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/NeomorphBlurView/NeomorphBlurView.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NeomorphBlurView = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var native_1 = require("@react-navigation/native");
var cons_1 = require("../../cons");
var react_native_neomorph_shadows_1 = require("react-native-neomorph-shadows");
var NeomorphBlurView = function NeomorphBlurView(_ref) {
  var children = _ref.children,
    viewStyle = _ref.viewStyle;
  var _ref2 = (0, native_1.useTheme)(),
    dark = _ref2.dark;
  var backgroundColor = dark ? cons_1.black : cons_1.lightGray;
  return (0, _jsxRuntime.jsx)(react_native_neomorph_shadows_1.NeomorphBlur, {
    style: Object.assign({}, styles.container, viewStyle, {
      backgroundColor: backgroundColor
    }),
    testID: "neomorph-blur-view",
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: viewStyle,
      children: children ? children : ''
    })
  });
};
exports.NeomorphBlurView = NeomorphBlurView;
var styles = react_native_1.StyleSheet.create({
  container: {
    backgroundColor: cons_1.black,
    borderRadius: 70,
    height: 140,
    shadowRadius: 12,
    width: 140
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwibmF0aXZlXzEiLCJjb25zXzEiLCJyZWFjdF9uYXRpdmVfbmVvbW9ycGhfc2hhZG93c18xIiwiTmVvbW9ycGhCbHVyVmlldyIsIl9yZWYiLCJjaGlsZHJlbiIsInZpZXdTdHlsZSIsIl9yZWYyIiwidXNlVGhlbWUiLCJkYXJrIiwiYmFja2dyb3VuZENvbG9yIiwiYmxhY2siLCJsaWdodEdyYXkiLCJfanN4UnVudGltZSIsImpzeCIsIk5lb21vcnBoQmx1ciIsInN0eWxlIiwiT2JqZWN0IiwiYXNzaWduIiwic3R5bGVzIiwiY29udGFpbmVyIiwidGVzdElEIiwiVmlldyIsImV4cG9ydHMiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiYm9yZGVyUmFkaXVzIiwiaGVpZ2h0Iiwic2hhZG93UmFkaXVzIiwid2lkdGgiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL05lb21vcnBoQmx1clZpZXcvTmVvbW9ycGhCbHVyVmlldy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyBWaWV3LCBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJ1xuXG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSdcbmltcG9ydCB7IGJsYWNrLCBsaWdodEdyYXkgfSBmcm9tICdjb25zJ1xuaW1wb3J0IHtcbiAgTmVvbW9ycGhCbHVyLFxuICBWaWV3U3R5bGVXaXRoTmVvbW9ycGhTaGFkb3csXG59IGZyb20gJ3JlYWN0LW5hdGl2ZS1uZW9tb3JwaC1zaGFkb3dzJ1xuXG5pbnRlcmZhY2UgTmVvbW9ycGhCbHVyVmlld1Byb3BzIHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGVcbiAgdmlld1N0eWxlPzogVmlld1N0eWxlV2l0aE5lb21vcnBoU2hhZG93XG59XG5cbmNvbnN0IE5lb21vcnBoQmx1clZpZXc6IFJlYWN0LkZDPE5lb21vcnBoQmx1clZpZXdQcm9wcz4gPSAoe1xuICBjaGlsZHJlbixcbiAgdmlld1N0eWxlLFxufSkgPT4ge1xuICBjb25zdCB7IGRhcmsgfSA9IHVzZVRoZW1lKClcbiAgY29uc3QgYmFja2dyb3VuZENvbG9yID0gZGFyayA/IGJsYWNrIDogbGlnaHRHcmF5XG5cbiAgcmV0dXJuIChcbiAgICA8TmVvbW9ycGhCbHVyXG4gICAgICBzdHlsZT17e1xuICAgICAgICAuLi5zdHlsZXMuY29udGFpbmVyLFxuICAgICAgICAuLi52aWV3U3R5bGUsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcixcbiAgICAgIH19XG4gICAgICB0ZXN0SUQ9XCJuZW9tb3JwaC1ibHVyLXZpZXdcIlxuICAgID5cbiAgICAgIDxWaWV3IHN0eWxlPXt2aWV3U3R5bGV9PntjaGlsZHJlbiA/IGNoaWxkcmVuIDogJyd9PC9WaWV3PlxuICAgIDwvTmVvbW9ycGhCbHVyPlxuICApXG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBibGFjayxcbiAgICBib3JkZXJSYWRpdXM6IDcwLFxuICAgIGhlaWdodDogMTQwLFxuICAgIHNoYWRvd1JhZGl1czogMTIsXG4gICAgd2lkdGg6IDE0MCxcbiAgfSxcbn0pXG5cbmV4cG9ydCB7IE5lb21vcnBoQmx1clZpZXcgfVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsUUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksK0JBQUEsR0FBQUosT0FBQTtBQVVBLElBQU1LLGdCQUFnQixHQUFvQyxTQUFwREEsZ0JBQWdCQSxDQUFBQyxJQUFBLEVBR2pCO0VBQUEsSUFGSEMsUUFBUSxHQUFBRCxJQUFBLENBQVJDLFFBQVE7SUFDUkMsU0FBUyxHQUFBRixJQUFBLENBQVRFLFNBQVM7RUFFVCxJQUFBQyxLQUFBLEdBQWlCLElBQUFQLFFBQUEsQ0FBQVEsUUFBUSxHQUFFO0lBQW5CQyxJQUFJLEdBQUFGLEtBQUEsQ0FBSkUsSUFBSTtFQUNaLElBQU1DLGVBQWUsR0FBR0QsSUFBSSxHQUFHUixNQUFBLENBQUFVLEtBQUssR0FBR1YsTUFBQSxDQUFBVyxTQUFTO0VBRWhELE9BQ0UsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNaLCtCQUFBLENBQUFhLFlBQVk7SUFDWEMsS0FBSyxFQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FDQUMsTUFBTSxDQUFDQyxTQUFTLEVBQ2hCZCxTQUFTO01BQ1pJLGVBQWUsRUFBZkE7SUFBZSxFQUNmO0lBQ0ZXLE1BQU0sRUFBQyxvQkFBb0I7SUFBQWhCLFFBQUEsRUFFM0IsSUFBQVEsV0FBQSxDQUFBQyxHQUFBLEVBQUNmLGNBQUEsQ0FBQXVCLElBQUk7TUFBQ04sS0FBSyxFQUFFVixTQUFVO01BQUFELFFBQUEsRUFBRUEsUUFBUSxHQUFHQSxRQUFRLEdBQUc7SUFBRSxDQUFPO0VBQzFELENBQWMsQ0FBQztBQUVuQixDQUFDO0FBWVFrQixPQUFBLENBQUFwQixnQkFBQSxHQUFBQSxnQkFBQTtBQVZULElBQU1nQixNQUFNLEdBQUdwQixjQUFBLENBQUF5QixVQUFVLENBQUNDLE1BQU0sQ0FBQztFQUMvQkwsU0FBUyxFQUFFO0lBQ1RWLGVBQWUsRUFBRVQsTUFBQSxDQUFBVSxLQUFLO0lBQ3RCZSxZQUFZLEVBQUUsRUFBRTtJQUNoQkMsTUFBTSxFQUFFLEdBQUc7SUFDWEMsWUFBWSxFQUFFLEVBQUU7SUFDaEJDLEtBQUssRUFBRTs7Q0FFVixDQUFDIn0=