3b5ab8a2511ff87356d0519361203ca1
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Pressable/Pressable.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var react_native_2 = require("@testing-library/react-native");
var Pressable_1 = require("./Pressable");
describe('Pressable', function () {
  it('should render children', function () {
    var _ref = (0, react_native_2.render)((0, _jsxRuntime.jsx)(Pressable_1.Pressable, {
        children: (0, _jsxRuntime.jsx)(react_native_1.Text, {
          children: "Test Pressable"
        })
      })),
      getByText = _ref.getByText;
    expect(getByText('Test Pressable')).toBeDefined();
  });
  it('should call onPress when pressed', function () {
    var onPressMock = jest.fn();
    var _ref2 = (0, react_native_2.render)((0, _jsxRuntime.jsx)(Pressable_1.Pressable, {
        onPress: onPressMock,
        children: (0, _jsxRuntime.jsx)(react_native_1.Text, {
          children: "Press Me"
        })
      })),
      getByText = _ref2.getByText;
    react_native_2.fireEvent.press(getByText('Press Me'));
    expect(onPressMock).toHaveBeenCalledTimes(1);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwicmVhY3RfbmF0aXZlXzIiLCJQcmVzc2FibGVfMSIsImRlc2NyaWJlIiwiaXQiLCJfcmVmIiwicmVuZGVyIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJQcmVzc2FibGUiLCJjaGlsZHJlbiIsIlRleHQiLCJnZXRCeVRleHQiLCJleHBlY3QiLCJ0b0JlRGVmaW5lZCIsIm9uUHJlc3NNb2NrIiwiamVzdCIsImZuIiwiX3JlZjIiLCJvblByZXNzIiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL1ByZXNzYWJsZS9QcmVzc2FibGUudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJ1xuXG5pbXBvcnQgeyByZW5kZXIsIGZpcmVFdmVudCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJ1xuXG5pbXBvcnQgeyBQcmVzc2FibGUgfSBmcm9tICcuL1ByZXNzYWJsZSdcblxuZGVzY3JpYmUoJ1ByZXNzYWJsZScsICgpID0+IHtcbiAgaXQoJ3Nob3VsZCByZW5kZXIgY2hpbGRyZW4nLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcihcbiAgICAgIDxQcmVzc2FibGU+XG4gICAgICAgIDxUZXh0PlRlc3QgUHJlc3NhYmxlPC9UZXh0PlxuICAgICAgPC9QcmVzc2FibGU+LFxuICAgIClcblxuICAgIGV4cGVjdChnZXRCeVRleHQoJ1Rlc3QgUHJlc3NhYmxlJykpLnRvQmVEZWZpbmVkKClcbiAgfSlcblxuICBpdCgnc2hvdWxkIGNhbGwgb25QcmVzcyB3aGVuIHByZXNzZWQnLCAoKSA9PiB7XG4gICAgY29uc3Qgb25QcmVzc01vY2sgPSBqZXN0LmZuKClcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxuICAgICAgPFByZXNzYWJsZSBvblByZXNzPXtvblByZXNzTW9ja30+XG4gICAgICAgIDxUZXh0PlByZXNzIE1lPC9UZXh0PlxuICAgICAgPC9QcmVzc2FibGU+LFxuICAgIClcblxuICAgIGZpcmVFdmVudC5wcmVzcyhnZXRCeVRleHQoJ1ByZXNzIE1lJykpXG5cbiAgICBleHBlY3Qob25QcmVzc01vY2spLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKVxuICB9KVxufSlcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsY0FBQSxHQUFBRixPQUFBO0FBRUEsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBRUFJLFFBQVEsQ0FBQyxXQUFXLEVBQUUsWUFBSztFQUN6QkMsRUFBRSxDQUFDLHdCQUF3QixFQUFFLFlBQUs7SUFDaEMsSUFBQUMsSUFBQSxHQUFzQixJQUFBSixjQUFBLENBQUFLLE1BQU0sRUFDMUIsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNOLFdBQUEsQ0FBQU8sU0FBUztRQUFBQyxRQUFBLEVBQ1IsSUFBQUgsV0FBQSxDQUFBQyxHQUFBLEVBQUNSLGNBQUEsQ0FBQVcsSUFBSTtVQUFBRCxRQUFBLEVBQUM7UUFBYyxDQUFNO01BQzVCLENBQVcsQ0FBQyxDQUNiO01BSk9FLFNBQVMsR0FBQVAsSUFBQSxDQUFUTyxTQUFTO0lBTWpCQyxNQUFNLENBQUNELFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUNFLFdBQVcsRUFBRTtFQUNuRCxDQUFDLENBQUM7RUFFRlYsRUFBRSxDQUFDLGtDQUFrQyxFQUFFLFlBQUs7SUFDMUMsSUFBTVcsV0FBVyxHQUFHQyxJQUFJLENBQUNDLEVBQUUsRUFBRTtJQUM3QixJQUFBQyxLQUFBLEdBQXNCLElBQUFqQixjQUFBLENBQUFLLE1BQU0sRUFDMUIsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNOLFdBQUEsQ0FBQU8sU0FBUztRQUFDVSxPQUFPLEVBQUVKLFdBQVk7UUFBQUwsUUFBQSxFQUM5QixJQUFBSCxXQUFBLENBQUFDLEdBQUEsRUFBQ1IsY0FBQSxDQUFBVyxJQUFJO1VBQUFELFFBQUEsRUFBQztRQUFRLENBQU07TUFDdEIsQ0FBVyxDQUFDLENBQ2I7TUFKT0UsU0FBUyxHQUFBTSxLQUFBLENBQVROLFNBQVM7SUFNakJYLGNBQUEsQ0FBQW1CLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDVCxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFFdENDLE1BQU0sQ0FBQ0UsV0FBVyxDQUFDLENBQUNPLHFCQUFxQixDQUFDLENBQUMsQ0FBQztFQUM5QyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==