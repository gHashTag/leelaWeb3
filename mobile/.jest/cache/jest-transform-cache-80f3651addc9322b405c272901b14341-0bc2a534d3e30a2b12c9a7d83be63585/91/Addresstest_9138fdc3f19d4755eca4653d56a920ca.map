{"version":3,"names":["_getJestObj","mock","_interopRequireDefault","require","_asyncToGenerator2","_jsxRuntime","_this","_jsxFileName","_require","jest","react_1","__importDefault","clipboard_1","react_native_1","Address_1","useFakeTimers","describe","it","default","rlyAccount","_ref2","render","jsx","Address","getByTestId","getByText","copyButton","expect","toBeDefined","mockSetString","fn","setString","fireEvent","press","toHaveBeenCalledWith","renderedText","toBeTruthy"],"sources":["/Users/playra/LeelaAiWeb3/src/components/Address/Address.test.tsx"],"sourcesContent":["import React from 'react'\n\nimport Clipboard from '@react-native-clipboard/clipboard' // Import the mocked Clipboard\nimport { fireEvent, render } from '@testing-library/react-native'\n\nimport { Address } from '../Address'\n\njest.useFakeTimers() // Enable fake timers for simulating time\n\njest.mock('@react-native-clipboard/clipboard') // Mocking the Clipboard module\n\ndescribe('Address component', () => {\n  it('should copy full address to clipboard and change opacity on press', async () => {\n    const rlyAccount = 'exampleAddress12345'\n\n    const { getByTestId, getByText } = render(\n      <Address rlyAccount={rlyAccount} />,\n    )\n\n    const copyButton = getByTestId('copy-button')\n    expect(copyButton).toBeDefined()\n\n    // Mock the clipboard's setString function\n    const mockSetString = jest.fn()\n    Clipboard.setString = mockSetString\n\n    // Trigger the press event on the copy button\n    fireEvent.press(copyButton)\n\n    // Expect that setString was called with the correct value\n    expect(mockSetString).toHaveBeenCalledWith(rlyAccount)\n    // Check the rendered text after animations complete\n    const renderedText = getByText('examp...ress12345')\n    expect(renderedText).toBeTruthy()\n  })\n})\n"],"mappings":";;AASAA,WAAA,GAAKC,IAAI,CAAC,mCAAmC,CAAC;AAAA,IAAAC,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAA,IAAAE,WAAA,GAAAF,OAAA;AAAA,IAAAG,KAAA;EAAAC,YAAA;AAAA,SAAAP,YAAA;EAAA,IAAAQ,QAAA,GAAAL,OAAA;IAAAM,IAAA,GAAAD,QAAA,CAAAC,IAAA;EAAAT,WAAA,YAAAA,YAAA;IAAA,OAAAS,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;;;;;;;;;AAT9C,IAAAC,OAAA,GAAAC,eAAA,CAAAR,OAAA;AAEA,IAAAS,WAAA,GAAAD,eAAA,CAAAR,OAAA;AACA,IAAAU,cAAA,GAAAV,OAAA;AAEA,IAAAW,SAAA,GAAAX,OAAA;AAEAM,IAAI,CAACM,aAAa,EAAE;AAIpBC,QAAQ,CAAC,mBAAmB,EAAE,YAAK;EACjCC,EAAE,CAAC,mEAAmE,MAAAb,kBAAA,CAAAc,OAAA,EAAE,aAAW;IACjF,IAAMC,UAAU,GAAG,qBAAqB;IAExC,IAAAC,KAAA,GAAmC,IAAAP,cAAA,CAAAQ,MAAM,EACvC,IAAAhB,WAAA,CAAAiB,GAAA,EAACR,SAAA,CAAAS,OAAO;QAACJ,UAAU,EAAEA;MAAW,EAAG,CACpC;MAFOK,WAAW,GAAAJ,KAAA,CAAXI,WAAW;MAAEC,SAAS,GAAAL,KAAA,CAATK,SAAS;IAI9B,IAAMC,UAAU,GAAGF,WAAW,CAAC,aAAa,CAAC;IAC7CG,MAAM,CAACD,UAAU,CAAC,CAACE,WAAW,EAAE;IAGhC,IAAMC,aAAa,GAAGpB,IAAI,CAACqB,EAAE,EAAE;IAC/BlB,WAAA,CAAAM,OAAS,CAACa,SAAS,GAAGF,aAAa;IAGnChB,cAAA,CAAAmB,SAAS,CAACC,KAAK,CAACP,UAAU,CAAC;IAG3BC,MAAM,CAACE,aAAa,CAAC,CAACK,oBAAoB,CAACf,UAAU,CAAC;IAEtD,IAAMgB,YAAY,GAAGV,SAAS,CAAC,mBAAmB,CAAC;IACnDE,MAAM,CAACQ,YAAY,CAAC,CAACC,UAAU,EAAE;EACnC,CAAC,EAAC;AACJ,CAAC,CAAC"}