1d5822c5c9964b51994cd59629720e2f
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/NeomorphBlurView/NeomorphBlurView.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NeomorphBlurView = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var native_1 = require("@react-navigation/native");
var cons_1 = require("../../cons");
var react_native_neomorph_shadows_1 = require("react-native-neomorph-shadows");
var react_native_size_matters_1 = require("react-native-size-matters");
var NeomorphBlurView = function NeomorphBlurView(_ref) {
  var children = _ref.children,
    viewStyle = _ref.viewStyle,
    shadowStyle = _ref.shadowStyle;
  var _ref2 = (0, native_1.useTheme)(),
    dark = _ref2.dark;
  var backgroundColor = dark ? cons_1.black : cons_1.lightGray;
  return (0, _jsxRuntime.jsx)(react_native_neomorph_shadows_1.NeomorphBlur, {
    style: Object.assign({}, styles.container, shadowStyle, viewStyle, {
      backgroundColor: backgroundColor
    }),
    testID: "neomorph-blur-view",
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: viewStyle,
      children: children ? children : ''
    })
  });
};
exports.NeomorphBlurView = NeomorphBlurView;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    shadowRadius: 12,
    borderRadius: 70,
    backgroundColor: cons_1.black,
    width: 140,
    height: 140
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwibmF0aXZlXzEiLCJjb25zXzEiLCJyZWFjdF9uYXRpdmVfbmVvbW9ycGhfc2hhZG93c18xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiTmVvbW9ycGhCbHVyVmlldyIsIl9yZWYiLCJjaGlsZHJlbiIsInZpZXdTdHlsZSIsInNoYWRvd1N0eWxlIiwiX3JlZjIiLCJ1c2VUaGVtZSIsImRhcmsiLCJiYWNrZ3JvdW5kQ29sb3IiLCJibGFjayIsImxpZ2h0R3JheSIsIl9qc3hSdW50aW1lIiwianN4IiwiTmVvbW9ycGhCbHVyIiwic3R5bGUiLCJPYmplY3QiLCJhc3NpZ24iLCJzdHlsZXMiLCJjb250YWluZXIiLCJ0ZXN0SUQiLCJWaWV3IiwiZXhwb3J0cyIsIlNjYWxlZFNoZWV0IiwiY3JlYXRlIiwic2hhZG93UmFkaXVzIiwiYm9yZGVyUmFkaXVzIiwid2lkdGgiLCJoZWlnaHQiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL05lb21vcnBoQmx1clZpZXcvTmVvbW9ycGhCbHVyVmlldy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyBWaWV3LCBWaWV3UHJvcHMsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSdcblxuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnXG5pbXBvcnQgeyBibGFjaywgbGlnaHRHcmF5IH0gZnJvbSAnY29ucydcbmltcG9ydCB7IE5lb21vcnBoQmx1ciB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1uZW9tb3JwaC1zaGFkb3dzJ1xuaW1wb3J0IHsgU2NhbGVkU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUtc2l6ZS1tYXR0ZXJzJ1xuXG50eXBlIEZsZXhTdHlsZVByb3BlcnRpZXMgPVxuICB8ICdmbGV4J1xuICB8ICdhbGlnblNlbGYnXG4gIHwgJ2ZsZXhHcm93J1xuICB8ICdmbGV4U2hyaW5rJ1xuICB8ICdmbGV4QmFzaXMnXG5cbnR5cGUgVmlld1N0eWxlV2l0aG91dEZsZXggPSBQaWNrPFxuICBWaWV3U3R5bGUsXG4gIEV4Y2x1ZGU8a2V5b2YgVmlld1N0eWxlLCBGbGV4U3R5bGVQcm9wZXJ0aWVzPlxuPlxuXG5pbnRlcmZhY2UgVmlld1N0eWxlV2l0aFNoYWRvdyBleHRlbmRzIFZpZXdTdHlsZVdpdGhvdXRGbGV4IHtcbiAgc2hhZG93T2Zmc2V0Pzoge1xuICAgIHdpZHRoOiBudW1iZXJcbiAgICBoZWlnaHQ6IG51bWJlclxuICB9XG4gIHNoYWRvd09wYWNpdHk/OiBudW1iZXJcbiAgc2hhZG93Q29sb3I/OiBzdHJpbmdcbiAgc2hhZG93UmFkaXVzPzogbnVtYmVyXG4gIGJvcmRlclJhZGl1cz86IG51bWJlclxuICBiYWNrZ3JvdW5kQ29sb3I/OiBzdHJpbmdcbiAgd2lkdGg/OiBudW1iZXJcbiAgaGVpZ2h0PzogbnVtYmVyXG59XG5cbmludGVyZmFjZSBOZW9tb3JwaEJsdXJWaWV3UHJvcHMge1xuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZVxuICBzaGFkb3dTdHlsZT86IFZpZXdTdHlsZVdpdGhTaGFkb3dcbiAgdmlld1N0eWxlPzogVmlld1Byb3BzXG59XG5cbmNvbnN0IE5lb21vcnBoQmx1clZpZXc6IFJlYWN0LkZDPE5lb21vcnBoQmx1clZpZXdQcm9wcz4gPSAoe1xuICBjaGlsZHJlbixcbiAgdmlld1N0eWxlLFxuICBzaGFkb3dTdHlsZSxcbn0pID0+IHtcbiAgY29uc3QgeyBkYXJrIH0gPSB1c2VUaGVtZSgpXG4gIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IGRhcmsgPyBibGFjayA6IGxpZ2h0R3JheVxuXG4gIHJldHVybiAoXG4gICAgPE5lb21vcnBoQmx1clxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAuLi5zdHlsZXMuY29udGFpbmVyLFxuICAgICAgICAuLi5zaGFkb3dTdHlsZSxcbiAgICAgICAgLi4udmlld1N0eWxlLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3IsXG4gICAgICB9fVxuICAgICAgdGVzdElEPVwibmVvbW9ycGgtYmx1ci12aWV3XCJcbiAgICA+XG4gICAgICA8VmlldyBzdHlsZT17dmlld1N0eWxlfT57Y2hpbGRyZW4gPyBjaGlsZHJlbiA6ICcnfTwvVmlldz5cbiAgICA8L05lb21vcnBoQmx1cj5cbiAgKVxufVxuXG5jb25zdCBzdHlsZXMgPSBTY2FsZWRTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBzaGFkb3dSYWRpdXM6IDEyLFxuICAgIGJvcmRlclJhZGl1czogNzAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBibGFjayxcbiAgICB3aWR0aDogMTQwLFxuICAgIGhlaWdodDogMTQwLFxuICB9LFxufSlcblxuZXhwb3J0IHsgTmVvbW9ycGhCbHVyVmlldyB9XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxjQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxRQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxNQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSwrQkFBQSxHQUFBSixPQUFBO0FBQ0EsSUFBQUssMkJBQUEsR0FBQUwsT0FBQTtBQWtDQSxJQUFNTSxnQkFBZ0IsR0FBb0MsU0FBcERBLGdCQUFnQkEsQ0FBQUMsSUFBQSxFQUlqQjtFQUFBLElBSEhDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO0lBQ1JDLFNBQVMsR0FBQUYsSUFBQSxDQUFURSxTQUFTO0lBQ1RDLFdBQVcsR0FBQUgsSUFBQSxDQUFYRyxXQUFXO0VBRVgsSUFBQUMsS0FBQSxHQUFpQixJQUFBVCxRQUFBLENBQUFVLFFBQVEsR0FBRTtJQUFuQkMsSUFBSSxHQUFBRixLQUFBLENBQUpFLElBQUk7RUFDWixJQUFNQyxlQUFlLEdBQUdELElBQUksR0FBR1YsTUFBQSxDQUFBWSxLQUFLLEdBQUdaLE1BQUEsQ0FBQWEsU0FBUztFQUVoRCxPQUNFLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDZCwrQkFBQSxDQUFBZSxZQUFZO0lBQ1hDLEtBQUssRUFBQUMsTUFBQSxDQUFBQyxNQUFBLEtBRUFDLE1BQU0sQ0FBQ0MsU0FBUyxFQUNoQmQsV0FBVyxFQUNYRCxTQUFTO01BQ1pLLGVBQWUsRUFBZkE7SUFBZSxFQUNmO0lBQ0ZXLE1BQU0sRUFBQyxvQkFBb0I7SUFBQWpCLFFBQUEsRUFFM0IsSUFBQVMsV0FBQSxDQUFBQyxHQUFBLEVBQUNqQixjQUFBLENBQUF5QixJQUFJO01BQUNOLEtBQUssRUFBRVgsU0FBVTtNQUFBRCxRQUFBLEVBQUVBLFFBQVEsR0FBR0EsUUFBUSxHQUFHO0lBQUUsQ0FBTztFQUMxRCxDQUFjLENBQUM7QUFFbkIsQ0FBQztBQVlRbUIsT0FBQSxDQUFBckIsZ0JBQUEsR0FBQUEsZ0JBQUE7QUFWVCxJQUFNaUIsTUFBTSxHQUFHbEIsMkJBQUEsQ0FBQXVCLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDO0VBQ2hDTCxTQUFTLEVBQUU7SUFDVE0sWUFBWSxFQUFFLEVBQUU7SUFDaEJDLFlBQVksRUFBRSxFQUFFO0lBQ2hCakIsZUFBZSxFQUFFWCxNQUFBLENBQUFZLEtBQUs7SUFDdEJpQixLQUFLLEVBQUUsR0FBRztJQUNWQyxNQUFNLEVBQUU7O0NBRVgsQ0FBQyJ9