{"version":3,"names":["_utils","require","_reactNative","_misc","_environment","_vendor","RNSentry","isTurboModuleEnabled","TurboModuleRegistry","get","NativeModules","NATIVE","fetchModules","enableNative","_DisabledNativeError","_isModuleLoaded","_NativeClientError","raw","JSON","parse","sendEnvelope","envelope","logger","warn","_utf8ToBytes","utf8ToBytes","_utf8ToBytes2","_slicedToArray2","default","EOL","_envelope","envelopeHeader","envelopeItems","headerString","stringify","envelopeBytes","push","hardCrashed","rawItem","_envelopeBytes","_this$_processItem","_processItem","_this$_processItem2","itemHeader","itemPayload","bytesContentType","bytesPayload","Uint8Array","content_type","_toConsumableArray2","isHardCrash","length","serializedItemHeader","apply","concat","captureEnvelope","store","initNativeSdk","originalOptions","options","Object","assign","autoInitializeNativeSdk","enableNativeNagger","dsn","beforeSend","beforeBreadcrumb","beforeSendTransaction","integrations","filteredOptions","__rest","nativeIsReady","fetchNativeRelease","fetchNativeSdkInfo","fetchNativeDeviceContexts","fetchNativeAppStart","error","fetchNativeFrames","nativeCrash","crash","setUser","user","userKeys","userDataKeys","id","ip_address","email","username","segment","otherKeys","requiredUser","_serializeObject","setTag","key","value","stringifiedValue","setExtra","extra","stringifiedExtra","addBreadcrumb","breadcrumb","level","_processLevel","undefined","clearBreadcrumbs","setContext","context","normalize","closeNativeSdk","then","_this","disableNativeFramesTracking","enableNativeFramesTracking","isNativeAvailable","captureScreenshot","e","map","item","data","fetchViewHierarchy","startProfiling","_RNSentry$startProfil","started","log","stopProfiling","_RNSentry$stopProfili","profile","_item","type","event","_processLevels","platform","message","serialized","keys","forEach","dataKey","_this2","processed","breadcrumbs","_a","module","SentryError","Platform","OS","exports"],"sources":["../../src/js/wrapper.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type {\n  BaseEnvelopeItemHeaders,\n  Breadcrumb,\n  Envelope,\n  EnvelopeItem,\n  Event,\n  Package,\n  SeverityLevel,\n  User,\n} from '@sentry/types';\nimport { logger, normalize, SentryError } from '@sentry/utils';\nimport { NativeModules, Platform, TurboModuleRegistry } from 'react-native';\n\nimport { isHardCrash } from './misc';\nimport type {\n  NativeAppStartResponse,\n  NativeDeviceContextsResponse,\n  NativeFramesResponse,\n  NativeReleaseResponse,\n  NativeScreenshot,\n  Spec,\n} from './NativeRNSentry';\nimport type { ReactNativeClientOptions } from './options';\nimport type * as Hermes from './profiling/hermes';\nimport type { RequiredKeysUser } from './user';\nimport { isTurboModuleEnabled } from './utils/environment';\nimport { utf8ToBytes } from './vendor';\n\nconst RNSentry: Spec | undefined = isTurboModuleEnabled()\n  ? TurboModuleRegistry.get<Spec>('RNSentry')\n  : NativeModules.RNSentry;\n\nexport interface Screenshot {\n  data: Uint8Array;\n  contentType: string;\n  filename: string;\n}\n\ninterface SentryNativeWrapper {\n  enableNative: boolean;\n  nativeIsReady: boolean;\n  platform: typeof Platform.OS;\n\n  _NativeClientError: Error;\n  _DisabledNativeError: Error;\n\n  _processItem(envelopeItem: EnvelopeItem): EnvelopeItem;\n  _processLevels(event: Event): Event;\n  _processLevel(level: SeverityLevel): SeverityLevel;\n  _serializeObject(data: { [key: string]: unknown }): { [key: string]: string };\n  _isModuleLoaded(module: Spec | undefined): module is Spec;\n\n  isNativeAvailable(): boolean;\n\n  initNativeSdk(options: Partial<ReactNativeClientOptions>): PromiseLike<boolean>;\n  closeNativeSdk(): PromiseLike<void>;\n\n  sendEnvelope(envelope: Envelope): Promise<void>;\n  captureScreenshot(): Promise<Screenshot[] | null>;\n\n  fetchNativeRelease(): PromiseLike<NativeReleaseResponse>;\n  fetchNativeDeviceContexts(): PromiseLike<NativeDeviceContextsResponse | null>;\n  fetchNativeAppStart(): PromiseLike<NativeAppStartResponse | null>;\n  fetchNativeFrames(): PromiseLike<NativeFramesResponse | null>;\n  fetchNativeSdkInfo(): PromiseLike<Package | null>;\n\n  disableNativeFramesTracking(): void;\n  enableNativeFramesTracking(): void;\n\n  addBreadcrumb(breadcrumb: Breadcrumb): void;\n  setContext(key: string, context: { [key: string]: unknown } | null): void;\n  clearBreadcrumbs(): void;\n  setExtra(key: string, extra: unknown): void;\n  setUser(user: User | null): void;\n  setTag(key: string, value: string): void;\n\n  nativeCrash(): void;\n\n  fetchModules(): Promise<Record<string, string> | null>;\n  fetchViewHierarchy(): PromiseLike<Uint8Array | null>;\n\n  startProfiling(): boolean;\n  stopProfiling(): Hermes.Profile | null;\n}\n\n/**\n * Our internal interface for calling native functions\n */\nexport const NATIVE: SentryNativeWrapper = {\n  async fetchModules(): Promise<Record<string, string> | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const raw = await RNSentry.fetchModules();\n    if (raw) {\n      return JSON.parse(raw);\n    }\n    return null;\n  },\n  /**\n   * Sending the envelope over the bridge to native\n   * @param envelope Envelope\n   */\n  async sendEnvelope(envelope: Envelope): Promise<void> {\n    if (!this.enableNative) {\n      logger.warn('Event was skipped as native SDK is not enabled.');\n      return;\n    }\n\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const [EOL] = utf8ToBytes('\\n');\n\n    const [envelopeHeader, envelopeItems] = envelope;\n\n    const headerString = JSON.stringify(envelopeHeader);\n    let envelopeBytes: number[] = utf8ToBytes(headerString);\n    envelopeBytes.push(EOL);\n\n    let hardCrashed: boolean = false;\n    for (const rawItem of envelopeItems) {\n      const [itemHeader, itemPayload] = this._processItem(rawItem);\n\n      let bytesContentType: string;\n      let bytesPayload: number[] = [];\n      if (typeof itemPayload === 'string') {\n        bytesContentType = 'text/plain';\n        bytesPayload = utf8ToBytes(itemPayload);\n      } else if (itemPayload instanceof Uint8Array) {\n        bytesContentType =\n          typeof itemHeader.content_type === 'string' ? itemHeader.content_type : 'application/octet-stream';\n        bytesPayload = [...itemPayload];\n      } else {\n        bytesContentType = 'application/json';\n        bytesPayload = utf8ToBytes(JSON.stringify(itemPayload));\n        if (!hardCrashed) {\n          hardCrashed = isHardCrash(itemPayload);\n        }\n      }\n\n      // Content type is not inside BaseEnvelopeItemHeaders.\n      (itemHeader as BaseEnvelopeItemHeaders).content_type = bytesContentType;\n      (itemHeader as BaseEnvelopeItemHeaders).length = bytesPayload.length;\n      const serializedItemHeader = JSON.stringify(itemHeader);\n\n      envelopeBytes.push(...utf8ToBytes(serializedItemHeader));\n      envelopeBytes.push(EOL);\n      envelopeBytes = envelopeBytes.concat(bytesPayload);\n      envelopeBytes.push(EOL);\n    }\n\n    await RNSentry.captureEnvelope(envelopeBytes, { store: hardCrashed });\n  },\n\n  /**\n   * Starts native with the provided options.\n   * @param options ReactNativeClientOptions\n   */\n  async initNativeSdk(originalOptions: Partial<ReactNativeClientOptions>): Promise<boolean> {\n    const options: Partial<ReactNativeClientOptions> = {\n      enableNative: true,\n      autoInitializeNativeSdk: true,\n      ...originalOptions,\n    };\n\n    if (!options.enableNative) {\n      if (options.enableNativeNagger) {\n        logger.warn('Note: Native Sentry SDK is disabled.');\n      }\n      this.enableNative = false;\n      return false;\n    }\n    if (!options.autoInitializeNativeSdk) {\n      if (options.enableNativeNagger) {\n        logger.warn(\n          'Note: Native Sentry SDK was not initialized automatically, you will need to initialize it manually. If you wish to disable the native SDK and get rid of this warning, pass enableNative: false',\n        );\n      }\n      this.enableNative = true;\n      return false;\n    }\n\n    if (!options.dsn) {\n      logger.warn(\n        'Warning: No DSN was provided. The Sentry SDK will be disabled. Native SDK will also not be initalized.',\n      );\n      this.enableNative = false;\n      return false;\n    }\n\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    // filter out all the options that would crash native.\n    /* eslint-disable @typescript-eslint/unbound-method,@typescript-eslint/no-unused-vars */\n    const { beforeSend, beforeBreadcrumb, beforeSendTransaction, integrations, ...filteredOptions } = options;\n    /* eslint-enable @typescript-eslint/unbound-method,@typescript-eslint/no-unused-vars */\n    const nativeIsReady = await RNSentry.initNativeSdk(filteredOptions);\n\n    this.nativeIsReady = nativeIsReady;\n    this.enableNative = true;\n\n    return nativeIsReady;\n  },\n\n  /**\n   * Fetches the release from native\n   */\n  async fetchNativeRelease(): Promise<NativeReleaseResponse> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    return RNSentry.fetchNativeRelease();\n  },\n\n  /**\n   * Fetches the Sdk info for the native sdk.\n   */\n  async fetchNativeSdkInfo(): Promise<Package | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    return RNSentry.fetchNativeSdkInfo();\n  },\n\n  /**\n   * Fetches the device contexts. Not used on Android.\n   */\n  async fetchNativeDeviceContexts(): Promise<NativeDeviceContextsResponse | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    return RNSentry.fetchNativeDeviceContexts();\n  },\n\n  async fetchNativeAppStart(): Promise<NativeAppStartResponse | null> {\n    if (!this.enableNative) {\n      logger.warn(this._DisabledNativeError);\n      return null;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      logger.error(this._NativeClientError);\n      return null;\n    }\n\n    return RNSentry.fetchNativeAppStart();\n  },\n\n  async fetchNativeFrames(): Promise<NativeFramesResponse | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    return RNSentry.fetchNativeFrames();\n  },\n\n  /**\n   * Triggers a native crash.\n   * Use this only for testing purposes.\n   */\n  nativeCrash(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.crash();\n  },\n\n  /**\n   * Sets the user in the native scope.\n   * Passing null clears the user.\n   */\n  setUser(user: User | null): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    // separate and serialize all non-default user keys.\n    let userKeys = null;\n    let userDataKeys = null;\n    if (user) {\n      const { id, ip_address, email, username, segment, ...otherKeys } = user;\n      const requiredUser: RequiredKeysUser = {\n        id,\n        ip_address,\n        email,\n        username,\n        segment,\n      };\n      userKeys = this._serializeObject(requiredUser);\n      userDataKeys = this._serializeObject(otherKeys);\n    }\n\n    RNSentry.setUser(userKeys, userDataKeys);\n  },\n\n  /**\n   * Sets a tag in the native module.\n   * @param key string\n   * @param value string\n   */\n  setTag(key: string, value: string): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const stringifiedValue = typeof value === 'string' ? value : JSON.stringify(value);\n\n    RNSentry.setTag(key, stringifiedValue);\n  },\n\n  /**\n   * Sets an extra in the native scope, will stringify\n   * extra value if it isn't already a string.\n   * @param key string\n   * @param extra any\n   */\n  setExtra(key: string, extra: unknown): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    // we stringify the extra as native only takes in strings.\n    const stringifiedExtra = typeof extra === 'string' ? extra : JSON.stringify(extra);\n\n    RNSentry.setExtra(key, stringifiedExtra);\n  },\n\n  /**\n   * Adds breadcrumb to the native scope.\n   * @param breadcrumb Breadcrumb\n   */\n  addBreadcrumb(breadcrumb: Breadcrumb): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.addBreadcrumb({\n      ...breadcrumb,\n      // Process and convert deprecated levels\n      level: breadcrumb.level ? this._processLevel(breadcrumb.level) : undefined,\n    });\n  },\n\n  /**\n   * Clears breadcrumbs on the native scope.\n   */\n  clearBreadcrumbs(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.clearBreadcrumbs();\n  },\n\n  /**\n   * Sets context on the native scope. Not implemented in Android yet.\n   * @param key string\n   * @param context key-value map\n   */\n  setContext(key: string, context: { [key: string]: unknown } | null): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.setContext(key, context !== null ? normalize(context) : null);\n  },\n\n  /**\n   * Closes the Native Layer SDK\n   */\n  async closeNativeSdk(): Promise<void> {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      return;\n    }\n\n    return RNSentry.closeNativeSdk().then(() => {\n      this.enableNative = false;\n    });\n  },\n\n  disableNativeFramesTracking(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      return;\n    }\n\n    RNSentry.disableNativeFramesTracking();\n  },\n\n  enableNativeFramesTracking(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      return;\n    }\n\n    RNSentry.enableNativeFramesTracking();\n  },\n\n  isNativeAvailable(): boolean {\n    return this.enableNative && this._isModuleLoaded(RNSentry);\n  },\n\n  async captureScreenshot(): Promise<Screenshot[] | null> {\n    if (!this.enableNative) {\n      logger.warn(this._DisabledNativeError);\n      return null;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      logger.error(this._NativeClientError);\n      return null;\n    }\n\n    let raw: NativeScreenshot[] | null | undefined;\n    try {\n      raw = await RNSentry.captureScreenshot();\n    } catch (e) {\n      logger.warn('Failed to capture screenshot', e);\n    }\n\n    if (raw) {\n      return raw.map((item: NativeScreenshot) => ({\n        ...item,\n        data: new Uint8Array(item.data),\n      }));\n    } else {\n      return null;\n    }\n  },\n\n  async fetchViewHierarchy(): Promise<Uint8Array | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const raw = await RNSentry.fetchViewHierarchy();\n    return raw ? new Uint8Array(raw) : null;\n  },\n\n  startProfiling(): boolean {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const { started, error } = RNSentry.startProfiling();\n    if (started) {\n      logger.log('[NATIVE] Start Profiling');\n    } else {\n      logger.error('[NATIVE] Start Profiling Failed', error);\n    }\n\n    return !!started;\n  },\n\n  stopProfiling(): Hermes.Profile | null {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const { profile, error } = RNSentry.stopProfiling();\n    if (!profile || error) {\n      logger.error('[NATIVE] Stop Profiling Failed', error);\n      return null;\n    }\n\n    try {\n      return JSON.parse(profile) as Hermes.Profile;\n    } catch (e) {\n      logger.error('[NATIVE] Failed to parse Hermes Profile JSON', e);\n      return null;\n    }\n  },\n\n  /**\n   * Gets the event from envelopeItem and applies the level filter to the selected event.\n   * @param data An envelope item containing the event.\n   * @returns The event from envelopeItem or undefined.\n   */\n  _processItem(item: EnvelopeItem): EnvelopeItem {\n    const [itemHeader, itemPayload] = item;\n\n    if (itemHeader.type == 'event' || itemHeader.type == 'transaction') {\n      const event = this._processLevels(itemPayload as Event);\n\n      if (NATIVE.platform === 'android') {\n        if ('message' in event) {\n          // @ts-ignore Android still uses the old message object, without this the serialization of events will break.\n          event.message = { message: event.message };\n        }\n      }\n\n      return [itemHeader, event];\n    }\n\n    return item;\n  },\n\n  /**\n   * Serializes all values of root-level keys into strings.\n   * @param data key-value map.\n   * @returns An object where all root-level values are strings.\n   */\n  _serializeObject(data: { [key: string]: unknown }): { [key: string]: string } {\n    const serialized: { [key: string]: string } = {};\n\n    Object.keys(data).forEach(dataKey => {\n      const value = data[dataKey];\n      serialized[dataKey] = typeof value === 'string' ? value : JSON.stringify(value);\n    });\n\n    return serialized;\n  },\n\n  /**\n   * Convert js severity level in event.level and event.breadcrumbs to more widely supported levels.\n   * @param event\n   * @returns Event with more widely supported Severity level strings\n   */\n\n  _processLevels(event: Event): Event {\n    const processed: Event = {\n      ...event,\n      level: event.level ? this._processLevel(event.level) : undefined,\n      breadcrumbs: event.breadcrumbs?.map(breadcrumb => ({\n        ...breadcrumb,\n        level: breadcrumb.level ? this._processLevel(breadcrumb.level) : undefined,\n      })),\n    };\n\n    return processed;\n  },\n\n  /**\n   * Convert js severity level which has critical and log to more widely supported levels.\n   * @param level\n   * @returns More widely supported Severity level strings\n   */\n\n  _processLevel(level: SeverityLevel): SeverityLevel {\n    if (level == ('log' as SeverityLevel)) {\n      return 'debug' as SeverityLevel;\n    }\n    return level;\n  },\n\n  /**\n   * Checks whether the RNSentry module is loaded.\n   */\n  _isModuleLoaded(module: Spec | undefined): module is Spec {\n    return !!module;\n  },\n\n  _DisabledNativeError: new SentryError('Native is disabled'),\n\n  _NativeClientError: new SentryError(\"Native Client is not available, can't start on native.\"),\n\n  enableNative: true,\n  nativeIsReady: false,\n  platform: Platform.OS,\n};\n"],"mappings":";;;;;;;;AAWA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEA,IAAAE,KAAA,GAAAF,OAAA;AAYA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAEA,IAAMK,QAAQ,GAAqB,IAAAC,iCAAoB,GAAE,GACrDC,gCAAmB,CAACC,GAAG,CAAO,UAAU,CAAC,GACzCC,0BAAa,CAACJ,QAAQ;AA0DnB,IAAMK,MAAM,GAAwB;EACnCC,YAAY,WAAAA,aAAA;;MAChB,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;QACtB,MAAM,IAAI,CAACC,oBAAoB;;MAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAG/B,IAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACM,YAAY,EAAE;MACzC,IAAIK,GAAG,EAAE;QACP,OAAOC,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;;MAExB,OAAO,IAAI;IACb,CAAC;GAAA;EAKKG,YAAY,WAAAA,aAACC,QAAkB;;MACnC,IAAI,CAAC,IAAI,CAACR,YAAY,EAAE;QACtBS,aAAM,CAACC,IAAI,CAAC,iDAAiD,CAAC;QAC9D;;MAGF,IAAI,CAAC,IAAI,CAACR,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAG/B,IAAAQ,YAAA,GAAc,IAAAC,mBAAW,EAAC,IAAI,CAAC;QAAAC,aAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,YAAA;QAAxBK,GAAG,GAAAH,aAAA;MAEV,IAAAI,SAAA,OAAAH,eAAA,CAAAC,OAAA,EAAwCP,QAAQ;QAAzCU,cAAc,GAAAD,SAAA;QAAEE,aAAa,GAAAF,SAAA;MAEpC,IAAMG,YAAY,GAAGf,IAAI,CAACgB,SAAS,CAACH,cAAc,CAAC;MACnD,IAAII,aAAa,GAAa,IAAAV,mBAAW,EAACQ,YAAY,CAAC;MACvDE,aAAa,CAACC,IAAI,CAACP,GAAG,CAAC;MAEvB,IAAIQ,WAAW,GAAY,KAAK;MAChC,KAAK,IAAMC,OAAO,IAAIN,aAAa,EAAE;QAAA,IAAAO,cAAA;QACnC,IAAAC,kBAAA,GAAkC,IAAI,CAACC,YAAY,CAACH,OAAO,CAAC;UAAAI,mBAAA,OAAAf,eAAA,CAAAC,OAAA,EAAAY,kBAAA;UAArDG,UAAU,GAAAD,mBAAA;UAAEE,WAAW,GAAAF,mBAAA;QAE9B,IAAIG,gBAAwB;QAC5B,IAAIC,YAAY,GAAa,EAAE;QAC/B,IAAI,OAAOF,WAAW,KAAK,QAAQ,EAAE;UACnCC,gBAAgB,GAAG,YAAY;UAC/BC,YAAY,GAAG,IAAArB,mBAAW,EAACmB,WAAW,CAAC;SACxC,MAAM,IAAIA,WAAW,YAAYG,UAAU,EAAE;UAC5CF,gBAAgB,GACd,OAAOF,UAAU,CAACK,YAAY,KAAK,QAAQ,GAAGL,UAAU,CAACK,YAAY,GAAG,0BAA0B;UACpGF,YAAY,OAAAG,mBAAA,CAAArB,OAAA,EAAOgB,WAAW,CAAC;SAChC,MAAM;UACLC,gBAAgB,GAAG,kBAAkB;UACrCC,YAAY,GAAG,IAAArB,mBAAW,EAACP,IAAI,CAACgB,SAAS,CAACU,WAAW,CAAC,CAAC;UACvD,IAAI,CAACP,WAAW,EAAE;YAChBA,WAAW,GAAG,IAAAa,iBAAW,EAACN,WAAW,CAAC;;;QAKzCD,UAAsC,CAACK,YAAY,GAAGH,gBAAgB;QACtEF,UAAsC,CAACQ,MAAM,GAAGL,YAAY,CAACK,MAAM;QACpE,IAAMC,oBAAoB,GAAGlC,IAAI,CAACgB,SAAS,CAACS,UAAU,CAAC;QAEvD,CAAAJ,cAAA,GAAAJ,aAAa,EAACC,IAAI,CAAAiB,KAAA,CAAAd,cAAA,MAAAU,mBAAA,CAAArB,OAAA,EAAI,IAAAH,mBAAW,EAAC2B,oBAAoB,CAAC,EAAC;QACxDjB,aAAa,CAACC,IAAI,CAACP,GAAG,CAAC;QACvBM,aAAa,GAAGA,aAAa,CAACmB,MAAM,CAACR,YAAY,CAAC;QAClDX,aAAa,CAACC,IAAI,CAACP,GAAG,CAAC;;MAGzB,MAAMvB,QAAQ,CAACiD,eAAe,CAACpB,aAAa,EAAE;QAAEqB,KAAK,EAAEnB;MAAW,CAAE,CAAC;IACvE,CAAC;GAAA;EAMKoB,aAAa,WAAAA,cAACC,eAAkD;;MACpE,IAAMC,OAAO,GAAAC,MAAA,CAAAC,MAAA;QACXhD,YAAY,EAAE,IAAI;QAClBiD,uBAAuB,EAAE;MAAI,GAC1BJ,eAAe,CACnB;MAED,IAAI,CAACC,OAAO,CAAC9C,YAAY,EAAE;QACzB,IAAI8C,OAAO,CAACI,kBAAkB,EAAE;UAC9BzC,aAAM,CAACC,IAAI,CAAC,sCAAsC,CAAC;;QAErD,IAAI,CAACV,YAAY,GAAG,KAAK;QACzB,OAAO,KAAK;;MAEd,IAAI,CAAC8C,OAAO,CAACG,uBAAuB,EAAE;QACpC,IAAIH,OAAO,CAACI,kBAAkB,EAAE;UAC9BzC,aAAM,CAACC,IAAI,CACT,iMAAiM,CAClM;;QAEH,IAAI,CAACV,YAAY,GAAG,IAAI;QACxB,OAAO,KAAK;;MAGd,IAAI,CAAC8C,OAAO,CAACK,GAAG,EAAE;QAChB1C,aAAM,CAACC,IAAI,CACT,wGAAwG,CACzG;QACD,IAAI,CAACV,YAAY,GAAG,KAAK;QACzB,OAAO,KAAK;;MAGd,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAK/B,IAAQiD,UAAU,GAAgFN,OAAO,CAAjGM,UAAU;QAAEC,gBAAgB,GAA8DP,OAAO,CAArFO,gBAAgB;QAAEC,qBAAqB,GAAuCR,OAAO,CAAnEQ,qBAAqB;QAAEC,YAAY,GAAyBT,OAAO,CAA5CS,YAAY;QAAKC,eAAe,OAAAC,aAAA,EAAKX,OAAO,EAAnG,2EAAyF,CAAU;MAEzG,IAAMY,aAAa,GAAG,MAAMjE,QAAQ,CAACmD,aAAa,CAACY,eAAe,CAAC;MAEnE,IAAI,CAACE,aAAa,GAAGA,aAAa;MAClC,IAAI,CAAC1D,YAAY,GAAG,IAAI;MAExB,OAAO0D,aAAa;IACtB,CAAC;GAAA;EAKKC,kBAAkB,WAAAA,mBAAA;;MACtB,IAAI,CAAC,IAAI,CAAC3D,YAAY,EAAE;QACtB,MAAM,IAAI,CAACC,oBAAoB;;MAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAG/B,OAAOV,QAAQ,CAACkE,kBAAkB,EAAE;IACtC,CAAC;GAAA;EAKKC,kBAAkB,WAAAA,mBAAA;;MACtB,IAAI,CAAC,IAAI,CAAC5D,YAAY,EAAE;QACtB,MAAM,IAAI,CAACC,oBAAoB;;MAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAG/B,OAAOV,QAAQ,CAACmE,kBAAkB,EAAE;IACtC,CAAC;GAAA;EAKKC,yBAAyB,WAAAA,0BAAA;;MAC7B,IAAI,CAAC,IAAI,CAAC7D,YAAY,EAAE;QACtB,MAAM,IAAI,CAACC,oBAAoB;;MAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAG/B,OAAOV,QAAQ,CAACoE,yBAAyB,EAAE;IAC7C,CAAC;GAAA;EAEKC,mBAAmB,WAAAA,oBAAA;;MACvB,IAAI,CAAC,IAAI,CAAC9D,YAAY,EAAE;QACtBS,aAAM,CAACC,IAAI,CAAC,IAAI,CAACT,oBAAoB,CAAC;QACtC,OAAO,IAAI;;MAEb,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnCgB,aAAM,CAACsD,KAAK,CAAC,IAAI,CAAC5D,kBAAkB,CAAC;QACrC,OAAO,IAAI;;MAGb,OAAOV,QAAQ,CAACqE,mBAAmB,EAAE;IACvC,CAAC;GAAA;EAEKE,iBAAiB,WAAAA,kBAAA;;MACrB,IAAI,CAAC,IAAI,CAAChE,YAAY,EAAE;QACtB,MAAM,IAAI,CAACC,oBAAoB;;MAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAG/B,OAAOV,QAAQ,CAACuE,iBAAiB,EAAE;IACrC,CAAC;GAAA;EAMDC,WAAW,WAAAA,YAAA;IACT,IAAI,CAAC,IAAI,CAACjE,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAG/BV,QAAQ,CAACyE,KAAK,EAAE;EAClB,CAAC;EAMDC,OAAO,WAAAA,QAACC,IAAiB;IACvB,IAAI,CAAC,IAAI,CAACpE,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAI/B,IAAIkE,QAAQ,GAAG,IAAI;IACnB,IAAIC,YAAY,GAAG,IAAI;IACvB,IAAIF,IAAI,EAAE;MACR,IAAQG,EAAE,GAAyDH,IAAI,CAA/DG,EAAE;QAAEC,UAAU,GAA6CJ,IAAI,CAA3DI,UAAU;QAAEC,KAAK,GAAsCL,IAAI,CAA/CK,KAAK;QAAEC,QAAQ,GAA4BN,IAAI,CAAxCM,QAAQ;QAAEC,OAAO,GAAmBP,IAAI,CAA9BO,OAAO;QAAKC,SAAS,OAAAnB,aAAA,EAAKW,IAAI,EAAjE,oDAA0D,CAAO;MACvE,IAAMS,YAAY,GAAqB;QACrCN,EAAE,EAAFA,EAAE;QACFC,UAAU,EAAVA,UAAU;QACVC,KAAK,EAALA,KAAK;QACLC,QAAQ,EAARA,QAAQ;QACRC,OAAO,EAAPA;OACD;MACDN,QAAQ,GAAG,IAAI,CAACS,gBAAgB,CAACD,YAAY,CAAC;MAC9CP,YAAY,GAAG,IAAI,CAACQ,gBAAgB,CAACF,SAAS,CAAC;;IAGjDnF,QAAQ,CAAC0E,OAAO,CAACE,QAAQ,EAAEC,YAAY,CAAC;EAC1C,CAAC;EAODS,MAAM,WAAAA,OAACC,GAAW,EAAEC,KAAa;IAC/B,IAAI,CAAC,IAAI,CAACjF,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAG/B,IAAM+E,gBAAgB,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG5E,IAAI,CAACgB,SAAS,CAAC4D,KAAK,CAAC;IAElFxF,QAAQ,CAACsF,MAAM,CAACC,GAAG,EAAEE,gBAAgB,CAAC;EACxC,CAAC;EAQDC,QAAQ,WAAAA,SAACH,GAAW,EAAEI,KAAc;IAClC,IAAI,CAAC,IAAI,CAACpF,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAI/B,IAAMkF,gBAAgB,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG/E,IAAI,CAACgB,SAAS,CAAC+D,KAAK,CAAC;IAElF3F,QAAQ,CAAC0F,QAAQ,CAACH,GAAG,EAAEK,gBAAgB,CAAC;EAC1C,CAAC;EAMDC,aAAa,WAAAA,cAACC,UAAsB;IAClC,IAAI,CAAC,IAAI,CAACvF,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAG/BV,QAAQ,CAAC6F,aAAa,CAAAvC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACjBuC,UAAU;MAEbC,KAAK,EAAED,UAAU,CAACC,KAAK,GAAG,IAAI,CAACC,aAAa,CAACF,UAAU,CAACC,KAAK,CAAC,GAAGE;IAAS,GAC1E;EACJ,CAAC;EAKDC,gBAAgB,WAAAA,iBAAA;IACd,IAAI,CAAC,IAAI,CAAC3F,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAG/BV,QAAQ,CAACkG,gBAAgB,EAAE;EAC7B,CAAC;EAODC,UAAU,WAAAA,WAACZ,GAAW,EAAEa,OAA0C;IAChE,IAAI,CAAC,IAAI,CAAC7F,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAG/BV,QAAQ,CAACmG,UAAU,CAACZ,GAAG,EAAEa,OAAO,KAAK,IAAI,GAAG,IAAAC,gBAAS,EAACD,OAAO,CAAC,GAAG,IAAI,CAAC;EACxE,CAAC;EAKKE,cAAc,WAAAA,eAAA;;;MAClB,IAAI,CAAC,IAAI,CAAC/F,YAAY,EAAE;QACtB;;MAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC;;MAGF,OAAOA,QAAQ,CAACsG,cAAc,EAAE,CAACC,IAAI,CAAC,YAAK;QACzCC,KAAI,CAACjG,YAAY,GAAG,KAAK;MAC3B,CAAC,CAAC;IACJ,CAAC;GAAA;EAEDkG,2BAA2B,WAAAA,4BAAA;IACzB,IAAI,CAAC,IAAI,CAAClG,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC;;IAGFA,QAAQ,CAACyG,2BAA2B,EAAE;EACxC,CAAC;EAEDC,0BAA0B,WAAAA,2BAAA;IACxB,IAAI,CAAC,IAAI,CAACnG,YAAY,EAAE;MACtB;;IAEF,IAAI,CAAC,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC;;IAGFA,QAAQ,CAAC0G,0BAA0B,EAAE;EACvC,CAAC;EAEDC,iBAAiB,WAAAA,kBAAA;IACf,OAAO,IAAI,CAACpG,YAAY,IAAI,IAAI,CAACE,eAAe,CAACT,QAAQ,CAAC;EAC5D,CAAC;EAEK4G,iBAAiB,WAAAA,kBAAA;;MACrB,IAAI,CAAC,IAAI,CAACrG,YAAY,EAAE;QACtBS,aAAM,CAACC,IAAI,CAAC,IAAI,CAACT,oBAAoB,CAAC;QACtC,OAAO,IAAI;;MAEb,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnCgB,aAAM,CAACsD,KAAK,CAAC,IAAI,CAAC5D,kBAAkB,CAAC;QACrC,OAAO,IAAI;;MAGb,IAAIC,GAA0C;MAC9C,IAAI;QACFA,GAAG,GAAG,MAAMX,QAAQ,CAAC4G,iBAAiB,EAAE;OACzC,CAAC,OAAOC,CAAC,EAAE;QACV7F,aAAM,CAACC,IAAI,CAAC,8BAA8B,EAAE4F,CAAC,CAAC;;MAGhD,IAAIlG,GAAG,EAAE;QACP,OAAOA,GAAG,CAACmG,GAAG,CAAC,UAACC,IAAsB;UAAA,OAAKzD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACtCwD,IAAI;YACPC,IAAI,EAAE,IAAIvE,UAAU,CAACsE,IAAI,CAACC,IAAI;UAAC;QAAA,CAC/B,CAAC;OACJ,MAAM;QACL,OAAO,IAAI;;IAEf,CAAC;GAAA;EAEKC,kBAAkB,WAAAA,mBAAA;;MACtB,IAAI,CAAC,IAAI,CAAC1G,YAAY,EAAE;QACtB,MAAM,IAAI,CAACC,oBAAoB;;MAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAI,CAACU,kBAAkB;;MAG/B,IAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACiH,kBAAkB,EAAE;MAC/C,OAAOtG,GAAG,GAAG,IAAI8B,UAAU,CAAC9B,GAAG,CAAC,GAAG,IAAI;IACzC,CAAC;GAAA;EAEDuG,cAAc,WAAAA,eAAA;IACZ,IAAI,CAAC,IAAI,CAAC3G,YAAY,EAAE;MACtB,MAAM,IAAI,CAACC,oBAAoB;;IAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAG/B,IAAAyG,qBAAA,GAA2BnH,QAAQ,CAACkH,cAAc,EAAE;MAA5CE,OAAO,GAAAD,qBAAA,CAAPC,OAAO;MAAE9C,KAAK,GAAA6C,qBAAA,CAAL7C,KAAK;IACtB,IAAI8C,OAAO,EAAE;MACXpG,aAAM,CAACqG,GAAG,CAAC,0BAA0B,CAAC;KACvC,MAAM;MACLrG,aAAM,CAACsD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;;IAGxD,OAAO,CAAC,CAAC8C,OAAO;EAClB,CAAC;EAEDE,aAAa,WAAAA,cAAA;IACX,IAAI,CAAC,IAAI,CAAC/G,YAAY,EAAE;MACtB,MAAM,IAAI,CAACC,oBAAoB;;IAEjC,IAAI,CAAC,IAAI,CAACC,eAAe,CAACT,QAAQ,CAAC,EAAE;MACnC,MAAM,IAAI,CAACU,kBAAkB;;IAG/B,IAAA6G,qBAAA,GAA2BvH,QAAQ,CAACsH,aAAa,EAAE;MAA3CE,OAAO,GAAAD,qBAAA,CAAPC,OAAO;MAAElD,KAAK,GAAAiD,qBAAA,CAALjD,KAAK;IACtB,IAAI,CAACkD,OAAO,IAAIlD,KAAK,EAAE;MACrBtD,aAAM,CAACsD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACrD,OAAO,IAAI;;IAGb,IAAI;MACF,OAAO1D,IAAI,CAACC,KAAK,CAAC2G,OAAO,CAAmB;KAC7C,CAAC,OAAOX,CAAC,EAAE;MACV7F,aAAM,CAACsD,KAAK,CAAC,8CAA8C,EAAEuC,CAAC,CAAC;MAC/D,OAAO,IAAI;;EAEf,CAAC;EAOD1E,YAAY,WAAAA,aAAC4E,IAAkB;IAC7B,IAAAU,KAAA,OAAApG,eAAA,CAAAC,OAAA,EAAkCyF,IAAI;MAA/B1E,UAAU,GAAAoF,KAAA;MAAEnF,WAAW,GAAAmF,KAAA;IAE9B,IAAIpF,UAAU,CAACqF,IAAI,IAAI,OAAO,IAAIrF,UAAU,CAACqF,IAAI,IAAI,aAAa,EAAE;MAClE,IAAMC,KAAK,GAAG,IAAI,CAACC,cAAc,CAACtF,WAAoB,CAAC;MAEvD,IAAIjC,MAAM,CAACwH,QAAQ,KAAK,SAAS,EAAE;QACjC,IAAI,SAAS,IAAIF,KAAK,EAAE;UAEtBA,KAAK,CAACG,OAAO,GAAG;YAAEA,OAAO,EAAEH,KAAK,CAACG;UAAO,CAAE;;;MAI9C,OAAO,CAACzF,UAAU,EAAEsF,KAAK,CAAC;;IAG5B,OAAOZ,IAAI;EACb,CAAC;EAOD1B,gBAAgB,WAAAA,iBAAC2B,IAAgC;IAC/C,IAAMe,UAAU,GAA8B,EAAE;IAEhDzE,MAAM,CAAC0E,IAAI,CAAChB,IAAI,CAAC,CAACiB,OAAO,CAAC,UAAAC,OAAO,EAAG;MAClC,IAAM1C,KAAK,GAAGwB,IAAI,CAACkB,OAAO,CAAC;MAC3BH,UAAU,CAACG,OAAO,CAAC,GAAG,OAAO1C,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG5E,IAAI,CAACgB,SAAS,CAAC4D,KAAK,CAAC;IACjF,CAAC,CAAC;IAEF,OAAOuC,UAAU;EACnB,CAAC;EAQDH,cAAc,WAAAA,eAACD,KAAY;IAAA,IAAAQ,MAAA;;IACzB,IAAMC,SAAS,GAAA9E,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACVoE,KAAK;MACR5B,KAAK,EAAE4B,KAAK,CAAC5B,KAAK,GAAG,IAAI,CAACC,aAAa,CAAC2B,KAAK,CAAC5B,KAAK,CAAC,GAAGE,SAAS;MAChEoC,WAAW,GAAAC,EAAA,GAAEX,KAAK,CAACU,WAAW,cAAAC,EAAA,uBAAAA,EAAA,CAAExB,GAAG,CAAC,UAAAhB,UAAU;QAAA,OAAIxC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAC7CuC,UAAU;UACbC,KAAK,EAAED,UAAU,CAACC,KAAK,GAAGoC,MAAI,CAACnC,aAAa,CAACF,UAAU,CAACC,KAAK,CAAC,GAAGE;QAAS;MAAA,CAC1E;IAAA,EACH;IAED,OAAOmC,SAAS;EAClB,CAAC;EAQDpC,aAAa,WAAAA,cAACD,KAAoB;IAChC,IAAIA,KAAK,IAAK,KAAuB,EAAE;MACrC,OAAO,OAAwB;;IAEjC,OAAOA,KAAK;EACd,CAAC;EAKDtF,eAAe,WAAAA,gBAAC8H,MAAwB;IACtC,OAAO,CAAC,CAACA,MAAM;EACjB,CAAC;EAED/H,oBAAoB,EAAE,IAAIgI,kBAAW,CAAC,oBAAoB,CAAC;EAE3D9H,kBAAkB,EAAE,IAAI8H,kBAAW,CAAC,wDAAwD,CAAC;EAE7FjI,YAAY,EAAE,IAAI;EAClB0D,aAAa,EAAE,KAAK;EACpB4D,QAAQ,EAAEY,qBAAQ,CAACC;CACpB;AAACC,OAAA,CAAAtI,MAAA,GAAAA,MAAA"}