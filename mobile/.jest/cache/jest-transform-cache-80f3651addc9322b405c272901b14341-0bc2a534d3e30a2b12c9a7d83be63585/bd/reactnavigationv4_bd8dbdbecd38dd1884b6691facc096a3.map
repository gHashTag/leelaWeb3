{"version":3,"names":["_utils","require","_worldwide","_routingInstrumentation","_utils2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","defaultOptions","routeChangeTimeoutMs","ReactNavigationV4Instrumentation","_InternalRoutingInstr","_inherits2","_super","_this","options","length","undefined","_classCallCheck2","name","instrumentationName","_appContainer","_maxRecentRouteLen","_recentRouteKeys","_initialStateHandled","_pushRecentRouteKey","key","push","slice","_onBeforeNavigateNotSampled","transactionName","logger","log","_options","Object","assign","_createClass2","value","registerRoutingInstrumentation","listener","beforeNavigate","onConfirmRoute","_get2","_latestTransaction","onRouteWillChange","INITIAL_TRANSACTION_CONTEXT_V4","_updateLatestTransaction","_stateChangeTimeout","setTimeout","_discardLatestTransaction","bind","registerAppContainer","appContainerRef","RN_GLOBAL_OBJ","__sentry_rn_v4_registered","current","_patchRouter","warn","state","_navigation","clearTimeout","_onStateChange","_this2","originalGetStateForAction","router","getStateForAction","action","newState","updateLatestTransaction","currentRoute","_getCurrentRouteFromState","_prevRoute","originalContext","_getTransactionContext","mergedContext","toContext","finalContext","_prepareFinalContext","updateWithContext","isCustomName","setName","customTransactionSource","defaultTransactionSource","_a","_onConfirmRoute","_beforeNavigate","error","sampled","route","previousRoute","data","routeName","params","hasBeenSeen","includes","_b","op","tags","parentRoute","routes","index","Array","isArray","finish","InternalRoutingInstrumentation","exports","metadata","source"],"sources":["../../../src/js/tracing/reactnavigationv4.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type { Transaction, TransactionContext } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { RN_GLOBAL_OBJ } from '../utils/worldwide';\nimport type { OnConfirmRoute, TransactionCreator } from './routingInstrumentation';\nimport { InternalRoutingInstrumentation } from './routingInstrumentation';\nimport type { BeforeNavigate, ReactNavigationTransactionContext, RouteChangeContextData } from './types';\nimport { customTransactionSource, defaultTransactionSource } from './utils';\n\nexport interface NavigationRouteV4 {\n  routeName: string;\n  key: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params?: Record<string, any>;\n}\n\nexport interface NavigationStateV4 {\n  index: number;\n  key: string;\n  isTransitioning: boolean;\n  routeName?: string;\n  routes: (NavigationRouteV4 | NavigationStateV4)[];\n}\n\nexport interface AppContainerInstance {\n  _navigation: {\n    state: NavigationStateV4;\n    router: {\n      getStateForAction: (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        action: any,\n        state: NavigationStateV4,\n      ) => NavigationStateV4;\n    };\n  };\n}\n\ninterface ReactNavigationV4Options {\n  /**\n   * How long the instrumentation will wait for the route to mount after a change has been initiated,\n   * before the transaction is discarded.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  routeChangeTimeoutMs: number;\n}\n\nconst defaultOptions: ReactNavigationV4Options = {\n  routeChangeTimeoutMs: 1000,\n};\n\n/**\n * Instrumentation for React-Navigation V4.\n * Register the app container with `registerAppContainer` to use, or see docs for more details.\n */\nclass ReactNavigationV4Instrumentation extends InternalRoutingInstrumentation {\n  public static instrumentationName: string = 'react-navigation-v4';\n\n  public readonly name: string = ReactNavigationV4Instrumentation.instrumentationName;\n\n  private _appContainer: AppContainerInstance | null = null;\n\n  private readonly _maxRecentRouteLen: number = 200;\n\n  private _prevRoute?: NavigationRouteV4;\n  private _recentRouteKeys: string[] = [];\n\n  private _latestTransaction?: Transaction;\n  private _initialStateHandled: boolean = false;\n  private _stateChangeTimeout?: number | undefined;\n\n  private _options: ReactNavigationV4Options;\n\n  public constructor(options: Partial<ReactNavigationV4Options> = {}) {\n    super();\n\n    this._options = {\n      ...defaultOptions,\n      ...options,\n    };\n  }\n\n  /**\n   * Extends by calling _handleInitialState at the end.\n   */\n  public registerRoutingInstrumentation(\n    listener: TransactionCreator,\n    beforeNavigate: BeforeNavigate,\n    onConfirmRoute: OnConfirmRoute,\n  ): void {\n    super.registerRoutingInstrumentation(listener, beforeNavigate, onConfirmRoute);\n\n    // Need to handle the initial state as the router patch will only attach transactions on subsequent route changes.\n    if (!this._initialStateHandled) {\n      this._latestTransaction = this.onRouteWillChange(INITIAL_TRANSACTION_CONTEXT_V4);\n      if (this._appContainer) {\n        this._updateLatestTransaction();\n\n        this._initialStateHandled = true;\n      } else {\n        this._stateChangeTimeout = setTimeout(\n          this._discardLatestTransaction.bind(this),\n          this._options.routeChangeTimeoutMs,\n        );\n      }\n    }\n  }\n\n  /**\n   * Pass the ref to the app container to register it to the instrumentation\n   * @param appContainerRef Ref to an `AppContainer`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public registerAppContainer(appContainerRef: any): void {\n    /* We prevent duplicate routing instrumentation to be initialized on fast refreshes\n\n      Explanation: If the user triggers a fast refresh on the file that the instrumentation is\n      initialized in, it will initialize a new instance and will cause undefined behavior.\n     */\n    if (!RN_GLOBAL_OBJ.__sentry_rn_v4_registered) {\n      if ('current' in appContainerRef) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        this._appContainer = appContainerRef.current;\n      } else {\n        this._appContainer = appContainerRef;\n      }\n\n      if (this._appContainer) {\n        this._patchRouter();\n\n        if (!this._initialStateHandled) {\n          if (this._latestTransaction) {\n            this._updateLatestTransaction();\n          } else {\n            logger.log(\n              '[ReactNavigationV4Instrumentation] App container registered, but integration has not been setup yet.',\n            );\n          }\n          this._initialStateHandled = true;\n        }\n\n        RN_GLOBAL_OBJ.__sentry_rn_v4_registered = true;\n      } else {\n        logger.warn('[ReactNavigationV4Instrumentation] Received invalid app container ref!');\n      }\n    }\n  }\n\n  /**\n   * Updates the latest transaction with the current state and calls beforeNavigate.\n   */\n  private _updateLatestTransaction(): void {\n    // We can assume the ref is present as this is called from registerAppContainer\n    if (this._appContainer && this._latestTransaction) {\n      const state = this._appContainer._navigation.state;\n\n      if (typeof this._stateChangeTimeout !== 'undefined') {\n        clearTimeout(this._stateChangeTimeout);\n        this._stateChangeTimeout = undefined;\n      }\n\n      this._onStateChange(state, true);\n    }\n  }\n\n  /**\n   * Patches the react navigation router so we can listen to the route changes and attach the `IdleTransaction` before the\n   * new screen is mounted.\n   */\n  private _patchRouter(): void {\n    if (this._appContainer) {\n      const originalGetStateForAction = this._appContainer._navigation.router.getStateForAction;\n\n      this._appContainer._navigation.router.getStateForAction = (action, state) => {\n        const newState = originalGetStateForAction(action, state);\n\n        this._onStateChange(newState);\n\n        return newState;\n      };\n    }\n  }\n\n  /**\n   * To be called on navigation state changes and creates the transaction.\n   */\n  private _onStateChange(state: NavigationStateV4 | undefined, updateLatestTransaction: boolean = false): void {\n    // it's not guaranteed that a state is always produced.\n    // see: https://github.com/react-navigation/react-navigation/blob/45d419be93c34e900e8734ce98321ae875ac4997/packages/core/src/routers/SwitchRouter.js?rgh-link-date=2021-09-25T12%3A43%3A36Z#L301\n    if (!state || state === undefined) {\n      logger.warn('[ReactNavigationV4Instrumentation] onStateChange called without a valid state.');\n\n      return;\n    }\n\n    const currentRoute = this._getCurrentRouteFromState(state);\n\n    // If the route is a different key, this is so we ignore actions that pertain to the same screen.\n    if (!this._prevRoute || currentRoute.key !== this._prevRoute.key) {\n      const originalContext = this._getTransactionContext(currentRoute, this._prevRoute);\n\n      let mergedContext = originalContext;\n      if (updateLatestTransaction && this._latestTransaction) {\n        mergedContext = {\n          ...this._latestTransaction.toContext(),\n          ...originalContext,\n        };\n      }\n\n      const finalContext = this._prepareFinalContext(mergedContext);\n\n      if (updateLatestTransaction && this._latestTransaction) {\n        // Update the latest transaction instead of calling onRouteWillChange\n        this._latestTransaction.updateWithContext(finalContext);\n        const isCustomName = mergedContext.name !== finalContext.name;\n        this._latestTransaction.setName(\n          finalContext.name,\n          isCustomName ? customTransactionSource : defaultTransactionSource,\n        );\n      } else {\n        this._latestTransaction = this.onRouteWillChange(finalContext);\n      }\n\n      this._onConfirmRoute?.(finalContext);\n\n      this._pushRecentRouteKey(currentRoute.key);\n      this._prevRoute = currentRoute;\n    }\n  }\n\n  /** Creates final transaction context before confirmation */\n  private _prepareFinalContext(mergedContext: TransactionContext): TransactionContext {\n    let finalContext = this._beforeNavigate?.({ ...mergedContext });\n\n    // This block is to catch users not returning a transaction context\n    if (!finalContext) {\n      logger.error(\n        `[ReactNavigationV4Instrumentation] beforeNavigate returned ${finalContext}, return context.sampled = false to not send transaction.`,\n      );\n\n      finalContext = {\n        ...mergedContext,\n        sampled: false,\n      };\n    }\n\n    if (finalContext.sampled === false) {\n      this._onBeforeNavigateNotSampled(finalContext.name);\n    }\n\n    return finalContext;\n  }\n\n  /**\n   * Gets the transaction context for a `NavigationRouteV4`\n   */\n  private _getTransactionContext(\n    route: NavigationRouteV4,\n    previousRoute?: NavigationRouteV4,\n  ): ReactNavigationTransactionContext {\n    const data: RouteChangeContextData = {\n      route: {\n        name: route.routeName, // Include name here too for use in `beforeNavigate`\n        key: route.key,\n        params: route.params ?? {},\n        hasBeenSeen: this._recentRouteKeys.includes(route.key),\n      },\n      previousRoute: previousRoute\n        ? {\n            name: previousRoute.routeName,\n            key: previousRoute.key,\n            params: previousRoute.params ?? {},\n          }\n        : null,\n    };\n\n    return {\n      name: route.routeName,\n      op: 'navigation',\n      tags: {\n        'routing.instrumentation': ReactNavigationV4Instrumentation.instrumentationName,\n        'routing.route.name': route.routeName,\n      },\n      data,\n    };\n  }\n\n  /**\n   * Gets the current route given a navigation state\n   */\n  private _getCurrentRouteFromState(state: NavigationStateV4): NavigationRouteV4 {\n    const parentRoute = state.routes[state.index];\n\n    if (\n      'index' in parentRoute &&\n      'routes' in parentRoute &&\n      typeof parentRoute.index === 'number' &&\n      Array.isArray(parentRoute.routes)\n    ) {\n      return this._getCurrentRouteFromState(parentRoute);\n    }\n\n    return parentRoute as NavigationRouteV4;\n  }\n\n  /** Pushes a recent route key, and removes earlier routes when there is greater than the max length */\n  private _pushRecentRouteKey = (key: string): void => {\n    this._recentRouteKeys.push(key);\n\n    if (this._recentRouteKeys.length > this._maxRecentRouteLen) {\n      this._recentRouteKeys = this._recentRouteKeys.slice(this._recentRouteKeys.length - this._maxRecentRouteLen);\n    }\n  };\n\n  /** Helper to log a transaction that was not sampled due to beforeNavigate */\n  private _onBeforeNavigateNotSampled = (transactionName: string): void => {\n    logger.log(\n      `[ReactNavigationV4Instrumentation] Will not send transaction \"${transactionName}\" due to beforeNavigate.`,\n    );\n  };\n\n  /** Cancels the latest transaction so it does not get sent to Sentry. */\n  private _discardLatestTransaction(): void {\n    if (this._latestTransaction) {\n      this._latestTransaction.sampled = false;\n      this._latestTransaction.finish();\n      this._latestTransaction = undefined;\n    }\n  }\n}\n\nconst INITIAL_TRANSACTION_CONTEXT_V4: TransactionContext = {\n  name: 'App Launch',\n  op: 'navigation',\n  tags: {\n    'routing.instrumentation': ReactNavigationV4Instrumentation.instrumentationName,\n  },\n  data: {},\n  metadata: {\n    source: 'view',\n  },\n};\n\nexport { ReactNavigationV4Instrumentation, INITIAL_TRANSACTION_CONTEXT_V4 };\n"],"mappings":"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"}