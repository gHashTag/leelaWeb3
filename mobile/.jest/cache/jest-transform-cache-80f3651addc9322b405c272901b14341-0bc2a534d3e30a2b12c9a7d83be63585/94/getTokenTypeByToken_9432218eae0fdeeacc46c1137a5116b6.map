{"version":3,"names":["regSelectOpenClose","getTokenTypeByToken","token","cleanedType","type","replace","tag","substr"],"sources":["getTokenTypeByToken.js"],"sourcesContent":["const regSelectOpenClose = /_open|_close/g;\n\n/**\n *\n * @example {\n    \"type\": \"heading_open\",\n    \"tag\": \"h1\",\n    \"attrs\": null,\n    \"map\": [\n      1,\n      2\n    ],\n    \"nesting\": 1,\n    \"level\": 0,\n    \"children\": null,\n    \"content\": \"\",\n    \"markup\": \"#\",\n    \"info\": \"\",\n    \"meta\": null,\n    \"block\": true,\n    \"hidden\": false\n  }\n * @param token\n * @return {String}\n */\nexport default function getTokenTypeByToken(token) {\n  let cleanedType = 'unknown';\n\n  if (token.type) {\n    cleanedType = token.type.replace(regSelectOpenClose, '');\n  }\n\n  switch (cleanedType) {\n    case 'heading': {\n      cleanedType = `${cleanedType}${token.tag.substr(1)}`;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return cleanedType;\n}\n"],"mappings":";;;;AAAA,IAAMA,kBAAkB,GAAG,eAAe;AAyB3B,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EACjD,IAAIC,WAAW,GAAG,SAAS;EAE3B,IAAID,KAAK,CAACE,IAAI,EAAE;IACdD,WAAW,GAAGD,KAAK,CAACE,IAAI,CAACC,OAAO,CAACL,kBAAkB,EAAE,EAAE,CAAC;EAC1D;EAEA,QAAQG,WAAW;IACjB,KAAK,SAAS;MAAE;QACdA,WAAW,GAAI,GAAEA,WAAY,GAAED,KAAK,CAACI,GAAG,CAACC,MAAM,CAAC,CAAC,CAAE,EAAC;QACpD;MACF;IACA;MAAS;QACP;MACF;EACF;EAEA,OAAOJ,WAAW;AACpB"}