d295959c4e21f50367861990e570fa0f
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/ActionButtons/ActionButtons.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var ActionButtons_1 = require("./ActionButtons");
var isLiked = false;
describe('ActionButtons Component', function () {
  it('renders admin menu button if isAdmin is true', function () {
    var handleAdminMenu = jest.fn();
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: true,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: handleAdminMenu,
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        handleShareLink: function handleShareLink() {},
        isLiked: isLiked
      })),
      getByTestId = _ref.getByTestId;
    var adminMenuButton = getByTestId('admin-menu-button');
    expect(adminMenuButton).toBeTruthy();
  });
  it('renders comment and like buttons', function () {
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref2.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    expect(commentButton).toBeTruthy();
    expect(likeButton).toBeTruthy();
  });
  it('applies correct styles to comment and like buttons', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref3.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    var commentButtonStyles = commentButton.props.style;
    var likeButtonStyles = likeButton.props.style;
    expect(commentButtonStyles).toMatchObject({
      flexDirection: 'row',
      justifyContent: 'flex-start'
    });
    expect(likeButtonStyles).toMatchObject({});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiQWN0aW9uQnV0dG9uc18xIiwiaXNMaWtlZCIsImRlc2NyaWJlIiwiaXQiLCJoYW5kbGVBZG1pbk1lbnUiLCJqZXN0IiwiZm4iLCJfcmVmIiwicmVuZGVyIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJBY3Rpb25CdXR0b25zIiwiaXNBZG1pbiIsImNvbW1Db3VudCIsImxpa2VDb3VudCIsImhhbmRsZUNvbW1lbnQiLCJoYW5kbGVMaWtlIiwiaGFuZGxlU2hhcmVMaW5rIiwiZ2V0QnlUZXN0SWQiLCJhZG1pbk1lbnVCdXR0b24iLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiX3JlZjIiLCJjb21tZW50QnV0dG9uIiwiaGVhcnQiLCJsaWtlQnV0dG9uIiwiX3JlZjMiLCJjb21tZW50QnV0dG9uU3R5bGVzIiwicHJvcHMiLCJzdHlsZSIsImxpa2VCdXR0b25TdHlsZXMiLCJ0b01hdGNoT2JqZWN0IiwiZmxleERpcmVjdGlvbiIsImp1c3RpZnlDb250ZW50Il0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9BY3Rpb25CdXR0b25zL0FjdGlvbkJ1dHRvbnMudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyBTdHlsZVByb3AsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSdcblxuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnXG5pbXBvcnQgRVN0eWxlU2hlZXQgZnJvbSAncmVhY3QtbmF0aXZlLWV4dGVuZGVkLXN0eWxlc2hlZXQnXG5cbmltcG9ydCB7IEFjdGlvbkJ1dHRvbnMgfSBmcm9tICcuL0FjdGlvbkJ1dHRvbnMnXG5jb25zdCBpc0xpa2VkID0gZmFsc2VcblxuZGVzY3JpYmUoJ0FjdGlvbkJ1dHRvbnMgQ29tcG9uZW50JywgKCkgPT4ge1xuICBpdCgncmVuZGVycyBhZG1pbiBtZW51IGJ1dHRvbiBpZiBpc0FkbWluIGlzIHRydWUnLCAoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlQWRtaW5NZW51ID0gamVzdC5mbigpXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPEFjdGlvbkJ1dHRvbnNcbiAgICAgICAgaXNBZG1pbj17dHJ1ZX1cbiAgICAgICAgY29tbUNvdW50PXs1fVxuICAgICAgICBsaWtlQ291bnQ9ezEwfVxuICAgICAgICBoYW5kbGVBZG1pbk1lbnU9e2hhbmRsZUFkbWluTWVudX1cbiAgICAgICAgaGFuZGxlQ29tbWVudD17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZUxpa2U9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVTaGFyZUxpbms9eygpID0+IHt9fVxuICAgICAgICBpc0xpa2VkPXtpc0xpa2VkfVxuICAgICAgLz4sXG4gICAgKVxuICAgIGNvbnN0IGFkbWluTWVudUJ1dHRvbiA9IGdldEJ5VGVzdElkKCdhZG1pbi1tZW51LWJ1dHRvbicpXG4gICAgZXhwZWN0KGFkbWluTWVudUJ1dHRvbikudG9CZVRydXRoeSgpXG4gIH0pXG5cbiAgaXQoJ3JlbmRlcnMgY29tbWVudCBhbmQgbGlrZSBidXR0b25zJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxBY3Rpb25CdXR0b25zXG4gICAgICAgIGlzQWRtaW49e2ZhbHNlfVxuICAgICAgICBjb21tQ291bnQ9ezV9XG4gICAgICAgIGxpa2VDb3VudD17MTB9XG4gICAgICAgIGhhbmRsZUFkbWluTWVudT17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZUNvbW1lbnQ9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVMaWtlPXsoKSA9PiB7fX1cbiAgICAgICAgaXNMaWtlZD17aXNMaWtlZH1cbiAgICAgICAgaGFuZGxlU2hhcmVMaW5rPXsoKSA9PiB7fX1cbiAgICAgIC8+LFxuICAgIClcbiAgICBjb25zdCBjb21tZW50QnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2NvbW1lbnQtYnV0dG9uJylcbiAgICBjb25zdCBoZWFydCA9IGlzTGlrZWQgPyAnaGVhcnQnIDogJ2hlYXJ0LW91dGxpbmUnXG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IGdldEJ5VGVzdElkKGhlYXJ0KVxuICAgIGV4cGVjdChjb21tZW50QnV0dG9uKS50b0JlVHJ1dGh5KClcbiAgICBleHBlY3QobGlrZUJ1dHRvbikudG9CZVRydXRoeSgpXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgY29ycmVjdCBzdHlsZXMgdG8gY29tbWVudCBhbmQgbGlrZSBidXR0b25zJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxBY3Rpb25CdXR0b25zXG4gICAgICAgIGlzQWRtaW49e2ZhbHNlfVxuICAgICAgICBjb21tQ291bnQ9ezV9XG4gICAgICAgIGxpa2VDb3VudD17MTB9XG4gICAgICAgIGhhbmRsZUFkbWluTWVudT17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZUNvbW1lbnQ9eygpID0+IHt9fVxuICAgICAgICBoYW5kbGVMaWtlPXsoKSA9PiB7fX1cbiAgICAgICAgaXNMaWtlZD17aXNMaWtlZH1cbiAgICAgICAgaGFuZGxlU2hhcmVMaW5rPXsoKSA9PiB7fX1cbiAgICAgIC8+LFxuICAgIClcbiAgICBjb25zdCBjb21tZW50QnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2NvbW1lbnQtYnV0dG9uJylcbiAgICBjb25zdCBoZWFydCA9IGlzTGlrZWQgPyAnaGVhcnQnIDogJ2hlYXJ0LW91dGxpbmUnXG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IGdldEJ5VGVzdElkKGhlYXJ0KVxuICAgIGNvbnN0IGNvbW1lbnRCdXR0b25TdHlsZXMgPSBjb21tZW50QnV0dG9uLnByb3BzXG4gICAgICAuc3R5bGUgYXMgU3R5bGVQcm9wPFZpZXdTdHlsZT5cbiAgICBjb25zdCBsaWtlQnV0dG9uU3R5bGVzID0gbGlrZUJ1dHRvbi5wcm9wcy5zdHlsZSBhcyBTdHlsZVByb3A8Vmlld1N0eWxlPlxuXG4gICAgZXhwZWN0KGNvbW1lbnRCdXR0b25TdHlsZXMpLnRvTWF0Y2hPYmplY3Qoe1xuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsIC8vINCe0LbQuNC00LDQtdC80YvQuSDRgdGC0LjQu9GMINC00LvRjyDQutC90L7Qv9C60Lgg0LrQvtC80LzQtdC90YLQsNGA0LjRj1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0JyxcbiAgICB9KVxuXG4gICAgZXhwZWN0KGxpa2VCdXR0b25TdHlsZXMpLnRvTWF0Y2hPYmplY3Qoe1xuICAgICAgLy8g0LLQsNGIINC+0LbQuNC00LDQtdC80YvQuSDRgdGC0LjQu9GMINC00LvRjyDQutC90L7Qv9C60Lgg0LvQsNC50LrQsFxuICAgIH0pXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFJQSxJQUFBQyxjQUFBLEdBQUFELE9BQUE7QUFHQSxJQUFBRSxlQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFNRyxPQUFPLEdBQUcsS0FBSztBQUVyQkMsUUFBUSxDQUFDLHlCQUF5QixFQUFFLFlBQUs7RUFDdkNDLEVBQUUsQ0FBQyw4Q0FBOEMsRUFBRSxZQUFLO0lBQ3RELElBQU1DLGVBQWUsR0FBR0MsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDakMsSUFBQUMsSUFBQSxHQUF3QixJQUFBUixjQUFBLENBQUFTLE1BQU0sRUFDNUIsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNWLGVBQUEsQ0FBQVcsYUFBYTtRQUNaQyxPQUFPLEVBQUUsSUFBSztRQUNkQyxTQUFTLEVBQUUsQ0FBRTtRQUNiQyxTQUFTLEVBQUUsRUFBRztRQUNkVixlQUFlLEVBQUVBLGVBQWdCO1FBQ2pDVyxhQUFhLEVBQUUsU0FBQUEsY0FBQSxFQUFLLENBQUUsQ0FBRTtRQUN4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