55165290cd7804f244f56a6f049352e1
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Gem/index.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gem = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var react_native_size_matters_1 = require("react-native-size-matters");
var images_1 = require("./images");
var Gem = function Gem(_ref) {
  var playerNumber = _ref.playerNumber,
    onPress = _ref.onPress;
  var container = styles.container,
    gems = styles.gems;
  var source = function source() {
    if (playerNumber >= 1 && playerNumber <= 6) {
      return images_1.ICONS[playerNumber - 1];
    } else {
      return images_1.ICONS[0];
    }
  };
  return (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
    onPress: onPress,
    testID: "gem-container",
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: container,
      children: (0, _jsxRuntime.jsx)(react_native_1.Image, {
        style: gems,
        source: source(),
        testID: "gem-image"
      })
    })
  });
};
exports.Gem = Gem;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 2
  },
  gems: {
    width: (0, react_native_size_matters_1.ms)(42, 0.5),
    height: (0, react_native_size_matters_1.ms)(42, 0.5),
    borderRadius: (0, react_native_size_matters_1.ms)(42, 0.5) / 2
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiaW1hZ2VzXzEiLCJHZW0iLCJfcmVmIiwicGxheWVyTnVtYmVyIiwib25QcmVzcyIsImNvbnRhaW5lciIsInN0eWxlcyIsImdlbXMiLCJzb3VyY2UiLCJJQ09OUyIsIl9qc3hSdW50aW1lIiwianN4IiwiUHJlc3NhYmxlIiwidGVzdElEIiwiY2hpbGRyZW4iLCJWaWV3Iiwic3R5bGUiLCJJbWFnZSIsImV4cG9ydHMiLCJTY2FsZWRTaGVldCIsImNyZWF0ZSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInpJbmRleCIsIndpZHRoIiwibXMiLCJoZWlnaHQiLCJib3JkZXJSYWRpdXMiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL0dlbS9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtJbWFnZSwgUHJlc3NhYmxlLCBWaWV3fSBmcm9tICdyZWFjdC1uYXRpdmUnXG5pbXBvcnQge1NjYWxlZFNoZWV0LCBtc30gZnJvbSAncmVhY3QtbmF0aXZlLXNpemUtbWF0dGVycydcbmltcG9ydCB7SUNPTlN9IGZyb20gJy4vaW1hZ2VzJ1xuXG5pbnRlcmZhY2UgR2VtUHJvcHMge1xuICBwbGF5ZXJOdW1iZXI6IG51bWJlclxuICBvblByZXNzOiAoKSA9PiB2b2lkXG59XG5cbmNvbnN0IEdlbTogUmVhY3QuRkM8R2VtUHJvcHM+ID0gKHtwbGF5ZXJOdW1iZXIsIG9uUHJlc3N9KSA9PiB7XG4gIGNvbnN0IHtjb250YWluZXIsIGdlbXN9ID0gc3R5bGVzXG5cbiAgY29uc3Qgc291cmNlID0gKCkgPT4ge1xuICAgIGlmIChwbGF5ZXJOdW1iZXIgPj0gMSAmJiBwbGF5ZXJOdW1iZXIgPD0gNikge1xuICAgICAgcmV0dXJuIElDT05TW3BsYXllck51bWJlciAtIDFdXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBJQ09OU1swXSAvLyBSZXBsYWNlIHdpdGggdGhlIGRlZmF1bHQgaW1hZ2VcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxQcmVzc2FibGUgb25QcmVzcz17b25QcmVzc30gdGVzdElEPVwiZ2VtLWNvbnRhaW5lclwiPlxuICAgICAgPFZpZXcgc3R5bGU9e2NvbnRhaW5lcn0+XG4gICAgICAgIDxJbWFnZSBzdHlsZT17Z2Vtc30gc291cmNlPXtzb3VyY2UoKX0gdGVzdElEPVwiZ2VtLWltYWdlXCIgLz5cbiAgICAgIDwvVmlldz5cbiAgICA8L1ByZXNzYWJsZT5cbiAgKVxufVxuXG5jb25zdCBzdHlsZXMgPSBTY2FsZWRTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgekluZGV4OiAyLFxuICB9LFxuICBnZW1zOiB7XG4gICAgd2lkdGg6IG1zKDQyLCAwLjUpLFxuICAgIGhlaWdodDogbXMoNDIsIDAuNSksXG4gICAgYm9yZGVyUmFkaXVzOiBtcyg0MiwgMC41KSAvIDIsXG4gIH0sXG59KVxuXG5leHBvcnQge0dlbX1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGNBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLDJCQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxRQUFBLEdBQUFILE9BQUE7QUFPQSxJQUFNSSxHQUFHLEdBQXVCLFNBQTFCQSxHQUFHQSxDQUFBQyxJQUFBLEVBQW1EO0VBQUEsSUFBMUJDLFlBQVksR0FBQUQsSUFBQSxDQUFaQyxZQUFZO0lBQUVDLE9BQU8sR0FBQUYsSUFBQSxDQUFQRSxPQUFPO0VBQ3JELElBQU9DLFNBQVMsR0FBVUMsTUFBTSxDQUF6QkQsU0FBUztJQUFFRSxJQUFJLEdBQUlELE1BQU0sQ0FBZEMsSUFBSTtFQUV0QixJQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBTUEsQ0FBQSxFQUFRO0lBQ2xCLElBQUlMLFlBQVksSUFBSSxDQUFDLElBQUlBLFlBQVksSUFBSSxDQUFDLEVBQUU7TUFDMUMsT0FBT0gsUUFBQSxDQUFBUyxLQUFLLENBQUNOLFlBQVksR0FBRyxDQUFDLENBQUM7S0FDL0IsTUFBTTtNQUNMLE9BQU9ILFFBQUEsQ0FBQVMsS0FBSyxDQUFDLENBQUMsQ0FBQzs7RUFFbkIsQ0FBQztFQUVELE9BQ0UsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNiLGNBQUEsQ0FBQWMsU0FBUztJQUFDUixPQUFPLEVBQUVBLE9BQVE7SUFBQ1MsTUFBTSxFQUFDLGVBQWU7SUFBQUMsUUFBQSxFQUNqRCxJQUFBSixXQUFBLENBQUFDLEdBQUEsRUFBQ2IsY0FBQSxDQUFBaUIsSUFBSTtNQUFDQyxLQUFLLEVBQUVYLFNBQVU7TUFBQVMsUUFBQSxFQUNyQixJQUFBSixXQUFBLENBQUFDLEdBQUEsRUFBQ2IsY0FBQSxDQUFBbUIsS0FBSztRQUFDRCxLQUFLLEVBQUVULElBQUs7UUFBQ0MsTUFBTSxFQUFFQSxNQUFNLEVBQUc7UUFBQ0ssTUFBTSxFQUFDO01BQVc7SUFDMUQsQ0FBTTtFQUNSLENBQVcsQ0FBQztBQUVoQixDQUFDO0FBZU9LLE9BQUEsQ0FBQWpCLEdBQUEsR0FBQUEsR0FBQTtBQWJSLElBQU1LLE1BQU0sR0FBR1AsMkJBQUEsQ0FBQW9CLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDO0VBQ2hDZixTQUFTLEVBQUU7SUFDVGdCLFVBQVUsRUFBRSxRQUFRO0lBQ3BCQyxjQUFjLEVBQUUsUUFBUTtJQUN4QkMsTUFBTSxFQUFFO0dBQ1Q7RUFDRGhCLElBQUksRUFBRTtJQUNKaUIsS0FBSyxFQUFFLElBQUF6QiwyQkFBQSxDQUFBMEIsRUFBRSxFQUFDLEVBQUUsRUFBRSxHQUFHLENBQUM7SUFDbEJDLE1BQU0sRUFBRSxJQUFBM0IsMkJBQUEsQ0FBQTBCLEVBQUUsRUFBQyxFQUFFLEVBQUUsR0FBRyxDQUFDO0lBQ25CRSxZQUFZLEVBQUUsSUFBQTVCLDJCQUFBLENBQUEwQixFQUFFLEVBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxHQUFHOztDQUUvQixDQUFDIn0=