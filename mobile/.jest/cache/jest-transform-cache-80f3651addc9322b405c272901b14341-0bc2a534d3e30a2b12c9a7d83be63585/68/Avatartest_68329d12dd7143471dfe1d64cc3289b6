79445c53639728d406423c3d72b93ffa
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Avatar/Avatar.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var Avatar_1 = require("./Avatar");
describe('Avatar Component', function () {
  it('renders correctly with default props', function () {
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(Avatar_1.Avatar, {
        plan: 5,
        size: "medium",
        avatar: "avatar-url",
        testID: "avatar-component"
      })),
      getByTestId = _ref.getByTestId;
    expect(getByTestId('avatar-component')).toBeTruthy();
  });
  it('calls onPress function when pressed', function () {
    var onPressMock = jest.fn();
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(Avatar_1.Avatar, {
        plan: 5,
        size: "medium",
        avatar: "avatar-url",
        onPress: onPressMock,
        testID: "avatar-component"
      })),
      getByTestId = _ref2.getByTestId;
    var avatarComponent = getByTestId('avatar-component');
    react_native_1.fireEvent.press(avatarComponent);
    expect(onPressMock).toHaveBeenCalled();
  });
  it('displays time icon when isAccept is false', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(Avatar_1.Avatar, {
        plan: 5,
        size: "medium",
        avatar: "avatar-url",
        isAccept: false,
        testID: "avatar-component"
      })),
      queryByTestId = _ref3.queryByTestId;
    expect(queryByTestId('avatar-title')).toBeNull();
    expect(queryByTestId('time-icon')).toBeTruthy();
  });
  it('displays text title when isAccept is true', function () {
    var _ref4 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(Avatar_1.Avatar, {
        plan: 5,
        size: "medium",
        avatar: "avatar-url",
        isAccept: true,
        testID: "avatar-component"
      })),
      queryByTestId = _ref4.queryByTestId;
    expect(queryByTestId('avatar-title')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiQXZhdGFyXzEiLCJkZXNjcmliZSIsIml0IiwiX3JlZiIsInJlbmRlciIsIl9qc3hSdW50aW1lIiwianN4IiwiQXZhdGFyIiwicGxhbiIsInNpemUiLCJhdmF0YXIiLCJ0ZXN0SUQiLCJnZXRCeVRlc3RJZCIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJvblByZXNzTW9jayIsImplc3QiLCJmbiIsIl9yZWYyIiwib25QcmVzcyIsImF2YXRhckNvbXBvbmVudCIsImZpcmVFdmVudCIsInByZXNzIiwidG9IYXZlQmVlbkNhbGxlZCIsIl9yZWYzIiwiaXNBY2NlcHQiLCJxdWVyeUJ5VGVzdElkIiwidG9CZU51bGwiLCJfcmVmNCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbGF5cmEvTGVlbGFBaVdlYjMvc3JjL2NvbXBvbmVudHMvQXZhdGFyL0F2YXRhci50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IGZpcmVFdmVudCwgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnXG5cbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4vQXZhdGFyJ1xuXG5kZXNjcmliZSgnQXZhdGFyIENvbXBvbmVudCcsICgpID0+IHtcbiAgaXQoJ3JlbmRlcnMgY29ycmVjdGx5IHdpdGggZGVmYXVsdCBwcm9wcycsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QXZhdGFyXG4gICAgICAgIHBsYW49ezV9XG4gICAgICAgIHNpemU9XCJtZWRpdW1cIlxuICAgICAgICBhdmF0YXI9XCJhdmF0YXItdXJsXCJcbiAgICAgICAgdGVzdElEPVwiYXZhdGFyLWNvbXBvbmVudFwiXG4gICAgICAvPixcbiAgICApXG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKCdhdmF0YXItY29tcG9uZW50JykpLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdjYWxscyBvblByZXNzIGZ1bmN0aW9uIHdoZW4gcHJlc3NlZCcsICgpID0+IHtcbiAgICBjb25zdCBvblByZXNzTW9jayA9IGplc3QuZm4oKVxuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxBdmF0YXJcbiAgICAgICAgcGxhbj17NX1cbiAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgIGF2YXRhcj1cImF2YXRhci11cmxcIlxuICAgICAgICBvblByZXNzPXtvblByZXNzTW9ja31cbiAgICAgICAgdGVzdElEPVwiYXZhdGFyLWNvbXBvbmVudFwiXG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgYXZhdGFyQ29tcG9uZW50ID0gZ2V0QnlUZXN0SWQoJ2F2YXRhci1jb21wb25lbnQnKVxuICAgIGZpcmVFdmVudC5wcmVzcyhhdmF0YXJDb21wb25lbnQpXG4gICAgZXhwZWN0KG9uUHJlc3NNb2NrKS50b0hhdmVCZWVuQ2FsbGVkKClcbiAgfSlcblxuICBpdCgnZGlzcGxheXMgdGltZSBpY29uIHdoZW4gaXNBY2NlcHQgaXMgZmFsc2UnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBxdWVyeUJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QXZhdGFyXG4gICAgICAgIHBsYW49ezV9XG4gICAgICAgIHNpemU9XCJtZWRpdW1cIlxuICAgICAgICBhdmF0YXI9XCJhdmF0YXItdXJsXCJcbiAgICAgICAgaXNBY2NlcHQ9e2ZhbHNlfVxuICAgICAgICB0ZXN0SUQ9XCJhdmF0YXItY29tcG9uZW50XCJcbiAgICAgIC8+LFxuICAgIClcbiAgICBleHBlY3QocXVlcnlCeVRlc3RJZCgnYXZhdGFyLXRpdGxlJykpLnRvQmVOdWxsKClcbiAgICBleHBlY3QocXVlcnlCeVRlc3RJZCgndGltZS1pY29uJykpLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdkaXNwbGF5cyB0ZXh0IHRpdGxlIHdoZW4gaXNBY2NlcHQgaXMgdHJ1ZScsICgpID0+IHtcbiAgICBjb25zdCB7IHF1ZXJ5QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxBdmF0YXJcbiAgICAgICAgcGxhbj17NX1cbiAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgIGF2YXRhcj1cImF2YXRhci11cmxcIlxuICAgICAgICBpc0FjY2VwdD17dHJ1ZX1cbiAgICAgICAgdGVzdElEPVwiYXZhdGFyLWNvbXBvbmVudFwiXG4gICAgICAvPixcbiAgICApXG4gICAgZXhwZWN0KHF1ZXJ5QnlUZXN0SWQoJ2F2YXRhci10aXRsZScpKS50b0JlVHJ1dGh5KClcbiAgICAvLyBleHBlY3QocXVlcnlCeVRlc3RJZCgnYXZhdGFyLXRpdGxlJykpLnRvSGF2ZVRleHRDb250ZW50KCcwNScpXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxjQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxRQUFBLEdBQUFGLE9BQUE7QUFFQUcsUUFBUSxDQUFDLGtCQUFrQixFQUFFLFlBQUs7RUFDaENDLEVBQUUsQ0FBQyxzQ0FBc0MsRUFBRSxZQUFLO0lBQzlDLElBQUFDLElBQUEsR0FBd0IsSUFBQUosY0FBQSxDQUFBSyxNQUFNLEVBQzVCLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTixRQUFBLENBQUFPLE1BQU07UUFDTEMsSUFBSSxFQUFFLENBQUU7UUFDUkMsSUFBSSxFQUFDLFFBQVE7UUFDYkMsTUFBTSxFQUFDLFlBQVk7UUFDbkJDLE1BQU0sRUFBQztNQUFrQixFQUN6QixDQUNIO01BUE9DLFdBQVcsR0FBQVQsSUFBQSxDQUFYUyxXQUFXO0lBUW5CQyxNQUFNLENBQUNELFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtFQUN0RCxDQUFDLENBQUM7RUFFRlosRUFBRSxDQUFDLHFDQUFxQyxFQUFFLFlBQUs7SUFDN0MsSUFBTWEsV0FBVyxHQUFHQyxJQUFJLENBQUNDLEVBQUUsRUFBRTtJQUM3QixJQUFBQyxLQUFBLEdBQXdCLElBQUFuQixjQUFBLENBQUFLLE1BQU0sRUFDNUIsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNOLFFBQUEsQ0FBQU8sTUFBTTtRQUNMQyxJQUFJLEVBQUUsQ0FBRTtRQUNSQyxJQUFJLEVBQUMsUUFBUTtRQUNiQyxNQUFNLEVBQUMsWUFBWTtRQUNuQlMsT0FBTyxFQUFFSixXQUFZO1FBQ3JCSixNQUFNLEVBQUM7TUFBa0IsRUFDekIsQ0FDSDtNQVJPQyxXQUFXLEdBQUFNLEtBQUEsQ0FBWE4sV0FBVztJQVNuQixJQUFNUSxlQUFlLEdBQUdSLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQztJQUN2RGIsY0FBQSxDQUFBc0IsU0FBUyxDQUFDQyxLQUFLLENBQUNGLGVBQWUsQ0FBQztJQUNoQ1AsTUFBTSxDQUFDRSxXQUFXLENBQUMsQ0FBQ1EsZ0JBQWdCLEVBQUU7RUFDeEMsQ0FBQyxDQUFDO0VBRUZyQixFQUFFLENBQUMsMkNBQTJDLEVBQUUsWUFBSztJQUNuRCxJQUFBc0IsS0FBQSxHQUEwQixJQUFBekIsY0FBQSxDQUFBSyxNQUFNLEVBQzlCLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTixRQUFBLENBQUFPLE1BQU07UUFDTEMsSUFBSSxFQUFFLENBQUU7UUFDUkMsSUFBSSxFQUFDLFFBQVE7UUFDYkMsTUFBTSxFQUFDLFlBQVk7UUFDbkJlLFFBQVEsRUFBRSxLQUFNO1FBQ2hCZCxNQUFNLEVBQUM7TUFBa0IsRUFDekIsQ0FDSDtNQVJPZSxhQUFhLEdBQUFGLEtBQUEsQ0FBYkUsYUFBYTtJQVNyQmIsTUFBTSxDQUFDYSxhQUFhLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQ0MsUUFBUSxFQUFFO0lBQ2hEZCxNQUFNLENBQUNhLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDWixVQUFVLEVBQUU7RUFDakQsQ0FBQyxDQUFDO0VBRUZaLEVBQUUsQ0FBQywyQ0FBMkMsRUFBRSxZQUFLO0lBQ25ELElBQUEwQixLQUFBLEdBQTBCLElBQUE3QixjQUFBLENBQUFLLE1BQU0sRUFDOUIsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNOLFFBQUEsQ0FBQU8sTUFBTTtRQUNMQyxJQUFJLEVBQUUsQ0FBRTtRQUNSQyxJQUFJLEVBQUMsUUFBUTtRQUNiQyxNQUFNLEVBQUMsWUFBWTtRQUNuQmUsUUFBUSxFQUFFLElBQUs7UUFDZmQsTUFBTSxFQUFDO01BQWtCLEVBQ3pCLENBQ0g7TUFST2UsYUFBYSxHQUFBRSxLQUFBLENBQWJGLGFBQWE7SUFTckJiLE1BQU0sQ0FBQ2EsYUFBYSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUNaLFVBQVUsRUFBRTtFQUVwRCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==