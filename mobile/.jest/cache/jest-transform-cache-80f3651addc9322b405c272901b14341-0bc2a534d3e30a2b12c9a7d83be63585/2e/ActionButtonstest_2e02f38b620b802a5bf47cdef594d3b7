698d2f28283e7f82ee732a4e214c56f4
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/ActionButtons/ActionButtons.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var ActionButtons_1 = require("./ActionButtons");
var isLiked = false;
describe('ActionButtons Component', function () {
  it('renders admin menu button if isAdmin is true', function () {
    var handleAdminMenu = jest.fn();
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: true,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: handleAdminMenu,
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        handleShareLink: function handleShareLink() {},
        isLiked: isLiked
      })),
      getByTestId = _ref.getByTestId;
    var adminMenuButton = getByTestId('admin-menu-button');
    expect(adminMenuButton).toBeTruthy();
  });
  it('renders comment and like buttons', function () {
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref2.getByTestId;
    var commentButton = getByTestId('comment-button');
    var heart = isLiked ? 'heart' : 'heart-outline';
    var likeButton = getByTestId(heart);
    expect(commentButton).toBeTruthy();
    expect(likeButton).toBeTruthy();
  });
  it('calls handleAdminMenu when admin menu button is pressed', function () {
    var handleAdminMenu = jest.fn();
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: true,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: handleAdminMenu,
        handleComment: function handleComment() {},
        handleLike: function handleLike() {},
        handleShareLink: function handleShareLink() {},
        isLiked: isLiked
      })),
      getByTestId = _ref3.getByTestId;
    var adminMenuButton = getByTestId('admin-menu-button');
    react_native_1.fireEvent.press(adminMenuButton);
    expect(handleAdminMenu).toHaveBeenCalled();
  });
  it('calls handleComment when comment button is pressed', function () {
    var handleComment = jest.fn();
    var _ref4 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(ActionButtons_1.ActionButtons, {
        isAdmin: false,
        commCount: 5,
        likeCount: 10,
        handleAdminMenu: function handleAdminMenu() {},
        handleComment: handleComment,
        handleLike: function handleLike() {},
        isLiked: isLiked,
        handleShareLink: function handleShareLink() {}
      })),
      getByTestId = _ref4.getByTestId;
    var commentButton = getByTestId('comment-button');
    react_native_1.fireEvent.press(commentButton);
    expect(handleComment).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiQWN0aW9uQnV0dG9uc18xIiwiaXNMaWtlZCIsImRlc2NyaWJlIiwiaXQiLCJoYW5kbGVBZG1pbk1lbnUiLCJqZXN0IiwiZm4iLCJfcmVmIiwicmVuZGVyIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJBY3Rpb25CdXR0b25zIiwiaXNBZG1pbiIsImNvbW1Db3VudCIsImxpa2VDb3VudCIsImhhbmRsZUNvbW1lbnQiLCJoYW5kbGVMaWtlIiwiaGFuZGxlU2hhcmVMaW5rIiwiZ2V0QnlUZXN0SWQiLCJhZG1pbk1lbnVCdXR0b24iLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiX3JlZjIiLCJjb21tZW50QnV0dG9uIiwiaGVhcnQiLCJsaWtlQnV0dG9uIiwiX3JlZjMiLCJmaXJlRXZlbnQiLCJwcmVzcyIsInRvSGF2ZUJlZW5DYWxsZWQiLCJfcmVmNCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbGF5cmEvTGVlbGFBaVdlYjMvc3JjL2NvbXBvbmVudHMvQWN0aW9uQnV0dG9ucy9BY3Rpb25CdXR0b25zLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSdcblxuaW1wb3J0IHsgQWN0aW9uQnV0dG9ucyB9IGZyb20gJy4vQWN0aW9uQnV0dG9ucydcbmNvbnN0IGlzTGlrZWQgPSBmYWxzZVxuXG5kZXNjcmliZSgnQWN0aW9uQnV0dG9ucyBDb21wb25lbnQnLCAoKSA9PiB7XG4gIGl0KCdyZW5kZXJzIGFkbWluIG1lbnUgYnV0dG9uIGlmIGlzQWRtaW4gaXMgdHJ1ZScsICgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVBZG1pbk1lbnUgPSBqZXN0LmZuKClcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QWN0aW9uQnV0dG9uc1xuICAgICAgICBpc0FkbWluPXt0cnVlfVxuICAgICAgICBjb21tQ291bnQ9ezV9XG4gICAgICAgIGxpa2VDb3VudD17MTB9XG4gICAgICAgIGhhbmRsZUFkbWluTWVudT17aGFuZGxlQWRtaW5NZW51fVxuICAgICAgICBoYW5kbGVDb21tZW50PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZVNoYXJlTGluaz17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2lzTGlrZWR9XG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgYWRtaW5NZW51QnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2FkbWluLW1lbnUtYnV0dG9uJylcbiAgICBleHBlY3QoYWRtaW5NZW51QnV0dG9uKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgncmVuZGVycyBjb21tZW50IGFuZCBsaWtlIGJ1dHRvbnMnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPEFjdGlvbkJ1dHRvbnNcbiAgICAgICAgaXNBZG1pbj17ZmFsc2V9XG4gICAgICAgIGNvbW1Db3VudD17NX1cbiAgICAgICAgbGlrZUNvdW50PXsxMH1cbiAgICAgICAgaGFuZGxlQWRtaW5NZW51PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlQ29tbWVudD17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZUxpa2U9eygpID0+IHt9fVxuICAgICAgICBpc0xpa2VkPXtpc0xpa2VkfVxuICAgICAgICBoYW5kbGVTaGFyZUxpbms9eygpID0+IHt9fVxuICAgICAgLz4sXG4gICAgKVxuICAgIGNvbnN0IGNvbW1lbnRCdXR0b24gPSBnZXRCeVRlc3RJZCgnY29tbWVudC1idXR0b24nKVxuICAgIGNvbnN0IGhlYXJ0ID0gaXNMaWtlZCA/ICdoZWFydCcgOiAnaGVhcnQtb3V0bGluZSdcbiAgICBjb25zdCBsaWtlQnV0dG9uID0gZ2V0QnlUZXN0SWQoaGVhcnQpXG4gICAgZXhwZWN0KGNvbW1lbnRCdXR0b24pLnRvQmVUcnV0aHkoKVxuICAgIGV4cGVjdChsaWtlQnV0dG9uKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgnY2FsbHMgaGFuZGxlQWRtaW5NZW51IHdoZW4gYWRtaW4gbWVudSBidXR0b24gaXMgcHJlc3NlZCcsICgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVBZG1pbk1lbnUgPSBqZXN0LmZuKClcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QWN0aW9uQnV0dG9uc1xuICAgICAgICBpc0FkbWluPXt0cnVlfVxuICAgICAgICBjb21tQ291bnQ9ezV9XG4gICAgICAgIGxpa2VDb3VudD17MTB9XG4gICAgICAgIGhhbmRsZUFkbWluTWVudT17aGFuZGxlQWRtaW5NZW51fVxuICAgICAgICBoYW5kbGVDb21tZW50PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGhhbmRsZVNoYXJlTGluaz17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2lzTGlrZWR9XG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgYWRtaW5NZW51QnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2FkbWluLW1lbnUtYnV0dG9uJylcbiAgICBmaXJlRXZlbnQucHJlc3MoYWRtaW5NZW51QnV0dG9uKVxuICAgIGV4cGVjdChoYW5kbGVBZG1pbk1lbnUpLnRvSGF2ZUJlZW5DYWxsZWQoKVxuICB9KVxuXG4gIGl0KCdjYWxscyBoYW5kbGVDb21tZW50IHdoZW4gY29tbWVudCBidXR0b24gaXMgcHJlc3NlZCcsICgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVDb21tZW50ID0gamVzdC5mbigpXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPEFjdGlvbkJ1dHRvbnNcbiAgICAgICAgaXNBZG1pbj17ZmFsc2V9XG4gICAgICAgIGNvbW1Db3VudD17NX1cbiAgICAgICAgbGlrZUNvdW50PXsxMH1cbiAgICAgICAgaGFuZGxlQWRtaW5NZW51PXsoKSA9PiB7fX1cbiAgICAgICAgaGFuZGxlQ29tbWVudD17aGFuZGxlQ29tbWVudH1cbiAgICAgICAgaGFuZGxlTGlrZT17KCkgPT4ge319XG4gICAgICAgIGlzTGlrZWQ9e2lzTGlrZWR9XG4gICAgICAgIGhhbmRsZVNoYXJlTGluaz17KCkgPT4ge319XG4gICAgICAvPixcbiAgICApXG4gICAgY29uc3QgY29tbWVudEJ1dHRvbiA9IGdldEJ5VGVzdElkKCdjb21tZW50LWJ1dHRvbicpXG4gICAgZmlyZUV2ZW50LnByZXNzKGNvbW1lbnRCdXR0b24pXG4gICAgZXhwZWN0KGhhbmRsZUNvbW1lbnQpLnRvSGF2ZUJlZW5DYWxsZWQoKVxuICB9KVxufSlcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsZUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBTUcsT0FBTyxHQUFHLEtBQUs7QUFFckJDLFFBQVEsQ0FBQyx5QkFBeUIsRUFBRSxZQUFLO0VBQ3ZDQyxFQUFFLENBQUMsOENBQThDLEVBQUUsWUFBSztJQUN0RCxJQUFNQyxlQUFlLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ2pDLElBQUFDLElBQUEsR0FBd0IsSUFBQVIsY0FBQSxDQUFBUyxNQUFNLEVBQzVCLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDVixlQUFBLENBQUFXLGFBQWE7UUFDWkMsT0FBTyxFQUFFLElBQUs7UUFDZEMsU0FBUyxFQUFFLENBQUU7UUFDYkMsU0FBUyxFQUFFLEVBQUc7UUFDZFYsZUFBZSxFQUFFQSxlQUFnQjtRQUNqQ1csYUFBYSxFQUFFLFNBQUFBLGNBQUEsRUFBSyxDQUFFLENBQUU7UUFDeEJDLFVBQVUsRUFBRSxTQUFBQSxXQUFBLEVBQUssQ0FBRSxDQUFFO1FBQ3JCQyxlQUFlLEVB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