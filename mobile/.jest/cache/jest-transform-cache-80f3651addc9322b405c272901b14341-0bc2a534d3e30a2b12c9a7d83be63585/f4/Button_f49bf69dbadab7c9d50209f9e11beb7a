65bf8e9bfcbd3355a107026f26d84afa
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Buttons/Button/Button.tsx";
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Button = void 0;
var react_1 = __importStar(require("react"));
var react_native_1 = require("react-native");
var cons_1 = require("../../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var __1 = require("../..");
var Button = (0, react_1.memo)(function (_ref) {
  var title = _ref.title,
    onPress = _ref.onPress,
    textStyle = _ref.textStyle,
    style = _ref.style;
  var _ref2 = (0, react_1.useState)(false),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    isPressed = _ref3[0],
    setIsPressed = _ref3[1];
  var h = styles.h;
  var handlePressIn = function handlePressIn() {
    setIsPressed(true);
  };
  var handlePressOut = function handlePressOut() {
    setIsPressed(false);
    onPress && onPress();
  };
  return (0, _jsxRuntime.jsx)(react_native_1.Pressable, {
    onPress: onPress,
    onPressIn: handlePressIn,
    onPressOut: handlePressOut,
    style: [styles.container, style],
    children: isPressed ? (0, _jsxRuntime.jsx)(__1.NeomorphFlexView, {
      viewStyle: styles.card,
      children: (0, _jsxRuntime.jsx)(__1.Text, {
        testID: "button-container",
        h: "h1",
        textStyle: [h, textStyle],
        title: title,
        oneColor: cons_1.dimGray
      })
    }) : (0, _jsxRuntime.jsx)(__1.NeomorphView, {
      viewStyle: styles.card,
      children: (0, _jsxRuntime.jsx)(__1.Text, {
        h: "h1",
        textStyle: [h, textStyle],
        title: title,
        testID: "button-title"
      })
    })
  });
});
exports.Button = Button;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    width: (0, react_native_size_matters_1.ms)(230, 0.9),
    height: (0, react_native_size_matters_1.ms)(60, 0.9)
  },
  h: {
    textAlign: 'center'
  },
  card: {
    width: (0, react_native_size_matters_1.ms)(230, 0.9),
    height: (0, react_native_size_matters_1.ms)(60, 0.9),
    borderRadius: (0, react_native_size_matters_1.s)(40),
    justifyContent: 'center',
    alignSelf: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnRTdGFyIiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiY29uc18xIiwicmVhY3RfbmF0aXZlX3NpemVfbWF0dGVyc18xIiwiX18xIiwiQnV0dG9uIiwibWVtbyIsIl9yZWYiLCJ0aXRsZSIsIm9uUHJlc3MiLCJ0ZXh0U3R5bGUiLCJzdHlsZSIsIl9yZWYyIiwidXNlU3RhdGUiLCJfcmVmMyIsIl9zbGljZWRUb0FycmF5MiIsImRlZmF1bHQiLCJpc1ByZXNzZWQiLCJzZXRJc1ByZXNzZWQiLCJoIiwic3R5bGVzIiwiaGFuZGxlUHJlc3NJbiIsImhhbmRsZVByZXNzT3V0IiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJQcmVzc2FibGUiLCJvblByZXNzSW4iLCJvblByZXNzT3V0IiwiY29udGFpbmVyIiwiY2hpbGRyZW4iLCJOZW9tb3JwaEZsZXhWaWV3Iiwidmlld1N0eWxlIiwiY2FyZCIsIlRleHQiLCJ0ZXN0SUQiLCJvbmVDb2xvciIsImRpbUdyYXkiLCJOZW9tb3JwaFZpZXciLCJleHBvcnRzIiwiU2NhbGVkU2hlZXQiLCJjcmVhdGUiLCJ3aWR0aCIsIm1zIiwiaGVpZ2h0IiwidGV4dEFsaWduIiwiYm9yZGVyUmFkaXVzIiwicyIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25TZWxmIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9CdXR0b25zL0J1dHRvbi9CdXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyBTdHlsZVByb3AsIFRleHRTdHlsZSwgUHJlc3NhYmxlLCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnXG5cbmltcG9ydCB7IGRpbUdyYXkgfSBmcm9tICdjb25zJ1xuaW1wb3J0IHsgU2NhbGVkU2hlZXQsIG1zLCBzIH0gZnJvbSAncmVhY3QtbmF0aXZlLXNpemUtbWF0dGVycydcblxuaW1wb3J0IHsgVGV4dCwgTmVvbW9ycGhWaWV3LCBOZW9tb3JwaEZsZXhWaWV3IH0gZnJvbSAnLi4vLi4nIC8vINCf0L7QtNC60LvRjtGH0LjRgtC1INC90LXQvtCx0YXQvtC00LjQvNGL0LUg0LrQvtC80L/QvtC90LXQvdGC0YtcblxuaW50ZXJmYWNlIEJ1dHRvblQge1xuICB0aXRsZTogc3RyaW5nXG4gIG9uUHJlc3M/OiAoKSA9PiB2b2lkXG4gIHRleHRTdHlsZT86IFN0eWxlUHJvcDxUZXh0U3R5bGU+XG4gIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT5cbn1cblxuY29uc3QgQnV0dG9uID0gbWVtbzxCdXR0b25UPigoeyB0aXRsZSwgb25QcmVzcywgdGV4dFN0eWxlLCBzdHlsZSB9KSA9PiB7XG4gIGNvbnN0IFtpc1ByZXNzZWQsIHNldElzUHJlc3NlZF0gPSB1c2VTdGF0ZShmYWxzZSlcblxuICBjb25zdCB7IGggfSA9IHN0eWxlc1xuXG4gIGNvbnN0IGhhbmRsZVByZXNzSW4gPSAoKSA9PiB7XG4gICAgc2V0SXNQcmVzc2VkKHRydWUpXG4gIH1cblxuICBjb25zdCBoYW5kbGVQcmVzc091dCA9ICgpID0+IHtcbiAgICBzZXRJc1ByZXNzZWQoZmFsc2UpXG4gICAgb25QcmVzcyAmJiBvblByZXNzKClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPFByZXNzYWJsZVxuICAgICAgb25QcmVzcz17b25QcmVzc31cbiAgICAgIG9uUHJlc3NJbj17aGFuZGxlUHJlc3NJbn1cbiAgICAgIG9uUHJlc3NPdXQ9e2hhbmRsZVByZXNzT3V0fVxuICAgICAgc3R5bGU9e1tzdHlsZXMuY29udGFpbmVyLCBzdHlsZV19XG4gICAgPlxuICAgICAge2lzUHJlc3NlZCA/IChcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICA8TmVvbW9ycGhGbGV4VmlldyB2aWV3U3R5bGU9e3N0eWxlcy5jYXJkfT5cbiAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgdGVzdElEPVwiYnV0dG9uLWNvbnRhaW5lclwiXG4gICAgICAgICAgICBoPVwiaDFcIlxuICAgICAgICAgICAgdGV4dFN0eWxlPXtbaCwgdGV4dFN0eWxlXX1cbiAgICAgICAgICAgIHRpdGxlPXt0aXRsZX1cbiAgICAgICAgICAgIG9uZUNvbG9yPXtkaW1HcmF5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvTmVvbW9ycGhGbGV4Vmlldz5cbiAgICAgICkgOiAoXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgPE5lb21vcnBoVmlldyB2aWV3U3R5bGU9e3N0eWxlcy5jYXJkfT5cbiAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgaD1cImgxXCJcbiAgICAgICAgICAgIHRleHRTdHlsZT17W2gsIHRleHRTdHlsZV19XG4gICAgICAgICAgICB0aXRsZT17dGl0bGV9XG4gICAgICAgICAgICB0ZXN0SUQ9XCJidXR0b24tdGl0bGVcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvTmVvbW9ycGhWaWV3PlxuICAgICAgKX1cbiAgICA8L1ByZXNzYWJsZT5cbiAgKVxufSlcblxuY29uc3Qgc3R5bGVzID0gU2NhbGVkU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgd2lkdGg6IG1zKDIzMCwgMC45KSxcbiAgICBoZWlnaHQ6IG1zKDYwLCAwLjkpLFxuICB9LFxuICBoOiB7XG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgfSxcbiAgY2FyZDoge1xuICAgIHdpZHRoOiBtcygyMzAsIDAuOSksXG4gICAgaGVpZ2h0OiBtcyg2MCwgMC45KSxcbiAgICBib3JkZXJSYWRpdXM6IHMoNDApLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICB9LFxufSlcblxuZXhwb3J0IHsgQnV0dG9uIH1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxZQUFB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