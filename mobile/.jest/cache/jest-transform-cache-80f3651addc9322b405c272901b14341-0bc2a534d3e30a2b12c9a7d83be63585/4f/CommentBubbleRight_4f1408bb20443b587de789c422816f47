827d09fb42cab8d3b7070e77ea772384
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/CommentBubbleRight/CommentBubbleRight.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommentBubbleRight = void 0;
var react_1 = __importDefault(require("react"));
var react_native_1 = require("react-native");
var components_1 = require("./..");
var cons_1 = require("../../cons");
var react_native_size_matters_1 = require("react-native-size-matters");
var CommentBubbleRight = function CommentBubbleRight(_ref) {
  var post = _ref.post,
    onPress = _ref.onPress,
    fullName = _ref.fullName,
    avatar = _ref.avatar,
    date = _ref.date,
    handleProfile = _ref.handleProfile;
  return (0, _jsxRuntime.jsx)(components_1.NeomorphFlexView, {
    children: (0, _jsxRuntime.jsx)(react_native_1.View, {
      style: styles.container,
      children: (0, _jsxRuntime.jsxs)(react_native_1.Pressable, {
        onPress: onPress,
        testID: "comment-bubble-right-container",
        children: [(0, _jsxRuntime.jsxs)(react_native_1.View, {
          style: styles.bubbleStyle,
          children: [(0, _jsxRuntime.jsxs)(react_native_1.View, {
            style: styles.headerName,
            children: [(0, _jsxRuntime.jsx)(components_1.Text, {
              h: 'h4',
              textStyle: styles.lightText,
              title: post.text || ' ',
              testID: "comment-bubble-right-comment"
            }), (0, _jsxRuntime.jsx)(components_1.Space, {
              height: (0, react_native_size_matters_1.vs)(5)
            }), (0, _jsxRuntime.jsx)(components_1.Text, {
              title: fullName,
              h: 'h4',
              numberOfLines: 1,
              textStyle: styles.nameStyle,
              testID: "comment-bubble-right-fullName"
            }), (0, _jsxRuntime.jsx)(components_1.Space, {
              height: (0, react_native_size_matters_1.vs)(2)
            }), (0, _jsxRuntime.jsx)(components_1.Text, {
              title: date,
              h: 'h5',
              textStyle: styles.dateStyle,
              testID: "comment-bubble-right-date"
            })]
          }), (0, _jsxRuntime.jsx)(components_1.Avatar, {
            avatar: avatar,
            onPress: handleProfile,
            size: 'medium',
            plan: post.plan,
            isAccept: post.accept,
            aditionalStyle: styles.img,
            testID: "avatar-bubble-right"
          })]
        }), (0, _jsxRuntime.jsx)(components_1.Space, {
          height: (0, react_native_size_matters_1.vs)(2)
        }), (0, _jsxRuntime.jsx)(react_native_1.View, {
          style: styles.headerName
        })]
      })
    })
  });
};
exports.CommentBubbleRight = CommentBubbleRight;
var styles = react_native_size_matters_1.ScaledSheet.create({
  container: {
    paddingHorizontal: (0, react_native_size_matters_1.s)(10),
    paddingTop: (0, react_native_size_matters_1.s)(20),
    paddingBottom: (0, react_native_size_matters_1.s)(10)
  },
  img: {
    top: 9
  },
  headerName: {
    alignItems: 'flex-end'
  },
  lightText: {
    textAlign: 'right',
    maxWidth: cons_1.W - 120,
    paddingRight: 10
  },
  nameStyle: {
    paddingRight: 10,
    fontWeight: 'bold'
  },
  dateStyle: {
    paddingRight: 10
  },
  bubbleStyle: {
    flexDirection: 'row',
    alignSelf: 'flex-start'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,