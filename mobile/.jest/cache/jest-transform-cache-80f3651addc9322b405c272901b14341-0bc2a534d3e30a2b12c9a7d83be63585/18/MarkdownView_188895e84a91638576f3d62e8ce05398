e00d327198accc8f0d742abc8d8bcf69
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MarkdownView = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _ = require("./..");
var _cons = require("../../cons");
var _reactNativeMarkdownDisplay = _interopRequireDefault(require("react-native-markdown-display"));
var _reactNativeSizeMatters = require("react-native-size-matters");
var _Space = require("../Space/Space");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/MarkdownView/MarkdownView.jsx";
var MarkdownView = function MarkdownView(_ref) {
  var markdown = _ref.markdown,
    children = _ref.children;
  return (0, _jsxRuntime.jsx)(_.NeomorphView, {
    children: (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
      showsVerticalScrollIndicator: false,
      contentInsetAdjustmentBehavior: "automatic",
      style: styles.container,
      children: [(0, _jsxRuntime.jsx)(_reactNativeMarkdownDisplay.default, {
        style: styles,
        children: markdown
      }), (0, _jsxRuntime.jsx)(_Space.Space, {
        height: (0, _reactNativeSizeMatters.s)(10)
      }), (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.input,
        children: children
      }), (0, _jsxRuntime.jsx)(_Space.Space, {
        height: (0, _reactNativeSizeMatters.s)(100)
      })]
    })
  });
};
exports.MarkdownView = MarkdownView;
var styles = _reactNative.StyleSheet.create({
  body: {
    color: _cons.gray,
    fontFamily: 'Montserrat-Regular',
    fontSize: _reactNative.Platform.OS === 'ios' ? (0, _reactNativeSizeMatters.s)(15) : (0, _reactNativeSizeMatters.s)(15),
    fontWeight: 'normal'
  },
  container: {
    alignSelf: 'center',
    height: '100%',
    paddingHorizontal: 15,
    paddingVertical: 20,
    width: '90%'
  },
  heading1: {
    color: _cons.gray,
    fontFamily: _reactNative.Platform.OS === 'ios' ? 'mont' : 'mont',
    fontSize: _reactNative.Platform.OS === 'ios' ? (0, _reactNativeSizeMatters.ms)(25, 0.5) : (0, _reactNativeSizeMatters.ms)(30, 0.3),
    fontWeight: 'bold',
    textShadowOffset: {
      width: 1,
      height: 1
    },
    textShadowRadius: 1
  },
  heading2: {
    color: _cons.gray,
    fontFamily: 'mont',
    fontSize: _reactNative.Platform.OS === 'ios' ? (0, _reactNativeSizeMatters.s)(20) : (0, _reactNativeSizeMatters.s)(20)
  },
  heading3: {
    color: _cons.gray,
    fontFamily: 'mont',
    fontSize: _reactNative.Platform.OS === 'ios' ? (0, _reactNativeSizeMatters.ms)(18, 0.6) : (0, _reactNativeSizeMatters.ms)(18, 0.6),
    textShadowOffset: {
      width: 1,
      height: 1
    },
    textShadowRadius: 1
  },
  heading4: {
    color: _cons.gray,
    fontFamily: 'mont',
    fontSize: _reactNative.Platform.OS === 'ios' ? (0, _reactNativeSizeMatters.ms)(15, 0.8) : (0, _reactNativeSizeMatters.s)(15),
    textShadowRadius: 1
  },
  heading5: {
    color: _cons.gray,
    fontFamily: _reactNative.Platform.OS === 'ios' ? 'mont' : 'mont',
    fontSize: _reactNative.Platform.OS === 'ios' ? (0, _reactNativeSizeMatters.s)(15) : (0, _reactNativeSizeMatters.s)(15)
  },
  heading6: {
    color: _cons.gray,
    fontFamily: 'mont',
    fontSize: _reactNative.Platform.OS === 'ios' ? (0, _reactNativeSizeMatters.s)(15) : (0, _reactNativeSizeMatters.s)(15)
  },
  input: {
    alignSelf: 'center',
    width: _cons.W
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,