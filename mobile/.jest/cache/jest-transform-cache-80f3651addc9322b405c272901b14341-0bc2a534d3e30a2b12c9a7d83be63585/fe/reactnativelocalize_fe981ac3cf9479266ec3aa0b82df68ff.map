{"version":3,"names":["getLocales","countryCode","languageTag","languageCode","isRTL","exports","findBestAvailableLanguage","getNumberFormatSettings","decimalSeparator","groupingSeparator","getCalendar","getCountry","getCurrencies","getTemperatureUnit","getTimeZone","uses24HourClock","usesMetricSystem","addEventListener","jest","fn","removeEventListener"],"sources":["react-native-localize.js"],"sourcesContent":["export const getLocales = () => [\n  // you can choose / add the locales you want\n  { countryCode: 'US', languageTag: 'en-US', languageCode: 'en', isRTL: false },\n  { countryCode: 'FR', languageTag: 'fr-FR', languageCode: 'fr', isRTL: false }\n]\n\n// use a provided translation, or return undefined to test your fallback\nexport const findBestAvailableLanguage = () => ({\n  languageTag: 'en-US',\n  isRTL: false\n})\n\nexport const getNumberFormatSettings = () => ({\n  decimalSeparator: '.',\n  groupingSeparator: ','\n})\n\nexport const getCalendar = () => 'gregorian' // or \"japanese\", \"buddhist\"\nexport const getCountry = () => 'US' // the country code you want\nexport const getCurrencies = () => ['USD', 'EUR'] // can be empty array\nexport const getTemperatureUnit = () => 'celsius' // or \"fahrenheit\"\nexport const getTimeZone = () => 'Europe/Paris' // the timezone you want\nexport const uses24HourClock = () => true\nexport const usesMetricSystem = () => true\n\nexport const addEventListener = jest.fn()\nexport const removeEventListener = jest.fn()\n"],"mappings":";;;;AAAO,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CAAA;EAAA,OAAS,CAE9B;IAAEC,WAAW,EAAE,IAAI;IAAEC,WAAW,EAAE,OAAO;IAAEC,YAAY,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC7E;IAAEH,WAAW,EAAE,IAAI;IAAEC,WAAW,EAAE,OAAO;IAAEC,YAAY,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAM,CAAC,CAC9E;AAAA;AAAAC,OAAA,CAAAL,UAAA,GAAAA,UAAA;AAGM,IAAMM,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA;EAAA,OAAU;IAC9CJ,WAAW,EAAE,OAAO;IACpBE,KAAK,EAAE;EACT,CAAC;AAAA,CAAC;AAAAC,OAAA,CAAAC,yBAAA,GAAAA,yBAAA;AAEK,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA;EAAA,OAAU;IAC5CC,gBAAgB,EAAE,GAAG;IACrBC,iBAAiB,EAAE;EACrB,CAAC;AAAA,CAAC;AAAAJ,OAAA,CAAAE,uBAAA,GAAAA,uBAAA;AAEK,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,OAAS,WAAW;AAAA;AAAAL,OAAA,CAAAK,WAAA,GAAAA,WAAA;AACrC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA;EAAA,OAAS,IAAI;AAAA;AAAAN,OAAA,CAAAM,UAAA,GAAAA,UAAA;AAC7B,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA;EAAA,OAAS,CAAC,KAAK,EAAE,KAAK,CAAC;AAAA;AAAAP,OAAA,CAAAO,aAAA,GAAAA,aAAA;AAC1C,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA;EAAA,OAAS,SAAS;AAAA;AAAAR,OAAA,CAAAQ,kBAAA,GAAAA,kBAAA;AAC1C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,OAAS,cAAc;AAAA;AAAAT,OAAA,CAAAS,WAAA,GAAAA,WAAA;AACxC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA;EAAA,OAAS,IAAI;AAAA;AAAAV,OAAA,CAAAU,eAAA,GAAAA,eAAA;AAClC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA;EAAA,OAAS,IAAI;AAAA;AAAAX,OAAA,CAAAW,gBAAA,GAAAA,gBAAA;AAEnC,IAAMC,gBAAgB,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;AAAAd,OAAA,CAAAY,gBAAA,GAAAA,gBAAA;AAClC,IAAMG,mBAAmB,GAAGF,IAAI,CAACC,EAAE,CAAC,CAAC;AAAAd,OAAA,CAAAe,mBAAA,GAAAA,mBAAA"}